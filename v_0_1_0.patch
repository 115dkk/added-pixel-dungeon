Index: android/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- android/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ android/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@mipmap/ic_launcher_background"/>
+    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
+</adaptive-icon>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ build.gradle	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -4,18 +4,18 @@
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.5.1'
+        classpath 'com.android.tools.build:gradle:3.5.3'
     }
 }
 
 allprojects {
 
     ext {
-        appName = 'Shattered Pixel Dungeon'
-        appPackageName = 'com.shatteredpixel.shatteredpixeldungeon'
+        appName = 'Added Pixel Dungeon'
+        appPackageName = 'com.addedpixel.addedpixeldungeon'
 
-        appVersionCode = 382
-        appVersionName = '0.7.5e'
+        appVersionCode = 383
+        appVersionName = '0.7.5e_added_0.1.0'
 
         appAndroidCompileSDK = 29
         appAndroidMinSDK = 9
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Assets.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Assets.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Assets.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -102,6 +102,12 @@
 	public static final String SLIME	= "slime.png";
 	public static final String SNAKE	= "snake.png";
 	public static final String NECRO	= "necromancer.png";
+	// AddedPD
+	public static final String CLERIC	= "cleric.png";
+	public static final String MIRACLE	= "cleric_miracle.png";
+	public static final String DWARFHERO	= "dwarfhero.png";
+	public static final String NECROGOLEM	= "golem2.png";
+	public static final String DWARF_NPC	= "dwarf_npc.png";
 
 	public static final String ITEMS	        = "items.png";
 	public static final String TERRAIN_FEATURES	= "terrain_features.png";
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Badges.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Badges.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Badges.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -137,7 +137,30 @@
 		GAMES_PLAYED_1( 60, true ),
 		GAMES_PLAYED_2( 61, true ),
 		GAMES_PLAYED_3( 62, true ),
-		GAMES_PLAYED_4( 63, true );
+		GAMES_PLAYED_4( 63, true ),
+		// AddedPD
+		UNLOCK_CLERIC(68),
+		UNLOCK_DWARF(69),
+		UNLOCK_SORCERER(70),
+		MASTERY_CLERIC,
+		MASTERY_DWARF,
+		BOSS_SLAIN_1_CLERIC,
+		BOSS_SLAIN_1_DWARF,
+		BOSS_SLAIN_1_ALL_ADDED_CLASSES( 71, true ),
+		BOSS_SLAIN_3_CRUSADER,
+		BOSS_SLAIN_3_SCHOLAR,
+		BOSS_SLAIN_3_REDEEMER,
+		BOSS_SLAIN_3_THUNDERBRINGER,
+		BOSS_SLAIN_3_MONK,
+		BOSS_SLAIN_3_NECROSMITH,
+		BOSS_SLAIN_3_SEALKNIGHT,
+		BOSS_SLAIN_3_RUNEMAGE,
+		BOSS_SLAIN_3_BURGLAR,
+		BOSS_SLAIN_3_SPIRITWALKER,
+		BOSS_SLAIN_3_ALL_ADDED_SUBCLASSES( 72, true ),
+		VICTORY_CLERIC,
+		VICTORY_DWARF,
+		VICTORY_ALL_ADDED_CLASSES( 73, true );
 
 		public boolean meta;
 
@@ -605,6 +628,17 @@
 						saveNeeded = true;
 					}
 				}
+
+				if (global.contains( Badge.BOSS_SLAIN_1_CLERIC ) &&
+						global.contains( Badge.BOSS_SLAIN_1_DWARF )) {
+
+					badge = Badge.BOSS_SLAIN_1_ALL_ADDED_CLASSES;
+					if (!global.contains( badge )) {
+						displayBadge( badge );
+						global.add( badge );
+						saveNeeded = true;
+					}
+				}
 			} else
 			if (badge == Badge.BOSS_SLAIN_3) {
 				switch (Dungeon.hero.subClass) {
@@ -657,6 +691,25 @@
 						saveNeeded = true;
 					}
 				}
+
+				if (global.contains( Badge.BOSS_SLAIN_3_SEALKNIGHT ) &&
+						global.contains( Badge.BOSS_SLAIN_3_RUNEMAGE ) &&
+						global.contains( Badge.BOSS_SLAIN_3_BURGLAR) &&
+						global.contains( Badge.BOSS_SLAIN_3_SPIRITWALKER ) &&
+						global.contains( Badge.BOSS_SLAIN_3_CRUSADER ) &&
+						global.contains( Badge.BOSS_SLAIN_3_SCHOLAR ) &&
+						global.contains( Badge.BOSS_SLAIN_3_REDEEMER ) &&
+						global.contains( Badge.BOSS_SLAIN_3_THUNDERBRINGER) &&
+						global.contains( Badge.BOSS_SLAIN_3_MONK ) &&
+						global.contains( Badge.BOSS_SLAIN_3_NECROSMITH )) {
+
+					badge = Badge.BOSS_SLAIN_3_ALL_ADDED_SUBCLASSES;
+					if (!global.contains( badge )) {
+						displayBadge( badge );
+						global.add( badge );
+						saveNeeded = true;
+					}
+				}
 			}
 		}
 	}
@@ -678,7 +731,7 @@
 			badge = Badge.MASTERY_HUNTRESS;
 			break;
 		}
-		
+
 		if (!global.contains( badge )) {
 			global.add( badge );
 			saveNeeded = true;
@@ -702,6 +755,18 @@
 			displayBadge( Badge.UNLOCK_HUNTRESS );
 		}
 	}
+
+	public static void validateClericUnlock(){
+		if (!global.contains(Badge.UNLOCK_CLERIC)){
+			displayBadge( Badge.UNLOCK_CLERIC );
+		}
+	}
+
+	public static void validateDwarfUnlock(){
+		if (!global.contains(Badge.UNLOCK_DWARF)){
+			displayBadge( Badge.UNLOCK_DWARF );
+		}
+	}
 	
 	public static void validateMasteryCombo( int n ) {
 		if (!local.contains( Badge.MASTERY_COMBO ) && n == 10) {
@@ -745,6 +810,51 @@
 			displayBadge( badge );
 		}
 	}
+
+	public static void validateAddedMastery() {
+
+		Badge badge = null;
+		switch (Dungeon.hero.heroClass) {
+			case CLERIC:
+				badge = Badge.MASTERY_CLERIC;
+				break;
+			case DWARF:
+				badge = Badge.MASTERY_DWARF;
+				break;
+		}
+
+		if (!global.contains( badge )) {
+			global.add( badge );
+			saveNeeded = true;
+		}
+	}
+
+	public static void validateAddedVictory() {
+
+		Badge badge = Badge.VICTORY;
+		displayBadge( badge );
+
+		switch (Dungeon.hero.heroClass) {
+			case CLERIC:
+				badge = Badge.VICTORY_CLERIC;
+				break;
+			case DWARF:
+				badge = Badge.VICTORY_DWARF;
+				break;
+		}
+		local.add( badge );
+		if (!global.contains( badge )) {
+			global.add( badge );
+			saveNeeded = true;
+		}
+
+		if (global.contains( Badge.VICTORY_CLERIC ) &&
+				global.contains( Badge.VICTORY_DWARF )) {
+
+			badge = Badge.VICTORY_ALL_ADDED_CLASSES;
+			displayBadge( badge );
+		}
+	}
 
 	public static void validateNoKilling() {
 		if (!local.contains( Badge.NO_MONSTERS_SLAIN ) && Statistics.completedWithNoKilling) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Bones.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Bones.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Bones.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -22,6 +22,7 @@
 package com.shatteredpixel.shatteredpixeldungeon;
 
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.items.Ankh;
 import com.shatteredpixel.shatteredpixeldungeon.items.Generator;
 import com.shatteredpixel.shatteredpixeldungeon.items.Gold;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
@@ -177,6 +178,9 @@
 					//thrown weapons are always IDed, otherwise set unknown
 					item.levelKnown = item instanceof MissileWeapon;
 				}
+
+				// AddedPD : only cleric can use enlightened item
+				if (item.enlightened) { return new Gold(item.price()); }
 				
 				item.reset();
 				
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Dungeon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Dungeon.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/Dungeon.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -106,7 +106,10 @@
 		VELVET_POUCH,
 		SCROLL_HOLDER,
 		POTION_BANDOLIER,
-		MAGICAL_HOLSTER;
+		MAGICAL_HOLSTER,
+
+		//AddedPD
+		FORTRESS;
 
 		public int count = 0;
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/Char.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/Char.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/Char.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -28,8 +28,11 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.ToxicGas;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Adrenaline;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.ArcaneArmor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Baptized;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Barrier;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bleeding;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bless;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Blindness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Burning;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Charm;
@@ -37,7 +40,10 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Corrosion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Corruption;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Cripple;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Doom;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfArmorBuff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfFocus;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.EarthImbue;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.FireImbue;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Frost;
@@ -45,6 +51,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Hunger;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicalSleep;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.OnBlessedWater;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Ooze;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Paralysis;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Poison;
@@ -57,16 +64,23 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Vertigo;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShaftParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.BrokenSeal;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.AntiMagic;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Brimstone;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Potential;
+import com.shatteredpixel.shatteredpixeldungeon.items.bombs.HolyBomb;
 import com.shatteredpixel.shatteredpixeldungeon.items.rings.RingOfElements;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRetribution;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfTeleportation;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.exotic.ScrollOfPsionicBlast;
 import com.shatteredpixel.shatteredpixeldungeon.items.stones.StoneOfAggression;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfFireblast;
+import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfFrost;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfLightning;
+import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfPrismaticLight;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.enchantments.Blazing;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.enchantments.Grim;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.enchantments.Shocking;
@@ -77,12 +91,17 @@
 import com.shatteredpixel.shatteredpixeldungeon.levels.features.Door;
 import com.shatteredpixel.shatteredpixeldungeon.levels.traps.GrimTrap;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndOptions;
 import com.watabou.noosa.Camera;
+import com.watabou.noosa.Game;
 import com.watabou.noosa.audio.Sample;
+import com.watabou.noosa.tweeners.AlphaTweener;
 import com.watabou.utils.Bundlable;
 import com.watabou.utils.Bundle;
+import com.watabou.utils.Callback;
 import com.watabou.utils.GameMath;
 import com.watabou.utils.PathFinder;
 import com.watabou.utils.Random;
@@ -133,11 +152,62 @@
 	}
 
 	public boolean canInteract( Hero h ){
+		if (isBaptized()) {
+			// AddedPD : redeemer can recall or dismiss baptized ally
+			return true;
+		}
 		return Dungeon.level.adjacent( pos, h.pos );
 	}
 	
 	//swaps places by default
 	public boolean interact(){
+		// AddedPD : redeemer can recall or dismiss baptized ally
+		if (isBaptized() && !Dungeon.level.adjacent( pos, Dungeon.hero.pos )) {
+			Char ally = Char.this;
+			Game.runOnRenderThread(new Callback() {
+				@Override
+				public void call() {
+					GameScene.show(new WndOptions(
+							Messages.get(Devotion.class, "interact_title"),
+							Messages.get(Devotion.class, "interact_prompt", name),
+							Messages.get(Devotion.class, "interact_recall"),
+							Messages.get(Devotion.class, "interact_dismiss"),
+							Messages.get(Devotion.class, "interact_cancel")){
+						@Override
+						protected void onSelect(int index) {
+							if (index == 0){
+								int bestPos = -1;
+								for (int i = 0; i < PathFinder.NEIGHBOURS8.length; i++) {
+									int p = Dungeon.hero.pos + PathFinder.NEIGHBOURS8[i];
+									if (Actor.findChar( p ) == null && Dungeon.level.passable[p]) {
+										if (bestPos == -1){ bestPos = p; } } }
+
+								if (bestPos != -1) {
+									GLog.i( Messages.get(Devotion.class, "interact_recall_on", ally.name) );
+
+									ScrollOfTeleportation.appear( ally, bestPos );
+
+									Sample.INSTANCE.play( Assets.SND_TELEPORT );
+									ally.sprite.emitter().start( Speck.factory(Speck.LIGHT), 0.2f, 3 );
+									Dungeon.hero.spendAndNext(Actor.TICK);
+
+									if (ally.invisible == 0) {
+										ally.sprite.alpha( 0 );
+										ally.sprite.parent.add( new AlphaTweener( ally.sprite, 1, 0.4f ) );
+									}
+
+								} else { GLog.i( Messages.get(Devotion.class, "interact_recall_fail", ally.name) ); }
+							}
+
+							if (index == 1) {
+								GLog.p( Messages.get(Devotion.class, "interact_dismiss_on", ally.name) );
+								CellEmitter.get(ally.pos).start( ShaftParticle.FACTORY, 0.3f, 4 );
+								ally.destroy();
+								ally.sprite.kill();
+								Dungeon.hero.spendAndNext(Actor.TICK);
+							} }	}); }	});
+			return true;
+		}
 		
 		if (!Dungeon.level.passable[pos] && !Dungeon.hero.flying){
 			return true;
@@ -223,6 +293,7 @@
 		if (hit( this, enemy, false )) {
 			
 			int dr = enemy.drRoll();
+			float chargedHit = 0;
 			
 			if (this instanceof Hero){
 				Hero h = (Hero)this;
@@ -231,8 +302,18 @@
 						&& !Dungeon.level.adjacent(h.pos, enemy.pos)){
 					dr = 0;
 				}
+
+				// AddedPD : for sealknight; Potential charge bypass enemy dr, such like 'magic attack'
+				if (h.subClass == HeroSubClass.SEALKNIGHT && h.buff(Potential.SealCharge.class) != null) {
+					Potential.SealCharge sealCharge = buff(Potential.SealCharge.class);
+					int bypass = sealCharge.getDamage();
+					dr = Math.max(0, dr - bypass);
+					sealCharge.costDamage(Math.max(dr, bypass-dr));
+					chargedHit = Math.max(dr, bypass-dr);
+					CellEmitter.center(enemy.pos).burst( Speck.factory( Speck.FORGE ), 4 );
+				}
 			}
-			
+
 			int dmg;
 			Preparation prep = buff(Preparation.class);
 			if (prep != null){
@@ -246,6 +327,9 @@
 			effectiveDamage = attackProc( enemy, effectiveDamage );
 			
 			if (visibleFight) {
+				if (chargedHit > 0) {
+					Sample.INSTANCE.play( Assets.SND_EVOKE, 1, 1, Random.Float( 0.8f, 1.25f ) );
+				} else
 				Sample.INSTANCE.play( Assets.SND_HIT, 1, 1, Random.Float( 0.8f, 1.25f ) );
 			}
 
@@ -348,6 +432,8 @@
 		if ( buff( Stamina.class ) != null) speed *= 1.5f;
 		if ( buff( Adrenaline.class ) != null) speed *= 2f;
 		if ( buff( Haste.class ) != null) speed *= 3f;
+		// AddedPD : scholar's holy water
+		if ( buff( OnBlessedWater.class ) != null ) speed *= 0.75f;
 		return speed;
 	}
 	
@@ -460,6 +546,10 @@
 		if (buff( Speed.class ) != null) {
 			timeScale *= 2.0f;
 		}
+		// AddedPD : Dwarf's epic armor's ability = perform all action as twice as faster
+		if (buff (DwarfArmorBuff.class) != null) {
+			timeScale *= 2.0f;
+		}
 		
 		super.spend( time / timeScale );
 	}
@@ -498,6 +588,16 @@
 		}
 		return false;
 	}
+
+	// AddedPD : for redeemer
+	public synchronized boolean isBaptized() {
+		for (Buff b : buffs) {
+			if (b instanceof Baptized) {
+				return true;
+			}
+		}
+		return false;
+	}
 
 	public synchronized void add( Buff buff ) {
 		
@@ -657,6 +757,15 @@
 				new HashSet<Class>( Arrays.asList(Ooze.class))),
 		ELECTRIC ( new HashSet<Class>( Arrays.asList(WandOfLightning.class, Shocking.class, Potential.class, Electricity.class, ShockingDart.class)),
 				new HashSet<Class>()),
+		// AddedPD:
+		// ICE mobs are water/ice/frost related
+		ICE ( new HashSet<Class>( Arrays.asList(WandOfFrost.class)),
+				new HashSet<Class>( Arrays.asList(Chill.class, Frost.class))),
+		// LIGHT mobs are holy/light related, so never be shaken
+		LIGHT ( new HashSet<Class>( Arrays.asList(WandOfPrismaticLight.class, HolyBomb.class)),
+				new HashSet<Class>( Arrays.asList(Corruption.class, Charm.class, Terror.class, Vertigo.class, Blindness.class))),
+		// MAGICAL mobs are spellcaster
+		MAGICAL,
 		IMMOVABLE;
 		
 		private HashSet<Class> resistances;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/BlessedWater.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/BlessedWater.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/BlessedWater.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,110 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.blobs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Cripple;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.FlavourBuff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.OnBlessedWater;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Slow;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.BlobEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.noosa.Image;
+import com.watabou.utils.PathFinder;
+
+public class BlessedWater extends Blob {
+
+	private boolean[] water;
+
+	@Override
+	protected void evolve() {
+
+		water = Dungeon.level.water;
+		int cell;
+
+		//spread first..
+		for (int i = area.left-1; i <= area.right; i++) {
+			for (int j = area.top-1; j <= area.bottom; j++) {
+				cell = i + j*Dungeon.level.width();
+
+				if (cur[cell] > 0) {
+					spreadFromCell(cell, cur[cell]);
+				}
+			}
+		}
+
+		//..then cripple evil beings!
+		for (int i = area.left-1; i <= area.right; i++) {
+			for (int j = area.top-1; j <= area.bottom; j++) {
+				cell = i + j*Dungeon.level.width();
+				if (cur[cell] > 0) {
+					Char ch = Actor.findChar( cell );
+					if (ch != null && ch.alignment != Dungeon.hero.alignment
+							&& (ch.properties().contains(Char.Property.DEMONIC)
+								||ch.properties().contains(Char.Property.UNDEAD))
+							&& !ch.flying) {
+						Buff.affect( ch, OnBlessedWater.class, 1f);
+						ch.sprite.centerEmitter().burst( Speck.factory(Speck.LIGHT), 4);
+					}
+
+					off[cell] = cur[cell] - 1;
+					volume += off[cell];
+				} else {
+					off[cell] = 0;
+				}
+			}
+		}
+
+	}
+
+	private void spreadFromCell( int cell, int power ){
+		if (cur[cell] == 0) {
+			area.union(cell % Dungeon.level.width(), cell / Dungeon.level.width());
+		}
+		cur[cell] = Math.max(cur[cell], power);
+
+		for (int c : PathFinder.NEIGHBOURS4){
+			if (water[cell + c] && cur[cell + c] < power){
+				spreadFromCell(cell + c, power);
+			}
+		}
+	}
+
+	@Override
+	public void use( BlobEmitter emitter ) {
+		super.use( emitter );
+		emitter.start(Speck.factory(Speck.LIGHT), 1f, 0 );
+		emitter.start(Speck.factory(Speck.LIGHT), 0.5f, -1 );
+	}
+
+	@Override
+	public String tileDesc() {
+		return Messages.get(Devotion.class, "holy_water_desc");
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/CermateFire.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/CermateFire.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/CermateFire.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,112 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.blobs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
+import com.shatteredpixel.shatteredpixeldungeon.effects.BlobEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.CermateFireParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+
+import static com.shatteredpixel.shatteredpixeldungeon.Dungeon.hero;
+
+public class CermateFire extends Blob {
+
+	@Override
+	protected void evolve() {
+
+		boolean[] s = Dungeon.level.secret;
+		int cell;
+		int fire;
+
+		Blob blob = Dungeon.level.blobs.get( Blob.class );
+
+		boolean observe = false;
+
+		for (int i = area.left-1; i <= area.right; i++) {
+			for (int j = area.top-1; j <= area.bottom; j++) {
+				cell = i + j*Dungeon.level.width();
+				if (cur[cell] > 0) {
+
+					if (blob != null && blob.volume > 0 && blob.cur[cell] > 0){
+						blob.clear(cell);
+						off[cell] = cur[cell] = 0;
+						if (Dungeon.level.heroFOV[cell]) {
+							CellEmitter.get( cell ).burst( Speck.factory( Speck.DISCOVER ), 2 );
+						}
+						continue;
+					}
+
+					burnUndead( cell );
+
+					fire = cur[cell] - 1;
+					if (fire <= 0 && s[cell]) {
+
+						CellEmitter.get( cell ).start( Speck.factory( Speck.DISCOVER ), 0.1f, 4 );
+
+						observe = true;
+						GameScene.updateMap( cell );
+
+					}
+
+				} else {
+					fire = 0;
+				}
+				volume += (off[cell] = fire);
+			}
+		}
+
+		if (observe) {
+			Dungeon.observe();
+		}
+	}
+
+	public void burnUndead( int pos ) {
+		Char ch = Actor.findChar( pos );
+		if (ch != null && ch.alignment != hero.alignment
+				&& ch.properties().contains(Char.Property.UNDEAD)) {
+			if (ch.isAlive()) {
+				if (ch.HP <= 4) {
+					ch.damage(ch.HP, this);
+				} else { ch.damage(ch.HT / 4, this); }
+                ch.sprite.emitter().burst( ElmoParticle.FACTORY, 10 );
+			}
+		}
+	}
+
+	@Override
+	public void use( BlobEmitter emitter ) {
+		super.use( emitter );
+		emitter.pour( CermateFireParticle.FACTORY, 0.05f );
+	}
+
+	@Override
+	public String tileDesc() {
+		return Messages.get(Devotion.class, "cermate_blob");
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Electricity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Electricity.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/blobs/Electricity.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -25,11 +25,14 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Paralysis;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.BlobEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SparkParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.Heap;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.Wand;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.MagesStaff;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
@@ -70,7 +73,12 @@
 				if (cur[cell] > 0) {
 					Char ch = Actor.findChar( cell );
 					if (ch != null && !ch.isImmune(this.getClass())) {
-						Buff.prolong( ch, Paralysis.class, 1f);
+						// AddedPD : The Dwarf Survivor doesn't paralysed(but still receive damage)
+						if ( ch == Dungeon.hero && Dungeon.hero.heroClass == HeroClass.DWARF) {
+							// overcharge his cybernetic body!
+							Buff.prolong( Dungeon.hero, Haste.class, 4f);
+							ScrollOfRecharging.charge(Dungeon.hero);
+						} else { Buff.prolong( ch, Paralysis.class, 1f); }
 						if (cur[cell] % 2 == 1) {
 							ch.damage(Math.round(Random.Float(2 + Dungeon.depth / 5f)), this);
 							if (!ch.isAlive() && ch == Dungeon.hero){
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Baptized.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Baptized.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Baptized.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,136 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRetribution;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.exotic.ScrollOfPsionicBlast;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.watabou.utils.Bundle;
+
+public class Baptized extends Buff {
+
+	{
+		type = buffType.POSITIVE;
+		announced = true;
+	}
+
+	private int partialRegen = 0;
+	private boolean injured = false;
+	public int level = 0;
+
+	private static final String LEVEL	    = "level";
+	private static final String INJURED	    = "injured";
+
+	@Override
+	public void storeInBundle( Bundle bundle ) {
+		super.storeInBundle( bundle );
+		bundle.put( LEVEL, level );
+		bundle.put( INJURED, injured );
+	}
+
+	@Override
+	public void restoreFromBundle( Bundle bundle ) {
+		super.restoreFromBundle( bundle );
+		level = bundle.getInt( LEVEL );
+		injured = bundle.getBoolean( INJURED );
+	}
+
+	public void gainLevel(Mob mob) {
+		if (level >= 30-mob.maxLvl) {
+			Buff.affect(mob, Bless.class, Bless.DURATION);
+		} else {
+			level++;
+			int curHT = mob.HT;
+			mob.HT += 2*level;
+			mob.HP += Math.max(mob.HT - curHT, 0);
+		}
+	}
+
+	@Override
+	public boolean attachTo(Char target) {
+		if (super.attachTo(target)){
+			target.alignment = Char.Alignment.ALLY;
+			return true;
+		} else {
+			return false;
+		}
+	}
+
+	@Override
+	public boolean act() {
+
+		if (target.isAlive()) {
+			partialRegen++;
+
+			if (partialRegen >= 10) {
+				target.HP = Math.min(target.HT, target.HP+1);
+				partialRegen = 0;
+			}
+
+			if (target.HP <= target.HT/4 && !injured) {
+				injured = true;
+				GLog.w( Messages.get(Devotion.class, "baptize_injured", target.name) );
+			} else if (target.HP > target.HT/4) injured = false;
+		}
+
+		spend(TICK);
+		return true;
+	}
+
+	@Override
+	public void fx(boolean on) {
+		if (on) {
+			target.sprite.add( CharSprite.State.ILLUMINATED );
+			target.sprite.add( CharSprite.State.LIGHTENED ); }
+		else if (target.invisible == 0) {
+			target.sprite.remove( CharSprite.State.ILLUMINATED );
+			target.sprite.remove( CharSprite.State.LIGHTENED );
+		}
+	}
+
+	@Override
+	public int icon() {
+		return BuffIndicator.BAPTIZED;
+	}
+
+	@Override
+	public String toString() {
+		return Messages.get(Devotion.class, "baptize_buff_name");
+	}
+
+	@Override
+	public String desc() {
+		return Messages.get(Devotion.class, "baptize_buff_desc", level, level*3, level*2, level);
+	}
+
+	{
+		immunities.add( ScrollOfRetribution.class );
+		immunities.add( ScrollOfPsionicBlast.class );
+		immunities.add( Charm.class );
+		immunities.add( Amok.class );
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Berserk.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Berserk.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Berserk.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -114,6 +114,16 @@
 		return Math.round(dmg * bonus);
 	}
 
+	// AddedPD : buff for berserker, because his ability isn't useful while you dive into very critical danger
+	public int reduceFactor(int dmg){
+		float bonus = 2f - Math.min(1.2f, 1f + (power / 5f));
+		// DR for all damage(normal, magical...), maximum at 100% rage = DR+20%
+
+		Fury fury = Dungeon.hero.buff(Fury.class);
+		// Fury time! Just same as 100% rage
+		if (fury != null) { bonus = 0.8f; } return Math.round(dmg * bonus);
+	}
+
 	public boolean berserking(){
 		if (target.HP == 0 && state == State.NORMAL && power >= 1f){
 
@@ -187,9 +197,10 @@
 	@Override
 	public String desc() {
 		float dispDamage = (damageFactor(10000) / 100f) - 100f;
+		float DRdesc = ((reduceFactor(10000) / 100f) - 100f)*(-1f);
 		switch (state){
 			case NORMAL: default:
-				return Messages.get(this, "angered_desc", Math.floor(power * 100f), dispDamage);
+				return Messages.get(this, "angered_desc", Math.floor(power * 100f), dispDamage, DRdesc);
 			case BERSERK:
 				return Messages.get(this, "berserk_desc");
 			case RECOVERING:
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/BurglarSense.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/BurglarSense.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/BurglarSense.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,34 @@
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.noosa.Image;
+
+public class BurglarSense extends FlavourBuff {
+
+    {
+        type = buffType.POSITIVE;
+        announced = true;
+    }
+
+    public static final float TRAP_DURATION	= 20f; // cooltime
+
+    @Override
+    public int icon() {
+        return BuffIndicator.DEFERRED;
+    }
+
+    @Override
+    public void tintIcon(Image icon) {
+        greyIcon(icon, 5f, cooldown());
+    }
+
+    @Override
+    public String toString() {
+        return Messages.get(this, "name");
+    }
+
+    @Override
+    public String desc() {
+        return Messages.get(this, "desc", dispTurns());
+    }
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Combo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Combo.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Combo.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -59,10 +59,11 @@
 	
 	@Override
 	public void tintIcon(Image icon) {
-		if (comboTime >= 3f){
+		// AddedPD : buff comboTime 4f -> 6f, so change 3f -> 5f
+		if (comboTime >= 5f){
 			icon.resetColor();
 		} else {
-			icon.tint(0xb3b3b3, 0.5f + 0.5f*(3f + 1 - comboTime)/3f);
+			icon.tint(0xb3b3b3, 0.5f + 0.5f*(5f + 1 - comboTime)/5f);
 		}
 	}
 	
@@ -74,7 +75,7 @@
 	public void hit( Char enemy ) {
 		
 		count++;
-		comboTime = 4f;
+		comboTime = 6f; // AddedPD : buff comboTime 4f -> 6f
 		misses = 0;
 		BuffIndicator.refreshHero();
 		
@@ -91,7 +92,7 @@
 
 	public void miss( Char enemy ){
 		misses++;
-		comboTime = 4f;
+		comboTime = 6f;	// AddedPD : buff comboTime 4f -> 6f
 		if (misses >= 2){
 			detach();
 		}
@@ -297,7 +298,7 @@
 					if (!enemy.isAlive()) {
 						//combo isn't reset, but rather increments with a cleave kill, and grants more time.
 						hit( enemy );
-						comboTime = 12f;
+						comboTime = 20f;	// AddedPD : buff cleave comboTime 12f -> 20f
 					} else {
 						detach();
 						ActionIndicator.clearAction(Combo.this);
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Devotion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Devotion.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/Devotion.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,789 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.BlessedWater;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.Blob;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.CermateFire;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.RotHeart;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.RotLasher;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.PrismaticImage;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Enchanting;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Flare;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.effects.SpellSprite;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Splash;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.CermateFireParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.RainbowParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShadowParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShaftParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.Weapon;
+import com.shatteredpixel.shatteredpixeldungeon.levels.Level;
+import com.shatteredpixel.shatteredpixeldungeon.levels.Terrain;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.CellSelector;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.HeroSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.ActionIndicator;
+import com.shatteredpixel.shatteredpixeldungeon.ui.AttackIndicator;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.shatteredpixel.shatteredpixeldungeon.ui.Icons;
+import com.shatteredpixel.shatteredpixeldungeon.utils.BArray;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndBag;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndOptions;
+import com.watabou.noosa.Camera;
+import com.watabou.noosa.Image;
+import com.watabou.noosa.audio.Sample;
+import com.watabou.utils.Bundle;
+import com.watabou.utils.Callback;
+import com.watabou.utils.GameMath;
+import com.watabou.utils.PathFinder;
+
+
+import static com.shatteredpixel.shatteredpixeldungeon.Dungeon.hero;
+
+public class Devotion extends Buff implements ActionIndicator.Action {
+
+	private int rank = 0;
+	private int partialRank = 0;
+	private boolean baptizeUsed = false;
+
+	private static final String RANK = "rank";
+	private static final String RANK_PARTIAL = "partialRank";
+	private static final String BAPTIZE_USED = "baptizeUsed";
+
+	@Override
+	public void storeInBundle(Bundle bundle) {
+		super.storeInBundle(bundle);
+		bundle.put(RANK, rank);
+		bundle.put(RANK_PARTIAL, partialRank);
+		bundle.put(BAPTIZE_USED, baptizeUsed);
+	}
+
+	@Override
+	public void restoreFromBundle(Bundle bundle) {
+		super.restoreFromBundle(bundle);
+		rank = bundle.getInt(RANK);
+		partialRank = bundle.getInt(RANK_PARTIAL);
+		baptizeUsed = bundle.getBoolean(BAPTIZE_USED);
+		if (rank >= 0) ActionIndicator.setAction(this);
+	}
+
+	public void onHeroGainExp() {
+		if (hero.subClass == HeroSubClass.SCHOLAR) {
+			partialRank++;
+			if(partialRank >= 4) {
+				partialRank = 0;
+				rank++;
+			}
+		}
+		rank++;
+		ActionIndicator.setAction( this );
+		BuffIndicator.refreshHero();
+	}
+
+	public void onLevelUp(){ // 1 level up = 5 rank
+		rank += 5;
+		ActionIndicator.setAction( this );
+		BuffIndicator.refreshHero();
+	}
+
+	public void onOther(int point){
+		rank += point;
+		ActionIndicator.setAction( this );
+		BuffIndicator.refreshHero();
+	}
+
+	public void onReset(){
+		rank = 0;
+		ActionIndicator.setAction( this );
+		BuffIndicator.refreshHero();
+	}
+
+	public void invocation(){
+		((HeroSprite) hero.sprite).read();
+		Invisibility.dispel();
+		Sample.INSTANCE.play( Assets.SND_LEVELUP );
+		new Flare( 6, 32 ).show( hero.sprite, 4f );
+		SpellSprite.show(Dungeon.hero, SpellSprite.MASTERY);
+		ActionIndicator.setAction( this );
+		BuffIndicator.refreshHero();
+	}
+
+	public int getrank() {
+		return rank;
+	}
+
+	@Override
+	public int icon() {
+		return BuffIndicator.DEVOTION;
+	}
+
+	@Override
+	public String toString() {
+		return Messages.get(this, "name");
+	}
+
+	@Override
+	public String desc() {
+		String desc = Messages.get(this, "desc", rank);
+		String miracles = Messages.get(this, "miracles");
+		if (hero.subClass == HeroSubClass.CRUSADER) {
+			String crusader = Messages.get(this, "crusader");
+			return desc + miracles + crusader;
+
+		} if (hero.subClass == HeroSubClass.SCHOLAR) {
+			String scholar = Messages.get(this, "scholar");
+			return desc + miracles + scholar;
+
+		} if (hero.subClass == HeroSubClass.REDEEMER) {
+			String redeemer = Messages.get(this, "redeemer");
+			return desc + miracles + redeemer;
+		}
+		return desc + miracles;
+	}
+
+	@Override
+	public Image getIcon() {
+		Image icon;
+
+		if (rank >= 45) {
+			if (hero.subClass == HeroSubClass.REDEEMER && rank >= 60) {
+				icon = Icons.get_miracle(Icons.BAPTIZE);
+			} else icon = Icons.get_miracle(Icons.ENLIGHTEN);
+		} else if (rank >= 30) { icon = Icons.get_miracle(Icons.ZEALOT);
+		} else if (rank >= 15) {
+			if (hero.subClass == HeroSubClass.SCHOLAR) {
+				if (rank >= 25) { icon = Icons.get_miracle(Icons.CREMATE);
+				} else if (rank >= 20) { icon = Icons.get_miracle(Icons.HOLY_WATER);
+				} else { icon = Icons.get_miracle(Icons.SMITE_AOE); }
+			} else icon = Icons.get_miracle(Icons.SMITE);
+		} else icon = Icons.get(HeroClass.CLERIC);
+
+		return icon;
+	}
+
+	@Override
+	public void doAction() {
+		if (hero.subClass == HeroSubClass.NONE || hero.subClass == HeroSubClass.CRUSADER) {
+			if (rank >= 45) { // rank 45+ : smite, zealot, enlighten
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "choose_enlighten"), Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doZealot(); }
+								if (index == 2) { doEnlighten(); }
+								if (index == 3) { }}});
+
+			} else if (rank >= 30) { // rank 30-44 : smite, zealot
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doZealot(); }
+								if (index == 2) { }}});
+
+			} else if (rank >= 15) { // rank 15-29 : smite
+				GameScene.selectCell(smite);
+			} else { // rank 0-14 : none
+				GLog.w(Messages.get(this, "need_more_rank"));
+			}
+		}
+		else if (hero.subClass == HeroSubClass.SCHOLAR) {
+			if (rank >= 45) { // rank 45+ : smite, holy_water, cremate, zealot, enlighten
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_holy_water"),
+								Messages.get(this, "choose_cremate"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "choose_enlighten"), Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doHolyWater(); } if (index == 2) { doCermate(); }
+								if (index == 3) { doZealot(); } if (index == 4) { doEnlighten(); }
+								if (index == 5) { }}});
+
+			} else if (rank >= 30) { // rank 30-44 : smite, holy_water, cremate, zealot
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_holy_water"),
+								Messages.get(this, "choose_cremate"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doHolyWater(); } if (index == 2) { doCermate(); }
+								if (index == 3) { doZealot(); } if (index == 4) { }}});
+
+			} else if (rank >= 25) { // rank 25-29 : smite, holy_water, cremate
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_holy_water"),
+								Messages.get(this, "choose_cremate"),Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doHolyWater(); } if (index == 2) { doCermate(); }
+								if (index == 3) { }}});
+
+			} else if (rank >= 20) { // rank 20-24 : smite, holy_water
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_holy_water"),
+								Messages.get(this, "choose_cremate"), Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doHolyWater(); } if (index == 2) { }}});
+
+			} else if (rank >= 15) { // rank 15-19 : smite(aoe)
+				GameScene.selectCell(smite);
+			} else { // rank 0-14 : none
+				GLog.w(Messages.get(this, "need_more_rank"));
+			}
+		}
+		else { //(state == State.REDEEMER)
+			if (rank >= 60) { // rank 60+ : smite, zealot, enlighten, baptize
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "choose_enlighten"), Messages.get(this, "choose_baptize"),
+								Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doZealot(); }
+								if (index == 2) { doEnlighten(); }
+								if (index == 3) { GameScene.selectCell(baptize); }
+								if (index == 4) { }}});
+
+			} else if (rank >= 45) { // rank 45-59 : smite, zealot, enlighten
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "choose_enlighten"), Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doZealot(); }
+								if (index == 2) { doEnlighten(); }
+								if (index == 3) { }}});
+
+			} else if (rank >= 30) { // rank 30-44 : smite, zealot
+				GameScene.show(
+						new WndOptions(Messages.get(this, "name"), Messages.get(this, "prompt", rank),
+								Messages.get(this, "choose_smite"), Messages.get(this, "choose_zealot"),
+								Messages.get(this, "cancel")) {
+							@Override
+							protected void onSelect(int index) {
+								if (index == 0) { GameScene.selectCell(smite); }
+								if (index == 1) { doZealot(); }
+								if (index == 2) { }}});
+
+			} else if (rank >= 15) { // rank 15-29 : smite
+				GameScene.selectCell(smite);
+			} else { // rank 0-14 : none
+				GLog.w(Messages.get(this, "need_more_rank"));
+			}
+		}
+
+	}
+
+	public CellSelector.Listener smite = new CellSelector.Listener() {
+		@Override
+		public void onSelect(Integer cell) {
+			if (cell == null) return;
+			final Char enemy = Actor.findChar( cell );
+			if (enemy == null || !Dungeon.level.heroFOV[cell] || enemy == hero){
+				GLog.w( Messages.get(Devotion.class, "smite_bad_target") );
+				return;
+			} else {
+				if (cell != null) {
+					hero.sprite.attack(cell, new Callback() {
+						@Override
+						public void call() {
+							doSmite(enemy);
+						}
+					});
+				} else return;
+			}
+		}
+
+		private void doSmite(final Char enemy){
+			AttackIndicator.target(enemy);
+
+			int dmg = 15 + 5*(hero.lvl/2);
+
+			if (enemy.properties().contains(Char.Property.DEMONIC)
+					|| enemy.properties().contains(Char.Property.UNDEAD)) {
+				dmg = Math.round(dmg*1.333f);
+			}
+
+			if (enemy.properties().contains(Char.Property.BOSS)) {
+				// prvents "SMITE! HA HA I WON" situation, by NEVER one-kill bosses
+				if (dmg >= enemy.HT/4) {
+					dmg = enemy.HT/4;
+					GLog.w( Messages.capitalize(Messages.get(Devotion.class, "smite_boss", enemy.name)) );
+				}
+			}
+
+			switch (hero.subClass) {
+				case NONE: default:
+					enemy.damage( dmg, this );
+					Camera.main.shake( GameMath.gate( 1, 10, 5), 0.3f );
+					break;
+				case CRUSADER:
+					if (enemy.properties().contains(Char.Property.MAGICAL)) {
+						Blindness blindness = enemy.buff(Blindness.class);
+						if (blindness == null) {
+							Buff.prolong(enemy, Blindness.class, 10f);
+						}
+						enemy.damage( dmg, this );
+					} else { enemy.damage( dmg, this );
+						Camera.main.shake( GameMath.gate( 1, 10, 5), 0.3f );}
+					break;
+				case SCHOLAR:
+					for (int i : PathFinder.NEIGHBOURS8) {
+						enemy.damage( dmg, this );
+						CellEmitter.get(i).burst(RainbowParticle.BURST, 10+dmg);
+						CellEmitter.get(i).start( ShaftParticle.FACTORY, 0.25f, 8 );
+						Char ch = Actor.findChar(enemy.pos + i);
+						if (ch != null) {
+							// only harm enemy(no self damage, no friendly fire)
+							if (ch.alignment != Char.Alignment.ALLY || ch != Dungeon.hero) {
+								ch.damage( dmg, this );
+							}
+						}
+					}
+					Camera.main.shake( GameMath.gate( 1, 10, 5), 0.3f );
+					break;
+				case REDEEMER:
+					if (enemy.alignment == Char.Alignment.ALLY && !enemy.isCharmedBy(hero)) {
+						Buff.affect( enemy, Healing.class ).setHeal((int)(0.5f*(2*dmg) + 14), 0.25f, 0);
+						for (Buff b : enemy.buffs()){
+							if (b.type == Buff.buffType.NEGATIVE && !(b instanceof Corruption)){
+								b.detach();
+							}
+						}
+					} else { enemy.damage( dmg, this );
+						Camera.main.shake( GameMath.gate( 1, 10, 5), 0.3f ); }
+					break;
+			}
+
+			Sample.INSTANCE.play(Assets.SND_BLAST);
+			enemy.sprite.centerEmitter().burst( RainbowParticle.BURST, 10+dmg);
+			CellEmitter.get(enemy.pos).start( ShaftParticle.FACTORY, 0.025f, 8 );
+			rank -= 15;
+
+			if (!enemy.isAlive()){
+				GLog.i( Messages.capitalize(Messages.get(Char.class, "defeat", enemy.name)) );
+			}
+
+			Invisibility.dispel();
+			Sample.INSTANCE.play( Assets.SND_LEVELUP );
+			new Flare( 6, 32 ).show( hero.sprite, 4f );
+
+			Devotion devotion = new Devotion();
+			ActionIndicator.setAction(devotion);
+			hero.spendAndNext(Actor.TICK);
+		}
+
+		@Override
+		public String prompt () {
+			int dmg = 10 + 5*(hero.lvl/2);
+			switch (hero.subClass) {
+				case NONE:
+				default: return Messages.get(Devotion.class, "smite_prompt", dmg, Math.round(dmg*1.333f));
+				case CRUSADER: return Messages.get(Devotion.class, "smite_prompt_crusader", dmg, Math.round(dmg*1.333f));
+				case SCHOLAR: return Messages.get(Devotion.class, "smite_prompt_scholar", dmg, Math.round(dmg*1.333f));
+				case REDEEMER: return Messages.get(Devotion.class, "smite_prompt_redeemer", dmg, Math.round(dmg*1.333f), (int)(0.5f*(2*dmg) + 14));
+			}
+		}
+	};
+
+	public static class ZealotBuff extends Buff {
+		{
+			type = buffType.POSITIVE;
+		}
+		protected int heal = 0;
+		private static final String HEAL = "heal";
+
+		int danger = 0;
+
+		@Override
+		public void storeInBundle( Bundle bundle ) {
+			super.storeInBundle( bundle );
+			bundle.put( HEAL, heal );
+
+		}
+		@Override
+		public void restoreFromBundle( Bundle bundle ) {
+			super.restoreFromBundle( bundle );
+			heal = bundle.getInt( HEAL );
+		}
+
+		@Override
+		public boolean attachTo( Char target ) {
+			if (super.attachTo( target )) {
+				postpone( TICK );
+				return true;
+			} else { return false; }
+		}
+
+		public void prolong( int heal ) { this.heal += heal; }
+
+		@Override
+		public int icon() { return BuffIndicator.ZEALOT; }
+
+		@Override
+		public String toString() { return Messages.get(Devotion.class, "zealot_buff_name"); }
+
+		@Override
+		public boolean act() {
+			danger = 0;	// recalculating...
+
+			for (Buff buff : target.buffs()) {
+				if (target.buff(Levitation.class) != null
+						&& (target.buff(Burning.class) != null || target.buff(Ooze.class) != null)) {
+					danger++;	// the deadly situation, familiar to us
+				}
+				else if (buff.type == Buff.buffType.NEGATIVE) {
+					if (buff instanceof Paralysis || buff instanceof Frost || buff instanceof Roots) {
+						danger ++;	// makes any situation dangerous
+					} danger++;		// debuffs, but not so critical
+				}
+				else if (buff.type == buffType.POSITIVE) {
+					if (buff instanceof Healing || buff instanceof Invisibility
+							|| (buff instanceof ShieldBuff && target.shielding() >= target.HT/2)) {
+						danger--;	// good enough to save your life any situation
+					}
+				}
+			}
+
+			if (target.HP <= target.HT/2) {
+				danger++;	// of course, low HP means dangerous
+				if (target.HP <= target.HT/4) {
+					danger++;	// it seems things getting worse...
+				}
+			}
+
+			int allies = 0;	// We are constant allies, can still fighting and not critically injured
+			int enemies = 0;
+			for (Mob mob : Dungeon.level.mobs.toArray( new Mob[0] )) {
+				if (Dungeon.level.heroFOV[mob.pos]) {
+					if (mob.alignment == Char.Alignment.ALLY && !mob.isCharmedBy(hero)
+							&& mob.buff(Frost.class) == null && mob.buff(Paralysis.class) == null
+							&& mob.buff(Amok.class) == null && mob.HP >= mob.HT/2
+							&& !mob.isBaptized()) { // Redeemer's baptized ally boon
+						allies++;
+					} else {
+						if (mob.state != mob.SLEEPING) {
+							int gap = (mob.maxLvl+2) - hero.lvl;
+							if (gap >= 0) {
+								enemies++; // normal enemy
+							} else if (gap >= -2 && mob.HP >= mob.HT/2) {
+								enemies++; // weak enemy, but still on combat
+							} else {
+								// these are too weak to threat
+							}
+
+							if (mob.properties().contains(Char.Property.BOSS)) {
+								enemies += 2;
+							}
+
+							if (mob.properties().contains(Char.Property.MINIBOSS)) {
+								if (mob instanceof RotLasher || mob instanceof RotHeart) {
+									if (mob.distance(target) == 1) {
+										enemies++;
+									}
+								} else enemies++;
+							}
+						}
+					}
+				}
+			}
+
+			// Final calculation of danger level
+
+			if (enemies == 0 && danger >= 2) { danger = 2; } // noncombat
+			if (allies >= enemies && danger >= 4) { danger = 4; } // many allies means enough safety
+
+			if (danger >= 8) { danger = 8; }	// prevents 'undying hero' situation
+
+			if (target.isAlive() || (target instanceof PrismaticImage && target.HP >= 0)) {
+				// prevents crash from PrisImage death-timer
+
+				if (danger > 0) {
+					int actualHeal = 0;
+
+					if (target.HP+danger <= target.HT) {
+						heal -= danger;
+						actualHeal = danger;
+					} else {
+						heal -= target.HT-target.HP;
+						actualHeal = target.HT-target.HP;
+					}
+
+					target.HP = Math.min(target.HT, target.HP+danger);
+
+					if (actualHeal > 0) {
+						target.sprite.showStatus(CharSprite.POSITIVE, Integer.toString(actualHeal));
+						CellEmitter.get(target.pos).burst(Speck.factory(Speck.LIGHT), 4 + actualHeal);
+					}
+				}
+
+				if (enemies > 0 && hero.subClass == HeroSubClass.CRUSADER) {
+					// crusader special : additional magic resistance...
+					if (target.buff(ArcaneArmor.class) == null) {
+						Buff.affect(target, ArcaneArmor.class).set(5 + hero.lvl / 2, danger / 2 + 1);
+					}
+					// ...and adrenaline boost depend on danger
+					if (danger >= 3) {
+						if (target.buff(Adrenaline.class) == null && target != hero) {
+							Buff.affect(target, Adrenaline.class, danger*10);
+						}
+						if (target.buff(AdrenalineSurge.class) == null && target == hero) {
+							Buff.append(target, AdrenalineSurge.class).reset(1, (float) (danger*5));
+						}
+					}
+				}
+				spend(TICK);
+
+				if (heal <= 0) {
+					detach();
+				}
+			} else {
+				detach();
+			}
+			return true;
+		}
+
+		@Override
+		public String desc() { return Messages.get(Devotion.class, "zealot_buff_desc", heal, Math.max(danger, 0), Math.max(danger, 0)); }
+	}
+
+	private void doZealot(){
+
+		int amount = 4 + hero.HT/5 + 3*hero.lvl;
+
+		for (Mob mob : Dungeon.level.mobs.toArray( new Mob[0] )) {
+			if (Dungeon.level.heroFOV[mob.pos]) {
+				if (mob.alignment == Char.Alignment.ALLY && !mob.isCharmedBy(hero)) {
+					ZealotBuff zealotBuff = Buff.affect( mob, ZealotBuff.class );
+					zealotBuff.prolong( amount );
+				}
+			}
+		}
+		ZealotBuff zealotBuff = Buff.affect( hero, ZealotBuff.class );
+		zealotBuff.prolong( amount );
+
+		rank -= 30;
+		invocation();
+		hero.spendAndNext(Actor.TICK);
+	}
+
+	public WndBag doEnlighten() {
+		return GameScene.selectItem( itemSelector, WndBag.Mode.ENCHANTABLE, Messages.get(Devotion.class, "which_enlighten"));
+	}
+
+	private final WndBag.Listener itemSelector = new WndBag.Listener() {
+		@Override
+		public void onSelect( Item item ) {
+			if (item != null) {
+				if (item.cursed) {
+					item.cursedKnown = true;
+					item.cursed = false;
+					hero.sprite.emitter().start(ShadowParticle.UP, 0.05f, 10);
+				}
+				if (item instanceof Weapon) {
+					if (((Weapon) item).enchantment != null) {
+						((Weapon) item).enchant(null);
+					}
+				} else if (item instanceof Armor) {
+					if (((Armor) item).glyph != null) {
+						((Armor) item).inscribe(null);
+					}
+				}
+				item.enlightened = true;
+				GLog.p( Messages.get(Devotion.class, "enlighten"));
+				Enchanting.show(hero, item);
+				rank -= 45;
+				invocation();
+				hero.spendAndNext(Actor.TICK);
+			}
+		}
+	};
+
+	private void doHolyWater(){
+
+		int amount = 4*hero.lvl;
+
+		PathFinder.buildDistanceMap( hero.pos, BArray.not( Dungeon.level.solid, null ), 2 );
+		for (int i = 0; i < PathFinder.distance.length; i++) {
+			if (PathFinder.distance[i] < Integer.MAX_VALUE) {
+				int terr = Dungeon.level.map[i];
+				if (terr == Terrain.EMPTY || terr == Terrain.GRASS ||
+						terr == Terrain.EMBERS || terr == Terrain.EMPTY_SP ||
+						terr == Terrain.HIGH_GRASS || terr == Terrain.FURROWED_GRASS
+						|| terr == Terrain.EMPTY_DECO) {
+					Level.set(i, Terrain.WATER);
+					Splash.at(i, 0x00AAFF, 10);
+					GameScene.updateMap(i);
+				} else if (terr == Terrain.SECRET_TRAP || terr == Terrain.TRAP || terr == Terrain.INACTIVE_TRAP) {
+					Level.set(i, Terrain.WATER);
+					CellEmitter.get(i).burst(Speck.factory(Speck.STEAM), 6);
+					Dungeon.level.traps.remove(i);
+					Splash.at(i, 0x00AAFF, 10);
+					GameScene.updateMap(i);
+				}
+
+				int bless = Dungeon.level.map[i];
+				if (bless == Terrain.WATER) {
+					CellEmitter.get(i).burst(Speck.factory( Speck.BUBBLE ), 2);
+					GameScene.add(Blob.seed(i, amount, BlessedWater.class));
+					Sample.INSTANCE.play( Assets.SND_DRINK );
+				}
+			}
+		}
+
+		rank -= 20;
+		invocation();
+		hero.spendAndNext(Actor.TICK);
+	}
+
+	private void doCermate(){
+
+		int amount = 2*hero.lvl;
+
+		PathFinder.buildDistanceMap( hero.pos, BArray.not( Dungeon.level.solid, null ), 2 );
+		for (int i = 0; i < PathFinder.distance.length; i++) {
+			if (PathFinder.distance[i] < Integer.MAX_VALUE) {
+				if (Dungeon.level.pit[i])
+					GameScene.add(Blob.seed(i, 2, CermateFire.class));
+				else
+					GameScene.add(Blob.seed(i, amount+1, CermateFire.class));
+				CellEmitter.get(i).burst(CermateFireParticle.FACTORY, 5);
+
+				Char ch = Actor.findChar( i );
+				if (ch != null && ch.alignment != hero.alignment
+						&& ch.properties().contains(Char.Property.UNDEAD)) {
+					if (ch.isAlive()) {
+						if (ch.HP <= 4) {
+							ch.damage(ch.HP, this);
+						} else { ch.damage(ch.HT / 4, CermateFire.class); }
+						ch.sprite.emitter().burst( ElmoParticle.FACTORY, 10 );
+					}
+				}
+			}
+		}
+		Sample.INSTANCE.play(Assets.SND_BURNING);
+
+		rank -= 25;
+		invocation();
+		baptizeUsed = true;
+		hero.spendAndNext(Actor.TICK);
+	}
+
+	CellSelector.Listener baptize = new CellSelector.Listener() {
+		@Override
+		public void onSelect(Integer cell) {
+			Devotion devotion = Dungeon.hero.buff(Devotion.class);
+			if (devotion.baptizeUsed = true) {
+				GLog.w(Messages.get(Devotion.class, "baptize_used"));
+				return;
+			}
+			if (cell == null) return;
+			final Char enemy = Actor.findChar(cell);
+			if (enemy == null || !Dungeon.level.heroFOV[cell] || enemy == hero || enemy.isBaptized()) {
+				GLog.w(Messages.get(Devotion.class, "baptize_bad_target"));
+				return;
+			} else if (enemy.properties().contains(Char.Property.BOSS)
+					|| enemy.properties().contains(Char.Property.MINIBOSS)) {
+				GLog.w(Messages.get(Devotion.class, "baptize_cannot_boss"));
+				return;
+			} else {
+				if (cell != null) {
+					hero.sprite.attack(cell, new Callback() {
+						@Override
+						public void call() {
+							doBaptize(enemy);
+						}
+					});
+				} else return;
+			}
+		}
+
+		private void doBaptize(final Char enemy) {
+			enemy.HP = enemy.HT;
+			for (Buff buff : enemy.buffs()) {
+				if (buff.type == Buff.buffType.NEGATIVE) {
+					buff.detach();
+				} else if (buff instanceof PinCushion){
+					buff.detach();
+				}
+			}
+
+			Mob bMob = (Mob) enemy;
+			Buff.affect(bMob, Baptized.class);
+
+			Invisibility.dispel();
+			Sample.INSTANCE.play( Assets.SND_LEVELUP );
+			GLog.p( Messages.get(Devotion.class, "baptize_on", enemy.name) );
+
+			rank -= 60;
+			hero.spendAndNext(Actor.TICK);
+		}
+
+		@Override
+		public String prompt () {
+			return Messages.get(Devotion.class, "baptize_prompt");
+		}
+	};
+
+	public static int Baptized_Level(Mob mob) {
+		Baptized b = mob.buff(Baptized.class);
+		return b.level;
+	}
+
+	public void Baptized_canUse() {
+		baptizeUsed = false;
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfArmorBuff.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfArmorBuff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfArmorBuff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,52 @@
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.DwarfArmor;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.watabou.noosa.Image;
+import com.watabou.noosa.audio.Sample;
+
+public class DwarfArmorBuff extends FlavourBuff {
+
+    {
+        type = buffType.POSITIVE;
+    }
+
+    @Override
+    public boolean act() {
+        super.act();
+
+        if (cooldown() <= 0) {
+            CellEmitter.get( target.pos ).burst( Speck.factory( Speck.STEAM ), 8);
+            Sample.INSTANCE.play(Assets.SND_BEACON);
+            GLog.w( Messages.get(DwarfArmor.class, "deactivated") );
+        }
+        return true;
+    }
+
+    @Override
+    public int icon() {
+        return BuffIndicator.MOMENTUM;
+    }
+
+    @Override
+    public void tintIcon(Image icon) {
+        icon.tint(0xF3BE33, 0.6f);
+        if (cooldown() < 4f) greyIcon(icon, 2f,cooldown());
+    }
+
+    @Override
+    public String toString() {
+        return Messages.get(this, "name");
+    }
+
+    @Override
+    public String desc() {
+        return Messages.get(this, "desc", dispTurns());
+    }
+
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfFocus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfFocus.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfFocus.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,115 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.utils.Bundle;
+
+public class DwarfFocus extends Buff {
+
+	{
+		type = buffType.POSITIVE;
+		announced = true;
+	}
+
+	private int stacks = 0;
+	private boolean focused = false;
+
+	@Override
+	public boolean act() {
+		BuffIndicator.refreshHero();
+
+		if (focused) {
+			if (Dungeon.hero.visibleEnemies() <= 0) {
+				stacks = Math.max(stacks-5, 0);
+			}
+			stacks = Math.max(stacks-4, 0);
+			if (stacks == 0) {
+				focused = false;
+				stacks = 1;
+			}
+		} else {
+			if (Dungeon.hero.visibleEnemies() <= 0) {
+				stacks = Math.max(stacks-2, 0);
+			}
+		}
+
+		if (stacks == 0) detach();
+
+		spend(TICK);
+		return true;
+	}
+
+	public void gainStack(){
+		if (!focused) {
+			stacks = Math.min(stacks + 1, 10);
+			if (stacks >= 10) {
+				focused = true;
+				target.sprite.showStatus(CharSprite.POSITIVE, Messages.get(this, "focused"));
+			}
+		}
+		BuffIndicator.refreshHero();
+	}
+
+	public boolean focused(){
+		return focused;
+	}
+
+	@Override
+	public int icon() {
+		if (focused) {
+			return BuffIndicator.MIND_VISION;
+		} else return BuffIndicator.DROWSY;
+	}
+
+	@Override
+	public String toString() {
+		return Messages.get(this, "name");
+	}
+
+	@Override
+	public String desc() {
+		if (focused){
+			return Messages.get(this, "desc_focused");
+		} else return Messages.get(this, "desc", 11-stacks);
+	}
+
+	private static final String STACKS =        "stacks";
+	private static final String FOCUSED = 		"focused";
+
+	@Override
+	public void storeInBundle(Bundle bundle) {
+		super.storeInBundle(bundle);
+		bundle.put(STACKS, stacks);
+		bundle.put(FOCUSED, focused);
+	}
+
+	@Override
+	public void restoreFromBundle(Bundle bundle) {
+		super.restoreFromBundle(bundle);
+		stacks = bundle.getInt(STACKS);
+		focused = bundle.getBoolean(FOCUSED);
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfNecro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfNecro.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfNecro.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,195 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Necrogolem;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.PrismaticImage;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfTeleportation;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.noosa.Camera;
+import com.watabou.noosa.Image;
+import com.watabou.noosa.audio.Sample;
+import com.watabou.noosa.tweeners.AlphaTweener;
+import com.watabou.utils.Bundle;
+import com.watabou.utils.PathFinder;
+
+import static com.shatteredpixel.shatteredpixeldungeon.Dungeon.hero;
+
+public class DwarfNecro extends Buff {
+	
+	{
+		type = buffType.POSITIVE;
+	}
+	
+	private float HP;
+	private int Ectoplasm; // 'Fuel'
+	
+	@Override
+	public boolean act() {
+		
+		Hero hero = (Hero)target;
+
+		if (checkFuel()) {
+
+			Mob closest = null;
+			int v = hero.visibleEnemies();
+			for (int i = 0; i < v; i++) {
+				Mob mob = hero.visibleEnemy(i);
+				if (mob.isAlive() && mob.state != mob.PASSIVE && mob.state != mob.WANDERING && mob.state != mob.SLEEPING && !hero.mindVisionEnemies.contains(mob)
+						&& (closest == null || Dungeon.level.distance(hero.pos, mob.pos) < Dungeon.level.distance(hero.pos, closest.pos))) {
+					closest = mob;
+				}
+			}
+
+			if (closest != null && Dungeon.level.distance(hero.pos, closest.pos) < 5) {
+				//spawn golem
+				int bestPos = -1;
+				for (int i = 0; i < PathFinder.NEIGHBOURS8.length; i++) {
+					int p = hero.pos + PathFinder.NEIGHBOURS8[i];
+					if (Actor.findChar(p) == null && Dungeon.level.passable[p]) {
+						if (bestPos == -1 || Dungeon.level.trueDistance(p, closest.pos) < Dungeon.level.trueDistance(bestPos, closest.pos)) {
+							bestPos = p;
+						}
+					}
+				}
+				if (bestPos != -1) {
+					Necrogolem necrogolem = new Necrogolem();
+					necrogolem.summon(hero, (int) Math.floor(HP));
+					necrogolem.state = necrogolem.HUNTING;
+					GameScene.add(necrogolem, 1);
+
+					necrogolem.move( bestPos );
+					if (necrogolem.pos == bestPos) necrogolem.sprite.place( bestPos );
+
+					if (necrogolem.invisible == 0) {
+						necrogolem.sprite.alpha( 0 );
+						necrogolem.sprite.parent.add( new AlphaTweener( necrogolem.sprite, 1, 0.4f ) );
+					}
+					necrogolem.sprite.speed.set( 0, -64 );
+					necrogolem.sprite.acc.set( 0, 64 * 4 );
+
+					necrogolem.sprite.interruptMotion();
+
+					necrogolem.sprite.speed.set( 0 );
+					necrogolem.sprite.acc.set( 0 );
+					necrogolem.sprite.place( necrogolem.pos );
+
+					Camera.main.shake( 2, 0.2f );
+
+					CellEmitter.get(necrogolem.pos).burst(ElmoParticle.FACTORY, 10);
+					Sample.INSTANCE.play( Assets.SND_BLAST );
+
+					detach();
+				} else {
+					spend(TICK);
+				}
+
+
+			} else {
+				spend(TICK);
+			}
+
+			LockedFloor lock = target.buff(LockedFloor.class);
+			if (HP < maxHP() && (lock == null || lock.regenOn())){
+				HP += 0.1f;
+			}
+
+		} else spend(TICK);
+		
+		return true;
+	}
+	
+	public void set( int HP ){
+		this.HP = HP;
+	}
+
+	public void gainFuel(){
+		Ectoplasm++;
+	}
+
+	public void reverseFuel(){
+		Ectoplasm = 10;
+		checkFuel();
+	}
+
+	public boolean checkFuel(){
+		if (Ectoplasm >= 10) {
+			return true;
+		} else return false;
+	}
+	
+	public int maxHP(){
+		return maxHP((Hero)target);
+	}
+	
+	public static int maxHP( Hero hero ){
+		return 12 + (int)Math.floor(hero.lvl * 3f);
+	}
+	
+	@Override
+	public int icon() {
+		return BuffIndicator.ECTOPLASM;
+	}
+	
+	@Override
+	public String toString() {
+		return Messages.get(this, "name");
+	}
+	
+	@Override
+	public String desc() {
+
+		if (checkFuel()) {
+
+			return Messages.get(this, "desc", (int) HP, maxHP(),
+					(int) Math.ceil(hero.lvl * 0.5), (int) Math.ceil(hero.lvl * 1.2), // guardian form
+					(int) Math.floor(hero.lvl * 0.3));                                // sentry form
+
+		} else return Messages.get(this, "needfuel", Ectoplasm);
+	}
+	
+	private static final String HEALTH = "hp";
+	private static final String FUEL   = "fuel";
+
+	@Override
+	public void storeInBundle(Bundle bundle) {
+		super.storeInBundle(bundle);
+		bundle.put(HEALTH, HP);
+		bundle.put(FUEL, Ectoplasm);
+	}
+	
+	@Override
+	public void restoreFromBundle(Bundle bundle) {
+		super.restoreFromBundle(bundle);
+		HP = bundle.getFloat(HEALTH);
+		Ectoplasm = bundle.getInt(FUEL);
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfThunder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfThunder.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/DwarfThunder.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,116 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.noosa.Image;
+import com.watabou.utils.Bundle;
+
+public class DwarfThunder extends Buff {
+	
+	{
+		type = buffType.POSITIVE;
+		announced = false;
+	}
+
+	protected int level;
+	protected int interval;
+	
+	@Override
+	public boolean act() {
+		if (target.isAlive()) {
+			interval-=TICK;
+			spend(TICK);
+			if (interval <= 0) {
+				interval = 3;
+				level--;
+				BuffIndicator.refreshHero();
+				if(level <= 0) {
+					detach();
+				}
+			}
+		} else {
+			detach();
+		}
+		
+		return true;
+	}
+	
+	public int level() {
+		return level;
+	}
+	
+	public void set() {
+		interval = 3;
+		level++;
+		if (level == 4) {
+			target.sprite.showStatus(0x00CBFF, Messages.get(this, "blast"));
+		} else target.sprite.showStatus(0x00CBFF, Messages.get(this, "level", level));
+		BuffIndicator.refreshHero();
+	}
+
+	public void reset() {
+		level = 0;
+		interval = 0;
+		detach();
+	}
+
+	@Override
+	public int icon() {
+		return BuffIndicator.VERTIGO;
+	}
+	
+	@Override
+	public void tintIcon(Image icon) {
+		icon.tint(0x00CBFF, 0.25f*level);
+
+	}
+	
+	@Override
+	public String toString() {
+		return Messages.get(this, "name");
+	}
+	
+	@Override
+	public String desc() {
+		return Messages.get(this, "desc", level, interval);
+	}
+	
+	private static final String LEVEL	    = "level";
+	private static final String INTERVAL    = "interval";
+	
+	@Override
+	public void storeInBundle( Bundle bundle ) {
+		super.storeInBundle( bundle );
+		bundle.put( INTERVAL, interval );
+		bundle.put( LEVEL, level );
+	}
+	
+	@Override
+	public void restoreFromBundle( Bundle bundle ) {
+		super.restoreFromBundle( bundle );
+		interval = bundle.getInt( INTERVAL );
+		level = bundle.getInt( LEVEL );
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/OnBlessedWater.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/OnBlessedWater.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/OnBlessedWater.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,27 @@
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+
+public class OnBlessedWater extends FlavourBuff {
+    {
+        type = buffType.NEGATIVE;
+        announced = false;
+    }
+
+    @Override
+    public int icon() {
+        return BuffIndicator.DEVOTION;
+    }
+
+    @Override
+    public String toString() {
+        return Messages.get(Devotion.class, "holy_water_debuff_name");
+    }
+
+    @Override
+    public String desc() {
+        return Messages.get(Devotion.class, "holy_water_debuff_desc", dispTurns());
+    }
+
+}
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/TransfusionBuff.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/TransfusionBuff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/TransfusionBuff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,48 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+
+public class TransfusionBuff extends Buff {
+
+    {
+        type = buffType.POSITIVE;
+        announced = true;
+    }
+
+    @Override
+    public int icon() {
+        return BuffIndicator.HEART;
+    }
+
+    @Override
+    public String toString() {
+        return Messages.get(this, "name");
+    }
+
+    @Override
+    public String desc() {
+        return Messages.get(this, "desc");
+    }
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/TransmuterBuff.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/TransmuterBuff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/buffs/TransmuterBuff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,49 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.buffs;
+
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+
+
+public class TransmuterBuff extends FlavourBuff {
+
+	{
+		type = buffType.NEUTRAL;
+		announced = true;
+	}
+
+	@Override
+	public int icon() {
+		return BuffIndicator.TRANSMUTE;
+	}
+
+	@Override
+	public String toString() {
+		return Messages.get(this, "name");
+	}
+
+	@Override
+	public String desc() {
+		return Messages.get(this, "desc", dispTurns());
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/Hero.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/Hero.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/Hero.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -34,15 +34,23 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.AdrenalineSurge;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Amok;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Awareness;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Baptized;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Barkskin;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Berserk;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bleeding;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bless;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Burning;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Charm;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Chill;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Combo;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Drowsy;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfArmorBuff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfFocus;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.FlavourBuff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Foresight;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Frost;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Fury;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Hunger;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Invisibility;
@@ -54,19 +62,28 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Vertigo;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Weakness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Wraith;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CheckedCell;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Flare;
+import com.shatteredpixel.shatteredpixeldungeon.effects.MagicMissile;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.PurpleParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.Amulet;
 import com.shatteredpixel.shatteredpixeldungeon.items.Ankh;
+import com.shatteredpixel.shatteredpixeldungeon.items.BrokenSeal;
 import com.shatteredpixel.shatteredpixeldungeon.items.Dewdrop;
 import com.shatteredpixel.shatteredpixeldungeon.items.Heap;
 import com.shatteredpixel.shatteredpixeldungeon.items.Heap.Type;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.KindOfWeapon;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Affection;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.AntiMagic;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Brimstone;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Camouflage;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Flow;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Thorns;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Viscosity;
 import com.shatteredpixel.shatteredpixeldungeon.items.artifacts.AlchemistsToolkit;
 import com.shatteredpixel.shatteredpixeldungeon.items.artifacts.CapeOfThorns;
@@ -135,6 +152,8 @@
 import java.util.ArrayList;
 import java.util.Collections;
 
+import static com.shatteredpixel.shatteredpixeldungeon.Dungeon.hero;
+
 public class Hero extends Char {
 
 	{
@@ -199,9 +218,10 @@
 		int curHT = HT;
 		
 		HT = 20 + 5*(lvl-1) + HTBoost;
+
 		float multiplier = RingOfMight.HTMultiplier(this);
 		HT = Math.round(multiplier * HT);
-		
+
 		if (buff(ElixirOfMight.HTBoost.class) != null){
 			HT += buff(ElixirOfMight.HTBoost.class).boost();
 		}
@@ -337,7 +357,11 @@
 				accuracy *= 1.5f;
 			}
 		}
-		
+
+		if (wep.enlightened && target instanceof Wraith) {
+			accuracy *= 10f;
+		}
+
 		if (wep != null) {
 			return (int)(attackSkill * accuracy * wep.accuracyFactor( this ));
 		} else {
@@ -360,6 +384,16 @@
 			evasion = belongings.armor.evasionFactor(this, evasion);
 		}
 
+		DwarfFocus focus = hero.buff(DwarfFocus.class);
+		if (focus != null && focus.focused() && paralysed == 0) {
+			sprite.zap(enemy.pos);
+			CellEmitter.center(pos).burst( Speck.factory( Speck.FORGE ), 4 );
+			Sample.INSTANCE.play( Assets.SND_EVOKE );
+			Buff.affect(enemy, Paralysis.class, 1f);
+
+			evasion = 100_000_000;
+		}
+
 		return Math.round(evasion);
 	}
 	
@@ -397,7 +431,12 @@
 
 		if (wep != null) {
 			dmg = wep.damageRoll( this );
-			if (!(wep instanceof MissileWeapon)) dmg += RingOfForce.armedDamageBonus(this);
+			if (!(wep instanceof MissileWeapon)) {
+				if (Dungeon.hero.heroClass == HeroClass.DWARF && RingOfForce.damageRoll(this)/2 > 0) {
+					// AddedPD : Dwarf Survivor cannot be unarmed, so gain bonus dmg(as half as when unarmed)
+					dmg += RingOfForce.damageRoll(this)/2;
+				} else dmg += RingOfForce.armedDamageBonus(this);
+			}
 		} else {
 			dmg = RingOfForce.damageRoll(this);
 		}
@@ -433,9 +472,7 @@
 	public boolean canSurpriseAttack(){
 		if (belongings.weapon == null || !(belongings.weapon instanceof Weapon))    return true;
 		if (STR() < ((Weapon)belongings.weapon).STRReq())                           return false;
-		if (belongings.weapon instanceof Flail)                                     return false;
-
-		return true;
+		return !(belongings.weapon instanceof Flail);
 	}
 
 	public boolean canAttack(Char enemy){
@@ -458,15 +495,24 @@
 	}
 	
 	public float attackDelay() {
+		float baseDLY = 1f;
+		if (hero.belongings.armor != null &&
+				hero.belongings.armor.hasGlyph(Flow.class, this)
+				&& hero.belongings.armor.checkSeal() != null
+				&& hero.subClass == HeroSubClass.SEALKNIGHT
+				&& Dungeon.level.water[pos]){
+			// Flow : attack speed will increase on the water
+			baseDLY *= 0.8f; // same as scimitar
+		}
+
 		if (belongings.weapon != null) {
-			
-			return belongings.weapon.speedFactor( this );
+			return baseDLY * belongings.weapon.speedFactor( this );
 			
 		} else {
 			//Normally putting furor speed on unarmed attacks would be unnecessary
 			//But there's going to be that one guy who gets a furor+force ring combo
 			//This is for that one guy, you shall get your fists of fury!
-			return RingOfFuror.attackDelayMultiplier(this);
+			return baseDLY * RingOfFuror.attackDelayMultiplier(this);
 		}
 	}
 
@@ -522,6 +568,7 @@
 			spendAndNext( TICK );
 			return false;
 		}
+
 		
 		boolean actResult;
 		if (curAction == null) {
@@ -536,6 +583,16 @@
 			actResult = false;
 			
 		} else {
+
+			// AddedPD : Dwarf's epic armor's ability = perform all action as twice as faster
+			if (buff (DwarfArmorBuff.class) != null) {
+				CellEmitter.get( pos ).burst( Speck.factory( Speck.STEAM ), 2);
+				Sample.INSTANCE.play(Assets.SND_PUFF);
+			}
+
+			if (subClass == HeroSubClass.MONK && hero.visibleEnemies() >= 1){
+				Buff.affect(this, DwarfFocus.class).gainStack();
+			}
 			
 			resting = false;
 			
@@ -697,7 +754,7 @@
 			Alchemy alch = (Alchemy) Dungeon.level.blobs.get(Alchemy.class);
 			//TODO logic for a well having dried up?
 			if (alch != null) {
-				alch.alchPos = dst;
+				Alchemy.alchPos = dst;
 				AlchemyScene.setProvider( alch );
 			}
 			ShatteredPixelDungeon.switchScene(AlchemyScene.class);
@@ -891,6 +948,7 @@
 					ready();
 				} else {
 					Badges.silentValidateHappyEnd();
+					Badges.validateClericUnlock();
 					Dungeon.win( Amulet.class );
 					Dungeon.deleteGame( GamesInProgress.curSlot, true );
 					Game.switchScene( SurfaceScene.class );
@@ -962,7 +1020,7 @@
 		KindOfWeapon wep = belongings.weapon;
 
 		if (wep != null) damage = wep.proc( this, enemy, damage );
-		
+
 		switch (subClass) {
 		case SNIPER:
 			if (wep instanceof MissileWeapon && !(wep instanceof SpiritBow.SpiritArrow)) {
@@ -983,16 +1041,78 @@
 				});
 			}
 			break;
+
+		case SEALKNIGHT:
+			BrokenSeal.WarriorShield shield = buff(BrokenSeal.WarriorShield.class);
+			int gainSH = 0;
+			if (belongings.armor.checkSeal() != null) {
+
+				Armor.Glyph glyph = belongings.armor.glyph;
+
+				if (glyph instanceof Affection && enemy.buff(Charm.class) != null) {
+					// Affection : restore 10% of dealt damage when hits charmed enemy
+					if (damage > 0) {
+						gainSH = 1 + (damage / 10);
+						shield.supercharge(gainSH);
+						sprite.emitter().burst( Speck.factory( Speck.SH_GEN ), gainSH );
+					}
+
+				} if (glyph instanceof Camouflage) {
+					// Camouflage : restore 20% of dealt damage when sneak attack
+					if (enemy instanceof Mob && ((Mob) enemy).surprisedBy(hero)) {
+						if (damage > 0) {
+							gainSH = 1 + (damage / 5);
+							shield.supercharge(gainSH);
+							sprite.emitter().burst( Speck.factory( Speck.SH_GEN ), gainSH );
+						}
+					}
+
+				} if (glyph instanceof Thorns && enemy.buff(Bleeding.class) != null) {
+					// Affection : restore 10% of dealt damage when hits bleeding enemy
+					if (damage > 0) {
+						gainSH = 1 + (damage / 10);
+						shield.supercharge(gainSH);
+						sprite.emitter().burst( Speck.factory( Speck.SH_GEN ), gainSH );
+					}
+
+				} if (glyph instanceof Viscosity && buff(Viscosity.DeferedDamage.class) != null) {
+					// Viscosity : reduce deferred damage as 10% of dealt damage
+					Viscosity.DeferedDamage deferred = buff(Viscosity.DeferedDamage.class);
+					if (damage > 0) {
+						deferred.reduceDamage(1 + (damage / 10));
+						CellEmitter.center(enemy.pos).burst(PurpleParticle.BURST, damage+1);
+					}
+				}
+			}
+			break;
+
+		// AddedPD : for spiritwalker's "spectral blast" - huntress 3rd subclass
+		case SPIRITWALKER:
+			if (wep instanceof SpiritBow.SpiritArrow) {
+				for (int i : PathFinder.NEIGHBOURS8) {
+					Char ch = Actor.findChar(enemy.pos + i);
+
+					if (ch != null) {
+						// only harm enemy(no self damage, no friendly fire)
+						if (ch.alignment != Char.Alignment.ALLY || ch != Dungeon.hero) {
+							// activate bow's enchantment
+							ch.damage(damage, wep);
+						}
+					}
+				}
+
+				SpiritBow.SpectralBlast.blast(enemy.pos);
+			}
+			break;
 		default:
 		}
-
 		
 		return damage;
 	}
 	
 	@Override
 	public int defenseProc( Char enemy, int damage ) {
-		
+
 		if (damage > 0 && subClass == HeroSubClass.BERSERKER){
 			Berserk berserk = Buff.affect(this, Berserk.class);
 			berserk.damage(damage);
@@ -1011,7 +1131,7 @@
 		if (rockArmor != null) {
 			damage = rockArmor.absorb(damage);
 		}
-		
+
 		return damage;
 	}
 	
@@ -1039,9 +1159,23 @@
 
 		//TODO improve this when I have proper damage source logic
 		if (belongings.armor != null && belongings.armor.hasGlyph(AntiMagic.class, this)
-				&& AntiMagic.RESISTS.contains(src.getClass())){
-			dmg -= AntiMagic.drRoll(belongings.armor.level());
+				&& AntiMagic.RESISTS.contains(src.getClass())) {
+
+			int reduction = AntiMagic.drRoll(belongings.armor.level());
+			dmg -= reduction;
+
+			// AddedPD : for sealknight - 'counter zap'
+			if (hero.belongings.armor.checkSeal() != null
+					&& hero.subClass == HeroSubClass.SEALKNIGHT) {
+				AntiMagic.SealMagic onMagic = Buff.affect( this, AntiMagic.SealMagic.class );
+				onMagic.prolong( reduction + 1 );
+				this.sprite.emitter().burst(MagicMissile.MagicParticle.ATTRACTING, reduction + 1);
+			}
 		}
+
+		// AddedPD : buff for berserker - this formula affects "after" gain berserk, so don't worry!
+		Berserk berserk = buff(Berserk.class);
+		if (berserk != null) { dmg = berserk.reduceFactor(dmg); }
 
 		super.damage( dmg, src );
 	}
@@ -1185,6 +1319,10 @@
 				Buff.affect(this, Momentum.class).gainStack();
 			}
 
+			if (subClass == HeroSubClass.MONK && hero.visibleEnemies() >= 1){
+				Buff.affect(this, DwarfFocus.class).gainStack();
+			}
+
 			//FIXME this is a fairly sloppy fix for a crash involving pitfall traps.
 			//really there should be a way for traps to specify whether action should continue or
 			//not when they are pressed.
@@ -1252,13 +1390,9 @@
 			curAction = new HeroAction.Ascend( cell );
 			
 		} else  {
-			
-			if (!Dungeon.level.visited[cell] && !Dungeon.level.mapped[cell]
-					&& Dungeon.level.traps.get(cell) != null && Dungeon.level.traps.get(cell).visible) {
-				walkingToVisibleTrapInFog = true;
-			} else {
-				walkingToVisibleTrapInFog = false;
-			}
+
+			walkingToVisibleTrapInFog = !Dungeon.level.visited[cell] && !Dungeon.level.mapped[cell]
+					&& Dungeon.level.traps.get(cell) != null && Dungeon.level.traps.get(cell).visible;
 			
 			curAction = new HeroAction.Move( cell );
 			lastAction = null;
@@ -1290,6 +1424,9 @@
 				i.onHeroGainExp(percent, this);
 			}
 		}
+
+		Devotion devotion = buff(Devotion.class);
+		if (devotion != null) devotion.onHeroGainExp();
 		
 		boolean levelUp = false;
 		while (this.exp >= maxExp()) {
@@ -1313,7 +1450,18 @@
 				GLog.p( Messages.get(this, "level_cap"));
 				Sample.INSTANCE.play( Assets.SND_LEVELUP );
 			}
-			
+
+			if (devotion != null) {
+				devotion.onLevelUp();
+				// AddedPD : redeemer's ally CAN GAIN EACH OWN +LEVEL
+				for (Mob mob : Dungeon.level.mobs.toArray( new Mob[0] )) {
+					if (mob.isBaptized()) {
+						Baptized baptized = mob.buff(Baptized.class);
+						baptized.gainLevel(mob);
+						new Flare( 6, 32 ).show( mob.sprite, 4f );
+					}
+				}
+			}
 		}
 		
 		if (levelUp) {
@@ -1619,6 +1767,14 @@
 				&& belongings.armor.hasGlyph(Brimstone.class, this)){
 			return true;
 		}
+
+		if ((effect == Frost.class || effect == Chill.class)
+				&& Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT
+				&& belongings.armor.checkSeal() != null
+				&& belongings.armor.hasGlyph(Brimstone.class, this)){
+			// Brimstone : immune to all 'heat-related' debuff
+			return true;
+		}
 		return super.isImmune(effect);
 	}
 
@@ -1744,6 +1900,11 @@
 		HP = HT;
 		Dungeon.gold = 0;
 		exp = 0;
+
+		if (heroClass == HeroClass.CLERIC) {
+			Devotion devotion = new Devotion();
+			devotion.attachTo(this);
+		}
 		
 		belongings.resurrect( resetLevel );
 
@@ -1756,7 +1917,7 @@
 			super.next();
 	}
 
-	public static interface Doom {
-		public void onDeath();
+	public interface Doom {
+		void onDeath();
 	}
 }
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroClass.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroClass.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -25,8 +25,11 @@
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
 import com.shatteredpixel.shatteredpixeldungeon.Challenges;
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
+import com.shatteredpixel.shatteredpixeldungeon.items.Ankh;
 import com.shatteredpixel.shatteredpixeldungeon.items.BrokenSeal;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.TomeOfMastery;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.ClothArmor;
 import com.shatteredpixel.shatteredpixeldungeon.items.artifacts.CloakOfShadows;
 import com.shatteredpixel.shatteredpixeldungeon.items.bags.PotionBandolier;
@@ -34,6 +37,8 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.bags.VelvetPouch;
 import com.shatteredpixel.shatteredpixeldungeon.items.food.Food;
 import com.shatteredpixel.shatteredpixeldungeon.items.food.SmallRation;
+import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfExperience;
+import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfHaste;
 import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfHealing;
 import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfInvisibility;
 import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfLiquidFlame;
@@ -42,25 +47,33 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfLullaby;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfMagicMapping;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRage;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRemoveCurse;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfUpgrade;
+import com.shatteredpixel.shatteredpixeldungeon.items.spells.CurseInfusion;
+import com.shatteredpixel.shatteredpixeldungeon.items.stones.StoneOfShock;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfMagicMissile;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.SpiritBow;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Cudgel;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Dagger;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.DwarfArm;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Gloves;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.MagesStaff;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.WornShortsword;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.ThrowingKnife;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.ThrowingStone;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.ui.ActionIndicator;
 import com.watabou.utils.Bundle;
-import com.watabou.utils.DeviceCompat;
 
 public enum HeroClass {
 
-	WARRIOR( "warrior", HeroSubClass.BERSERKER, HeroSubClass.GLADIATOR ),
-	MAGE( "mage", HeroSubClass.BATTLEMAGE, HeroSubClass.WARLOCK ),
-	ROGUE( "rogue", HeroSubClass.ASSASSIN, HeroSubClass.FREERUNNER ),
-	HUNTRESS( "huntress", HeroSubClass.SNIPER, HeroSubClass.WARDEN );
+	WARRIOR( "warrior", HeroSubClass.BERSERKER, HeroSubClass.GLADIATOR, HeroSubClass.SEALKNIGHT ),
+	MAGE( "mage", HeroSubClass.BATTLEMAGE, HeroSubClass.WARLOCK, HeroSubClass.TRANSMUTER),
+	ROGUE( "rogue", HeroSubClass.ASSASSIN, HeroSubClass.FREERUNNER, HeroSubClass.BURGLAR ),
+	HUNTRESS( "huntress", HeroSubClass.SNIPER, HeroSubClass.WARDEN, HeroSubClass.SPIRITWALKER ),
+	CLERIC("cleric", HeroSubClass.CRUSADER, HeroSubClass.SCHOLAR, HeroSubClass.REDEEMER),
+	DWARF("dwarf", HeroSubClass.THUNDERBRINGER, HeroSubClass.MONK, HeroSubClass.NECROSMITH);
 
 	private String title;
 	private HeroSubClass[] subClasses;
@@ -92,6 +105,14 @@
 			case HUNTRESS:
 				initHuntress( hero );
 				break;
+
+			case CLERIC:
+				initCleric( hero );
+				break;
+
+			case DWARF:
+				initDwarf( hero );
+				break;
 		}
 		
 	}
@@ -106,9 +127,7 @@
 		if (Dungeon.isChallenged(Challenges.NO_FOOD)){
 			new SmallRation().collect();
 		}
-		
 		new ScrollOfIdentify().identify();
-
 	}
 
 	public Badges.Badge masteryBadge() {
@@ -121,6 +140,10 @@
 				return Badges.Badge.MASTERY_ROGUE;
 			case HUNTRESS:
 				return Badges.Badge.MASTERY_HUNTRESS;
+			case CLERIC:
+				return Badges.Badge.MASTERY_CLERIC;
+			case DWARF:
+				return Badges.Badge.MASTERY_DWARF;
 		}
 		return null;
 	}
@@ -154,7 +177,7 @@
 
 		new ScrollHolder().collect();
 		Dungeon.LimitedDrops.SCROLL_HOLDER.drop();
-		
+
 		new ScrollOfUpgrade().identify();
 		new PotionOfLiquidFlame().identify();
 	}
@@ -193,6 +216,33 @@
 		new PotionOfMindVision().identify();
 		new ScrollOfLullaby().identify();
 	}
+
+	private static void initCleric( Hero hero ) {
+		(hero.belongings.weapon = new Cudgel()).identify();
+
+		Ankh ankh = new Ankh();
+		ankh.isCleric().collect();
+
+		Devotion devotion = new Devotion();
+		devotion.attachTo(hero);
+		ActionIndicator.setAction(devotion);
+
+		new PotionOfExperience().identify();
+		new ScrollOfRemoveCurse().identify();
+	}
+
+	private static void initDwarf( Hero hero ) {
+
+		(hero.belongings.weapon = new DwarfArm()).identify();
+
+		StoneOfShock stone = new StoneOfShock();
+		stone.identify().quantity(5).collect();
+
+		Dungeon.quickslot.setSlot(0, stone);
+
+		new PotionOfHaste().identify();
+		new ScrollOfRecharging().identify();
+	}
 	
 	public String title() {
 		return Messages.get(HeroClass.class, title);
@@ -212,6 +262,10 @@
 				return Assets.ROGUE;
 			case HUNTRESS:
 				return Assets.HUNTRESS;
+			case CLERIC:
+				return Assets.CLERIC;
+			case DWARF:
+				return Assets.DWARFHERO;
 		}
 	}
 	
@@ -249,22 +303,46 @@
 						Messages.get(HeroClass.class, "huntress_perk4"),
 						Messages.get(HeroClass.class, "huntress_perk5"),
 				};
+			case CLERIC:
+				return new String[]{
+						Messages.get(HeroClass.class, "cleric_perk1"),
+						Messages.get(HeroClass.class, "cleric_perk2"),
+						Messages.get(HeroClass.class, "cleric_perk3"),
+						Messages.get(HeroClass.class, "cleric_perk4"),
+						Messages.get(HeroClass.class, "cleric_perk5"),
+				};
+			case DWARF:
+				return new String[]{
+						Messages.get(HeroClass.class, "dwarf_perk1"),
+						Messages.get(HeroClass.class, "dwarf_perk2"),
+						Messages.get(HeroClass.class, "dwarf_perk3"),
+						Messages.get(HeroClass.class, "dwarf_perk4"),
+						Messages.get(HeroClass.class, "dwarf_perk5"),
+				};
 		}
 	}
 	
 	public boolean isUnlocked(){
 		//always unlock on debug builds
-		if (DeviceCompat.isDebug()) return true;
+		//if (DeviceCompat.isDebug()) return true;
 		
 		switch (this){
 			case WARRIOR: default:
 				return true;
 			case MAGE:
-				return Badges.isUnlocked(Badges.Badge.UNLOCK_MAGE);
+				//return Badges.isUnlocked(Badges.Badge.UNLOCK_MAGE);
+				return true;
 			case ROGUE:
-				return Badges.isUnlocked(Badges.Badge.UNLOCK_ROGUE);
+				//return Badges.isUnlocked(Badges.Badge.UNLOCK_ROGUE);
+				return true;
 			case HUNTRESS:
-				return Badges.isUnlocked(Badges.Badge.UNLOCK_HUNTRESS);
+				//return Badges.isUnlocked(Badges.Badge.UNLOCK_HUNTRESS);
+				return true;
+			case CLERIC:
+				//return Badges.isUnlocked(Badges.Badge.UNLOCK_CLERIC);
+				return true;
+			case DWARF:
+				return Badges.isUnlocked(Badges.Badge.UNLOCK_DWARF);
 		}
 	}
 	
@@ -278,6 +356,10 @@
 				return Messages.get(HeroClass.class, "rogue_unlock");
 			case HUNTRESS:
 				return Messages.get(HeroClass.class, "huntress_unlock");
+			case CLERIC:
+				return Messages.get(HeroClass.class, "cleric_unlock");
+			case DWARF:
+				return Messages.get(HeroClass.class, "dwarf_unlock");
 		}
 	}
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroSubClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroSubClass.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/hero/HeroSubClass.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -38,8 +38,24 @@
 	FREERUNNER( "freerunner" ),
 	
 	SNIPER( "sniper" ),
-	WARDEN( "warden" );
-	
+	WARDEN( "warden" ),
+
+	// AddedPD : 3rd subclasses for 'basic classes'
+	SEALKNIGHT("sealknight"),		// Warrior 3rd subclass : 'shield master', enhanced glyph
+	TRANSMUTER("transmuter"),		// Mage 3rd subclass : trickery magic, transmute staff when fully charged or ran out of charge
+	BURGLAR("burglar"),			// Rogue 3rd subclass : professional of thief-work, dungeoneering
+	SPIRITWALKER("spiritwalker"),	// Huntress 3rd subclass : detect enemy, aoe spirit arrow
+
+	// Cleric : No magic wands, Divine caster ; smite, combat-regen-aura, 'holy enchant'
+	CRUSADER("crusader"),			// Antimagic brawler - antimagic smite(blind), arcane armor, adrenaline aura
+	SCHOLAR("scholar"),			// Miracle master - greater smite(Aoe), blob of dispell undead, flood of holy water
+	REDEEMER("redeemer"),			// Reclaimer - healing smite(for ally), high-cost convert enemy which can level up
+
+	// Dwarf Survivor : 'one-melee-only', Infighter with fist of cyborg
+	THUNDERBRINGER("thunderbringer"), // Hit and run, charge stack by attack, blast lightning when stack becomes 3 charges
+	MONK("monk"),						// Building 'focus' while moving, dodge all attacks while focused, counter attack
+	NECROSMITH("necrosmith");			// Extreact souls, activate own 'Prismatic golem', with tanker form & attacker form
+
 	private String title;
 	
 	HeroSubClass( String title ) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Eye.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Eye.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Eye.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -60,6 +60,7 @@
 		lootChance = 0.5f;
 
 		properties.add(Property.DEMONIC);
+		properties.add(Property.MAGICAL); // AddedPD
 	}
 
 	@Override
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/King.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/King.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/King.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -70,6 +70,7 @@
 
 		properties.add(Property.BOSS);
 		properties.add(Property.UNDEAD);
+		properties.add(Property.MAGICAL); // AddedPD
 	}
 	
 	private boolean nextPedestal = true;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Mob.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,6 +21,7 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.actors.mobs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
 import com.shatteredpixel.shatteredpixeldungeon.Challenges;
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
@@ -29,38 +30,51 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Adrenaline;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Amok;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Baptized;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Charm;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Corruption;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Hunger;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfNecro;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.OnBlessedWater;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Preparation;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Sleep;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.SoulMark;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Terror;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Weakness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Necrogolem;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CheckedCell;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Flare;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Surprise;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Wound;
 import com.shatteredpixel.shatteredpixeldungeon.items.Generator;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Potential;
 import com.shatteredpixel.shatteredpixeldungeon.items.artifacts.DriedRose;
 import com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass;
 import com.shatteredpixel.shatteredpixeldungeon.items.rings.Ring;
 import com.shatteredpixel.shatteredpixeldungeon.items.rings.RingOfWealth;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfMagicMapping;
 import com.shatteredpixel.shatteredpixeldungeon.items.stones.StoneOfAggression;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.enchantments.Lucky;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.MissileWeapon;
 import com.shatteredpixel.shatteredpixeldungeon.levels.Level;
 import com.shatteredpixel.shatteredpixeldungeon.levels.features.Chasm;
+import com.shatteredpixel.shatteredpixeldungeon.mechanics.ShadowCaster;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.plants.Swiftthistle;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.watabou.noosa.audio.Sample;
 import com.watabou.utils.Bundle;
 import com.watabou.utils.GameMath;
 import com.watabou.utils.PathFinder;
+import com.watabou.utils.Point;
 import com.watabou.utils.Random;
 import com.watabou.utils.Reflection;
 
@@ -248,18 +262,18 @@
 						}
 					}
 				}
-				
+
 			//if the mob is an ally...
 			} else if ( alignment == Alignment.ALLY ) {
 				//look for hostile mobs to attack
 				for (Mob mob : Dungeon.level.mobs)
 					if (mob.alignment == Alignment.ENEMY && fieldOfView[mob.pos])
 						//intelligent allies do not target mobs which are passive, wandering, or asleep
-						if (!intelligentAlly ||
+						if (!intelligentAlly || !isBaptized() ||
 								(mob.state != mob.SLEEPING && mob.state != mob.PASSIVE && mob.state != mob.WANDERING)) {
 							enemies.add(mob);
 						}
-				
+
 			//if the mob is an enemy...
 			} else if (alignment == Alignment.ENEMY) {
 				//look for ally mobs to attack
@@ -305,7 +319,7 @@
 	@Override
 	public void add( Buff buff ) {
 		super.add( buff );
-		if (buff instanceof Amok || buff instanceof Corruption) {
+		if (buff instanceof Amok || buff instanceof Corruption || buff instanceof Baptized) {
 			state = HUNTING;
 		} else if (buff instanceof Terror) {
 			state = FLEEING;
@@ -329,7 +343,17 @@
 	}
 	
 	protected boolean getCloser( int target ) {
-		
+
+		// AddedPD : the Redeemer's baptized ally - act just like ally golden bee
+		if (isBaptized()) {
+			if (enemy == null) {
+				target = Dungeon.hero.pos;
+			} else if (enemy != null) {
+				target = enemy.pos;
+			} else if (state == WANDERING || Dungeon.level.distance(target, Dungeon.hero.pos) > 3)
+				this.target = target = Dungeon.hero.pos;
+		}
+
 		if (rooted || target == pos) {
 			return false;
 		}
@@ -486,9 +510,17 @@
 		if (buff(Weakness.class) != null){
 			damage *= 0.67f;
 		}
+		// AddedPD : scholar's holy water
+		if ( buff( OnBlessedWater.class ) != null ) {
+			damage *= 0.75f;
+		}
+		if (buff(Baptized.class) != null) {
+			int levelBonus = Devotion.Baptized_Level(this);
+			damage += Random.NormalIntRange(0, levelBonus);
+		}
 		return damage;
 	}
-	
+
 	@Override
 	public int defenseSkill( Char enemy ) {
 		boolean seen = (enemySeen && enemy.invisible == 0);
@@ -496,9 +528,19 @@
 		if ( seen
 				&& paralysed == 0
 				&& !(alignment == Alignment.ALLY && enemy == Dungeon.hero)) {
-			return this.defenseSkill;
+			// AddedPD : Potential - bypass enemy evasion, such like 'magic attack'
+			Potential.SealCharge sealCharge = enemy.buff(Potential.SealCharge.class);
+			if (sealCharge != null) {
+				int bypass = Math.max(0, this.defenseSkill - sealCharge.getDamage());
+				sealCharge.costDamage(this.defenseSkill - sealCharge.getDamage());
+				return bypass;
+			}
+			else return this.defenseSkill;
 		} else {
-			return 0;
+			if (buff(Baptized.class) != null && enemy != Dungeon.hero) {
+				int levelBonus = 2*Devotion.Baptized_Level(this);
+				return this.defenseSkill += levelBonus;
+			} else return 0;
 		}
 	}
 	
@@ -510,7 +552,7 @@
 		if (enemy instanceof Hero && ((Hero) enemy).belongings.weapon instanceof MissileWeapon){
 			hitWithRanged = true;
 		}
-		
+
 		if ((!enemySeen || enemy.invisible > 0)
 				&& enemy == Dungeon.hero && Dungeon.hero.canSurpriseAttack()) {
 			Statistics.sneakAttacks++;
@@ -578,9 +620,47 @@
 	public void destroy() {
 		
 		super.destroy();
-		
+
+		// AddedPD : for burglar's detection-by-kill
+		if (Dungeon.hero.subClass == HeroSubClass.BURGLAR && alignment == Alignment.ENEMY) {
+			int DIST = 3;
+			Point c = Dungeon.level.cellToPoint(this.pos);
+			int[] rounding = ShadowCaster.rounding[DIST];
+			int left, right;
+			int curr;
+			boolean noticed = false;
+			for (int y = Math.max(0, c.y - DIST); y <= Math.min(Dungeon.level.height()-1, c.y + DIST); y++) {
+				if (rounding[Math.abs(c.y - y)] < Math.abs(c.y - y)) {
+					left = c.x - rounding[Math.abs(c.y - y)];
+				} else {
+					left = DIST;
+					while (rounding[left] < rounding[Math.abs(c.y - y)]){
+						left--;
+					}
+					left = c.x - left;
+				}
+				right = Math.min(Dungeon.level.width()-1, c.x + c.x - left);
+				left = Math.max(0, left);
+				for (curr = left + y * Dungeon.level.width(); curr <= right + y * Dungeon.level.width(); curr++){
+					Dungeon.hero.sprite.parent.addToBack( new CheckedCell( curr ) );
+					Dungeon.level.mapped[curr] = true;
+					if (Dungeon.level.secret[curr]) {
+						Dungeon.level.discover(curr);
+						if (Dungeon.level.heroFOV[curr]) {
+							GameScene.discoverTile(curr, Dungeon.level.map[curr]);
+							ScrollOfMagicMapping.discover(curr);
+							noticed = true;
+						}
+					}
+				}
+			}
+			if (noticed) {
+				Sample.INSTANCE.play( Assets.SND_SECRET );
+			}
+		}
+
 		Dungeon.level.mobs.remove( this );
-		
+
 		if (Dungeon.hero.isAlive()) {
 			
 			if (alignment == Alignment.ENEMY) {
@@ -591,6 +671,31 @@
 				int exp = Dungeon.hero.lvl <= maxLvl ? EXP : 0;
 				if (exp > 0) {
 					Dungeon.hero.sprite.showStatus(CharSprite.POSITIVE, Messages.get(this, "exp", exp));
+
+					// AddedPD : necrosmith - summmon and heal when exp gain from enemy
+					if (Dungeon.hero.subClass == HeroSubClass.NECROSMITH) {
+						boolean found = false;
+						for (Mob m : Dungeon.level.mobs.toArray(new Mob[0])){
+							if (m instanceof Necrogolem){
+								found = true;
+								m.HP = Math.min(m.HT, m.HP+exp);
+								m.sprite.emitter().burst(Speck.factory(Speck.HEALING), 1);
+							}
+						}
+
+						if (!found) {
+							if (Dungeon.hero.buff(DwarfNecro.class) == null) {
+								Buff.affect(Dungeon.hero, DwarfNecro.class).set(DwarfNecro.maxHP(Dungeon.hero));
+								if (!Dungeon.hero.buff(DwarfNecro.class).checkFuel()){
+									Dungeon.hero.buff(DwarfNecro.class).gainFuel();
+								}
+							} else {
+								if (!Dungeon.hero.buff(DwarfNecro.class).checkFuel()){
+									Dungeon.hero.buff(DwarfNecro.class).gainFuel();
+								}
+							}
+						}
+					}
 				}
 				Dungeon.hero.earnExp(exp, getClass());
 			}
@@ -613,6 +718,14 @@
 
 		if (alignment == Alignment.ENEMY){
 			rollToDropLoot();
+
+			Devotion devotion = Dungeon.hero.buff(Devotion.class);
+			if (devotion != null && properties.contains(Property.BOSS)) devotion.onOther(Dungeon.depth);
+		}
+
+		if (buff(Baptized.class) != null) {
+			Devotion devotion = Dungeon.hero.buff(Devotion.class);
+			devotion.Baptized_canUse();
 		}
 		
 		if (Dungeon.hero.isAlive() && !Dungeon.level.heroFOV[pos]) {
@@ -812,10 +925,10 @@
 					target = Dungeon.level.randomDestination();
 					return true;
 				}
-				
+
 				int oldPos = pos;
 				if (target != -1 && getCloser( target )) {
-					
+
 					spend( 1 / speed() );
 					return moveSprite( oldPos,  pos );
 
@@ -888,9 +1001,14 @@
 			//preserve the ghost no matter where they are
 			if (mob instanceof DriedRose.GhostHero) {
 				((DriedRose.GhostHero) mob).clearDefensingPos();
+				level.mobs.remove(mob);
+				heldAllies.add(mob);
+
+			// AddedPD : also baptized allies
+			} else if (mob.isBaptized()) {
 				level.mobs.remove( mob );
 				heldAllies.add(mob);
-				
+
 			//preserve intelligent allies if they are near the hero
 			} else if (mob.alignment == Alignment.ALLY
 					&& mob.intelligentAlly
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Necromancer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Necromancer.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Necromancer.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -26,6 +26,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Adrenaline;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Baptized;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Corruption;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Beam;
@@ -59,6 +60,7 @@
 		lootChance = 0.2f; //see createloot
 		
 		properties.add(Property.UNDEAD);
+		properties.add(Property.MAGICAL); // AddedPD
 		
 		HUNTING = new Hunting();
 	}
@@ -228,10 +230,10 @@
 				summoningEmitter.burst( Speck.factory( Speck.RATTLE ), 5 );
 				sprite.idle();
 				
-				if (buff(Corruption.class) != null){
+				if (buff(Corruption.class) != null || buff(Baptized.class) != null){
 					Buff.affect(mySkeleton, Corruption.class);
 				}
-				
+
 				spend(TICK);
 				return true;
 			}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Shaman.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Shaman.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Shaman.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -51,6 +51,7 @@
 		lootChance = 0.33f;
 		
 		properties.add(Property.ELECTRIC);
+		properties.add(Property.MAGICAL); // AddedPD
 	}
 	
 	@Override
@@ -102,7 +103,7 @@
 				enemy.sprite.flash();
 				
 				if (enemy == Dungeon.hero) {
-					
+
 					Camera.main.shake( 2, 0.3f );
 					
 					if (!enemy.isAlive()) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Succubus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Succubus.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Succubus.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -28,13 +28,17 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Barrier;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Charm;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Light;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Sleep;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfLullaby;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfTeleportation;
 import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.SuccubusSprite;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
 import com.watabou.noosa.audio.Sample;
 import com.watabou.utils.PathFinder;
 import com.watabou.utils.Random;
@@ -61,6 +65,7 @@
 		lootChance = 0.05f;
 
 		properties.add(Property.DEMONIC);
+		properties.add(Property.MAGICAL); // AddedPD
 	}
 	
 	@Override
@@ -71,7 +76,6 @@
 	@Override
 	public int attackProc( Char enemy, int damage ) {
 		damage = super.attackProc( enemy, damage );
-		
 		if (enemy.buff(Charm.class) != null ){
 			int shield = (HP - HT) + (5 + damage);
 			if (shield > 0){
@@ -83,10 +87,15 @@
 			sprite.emitter().burst( Speck.factory( Speck.HEALING ), 2 );
 			Sample.INSTANCE.play( Assets.SND_CHARMS );
 		} else if (Random.Int( 3 ) == 0) {
-			//attack will reduce by 5 turns, so effectively 3-4 turns
-			Buff.affect( enemy, Charm.class, Random.IntRange( 3, 4 ) + 5 ).object = id();
-			enemy.sprite.centerEmitter().start( Speck.factory( Speck.HEART ), 0.2f, 5 );
-			Sample.INSTANCE.play( Assets.SND_CHARMS );
+			if (enemy == Dungeon.hero && Dungeon.hero.heroClass == HeroClass.CLERIC) {
+				GLog.i( Messages.capitalize(Messages.get(this, "cleric")) );
+				// AddedPD : Cleric special - Charm immunity from succubi
+			} else {
+				//attack will reduce by 5 turns, so effectively 3-4 turns
+				Buff.affect(enemy, Charm.class, Random.IntRange(3, 4) + 5).object = id();
+				enemy.sprite.centerEmitter().start(Speck.factory(Speck.HEART), 0.2f, 5);
+				Sample.INSTANCE.play(Assets.SND_CHARMS);
+			}
 		}
 		
 		return damage;
@@ -132,7 +141,7 @@
 				return;
 			}
 		}
-		
+
 		ScrollOfTeleportation.appear( this, cell );
 		
 		delay = BLINK_DELAY;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Warlock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Warlock.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Warlock.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -54,6 +54,7 @@
 		lootChance = 0.83f;
 
 		properties.add(Property.UNDEAD);
+		properties.add(Property.MAGICAL); // AddedPD
 	}
 	
 	@Override
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Yog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Yog.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/Yog.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -298,6 +298,7 @@
 			properties.add(Property.BOSS);
 			properties.add(Property.DEMONIC);
 			properties.add(Property.FIERY);
+			properties.add(Property.MAGICAL); // AddedPD
 		}
 		
 		@Override
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Necrogolem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Necrogolem.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Necrogolem.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,297 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.CorrosiveGas;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.ToxicGas;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Amok;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Burning;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Corruption;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfNecro;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.NecroGolemSprite;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndOptions;
+import com.watabou.noosa.Game;
+import com.watabou.noosa.audio.Sample;
+import com.watabou.utils.Bundle;
+import com.watabou.utils.Callback;
+import com.watabou.utils.Random;
+
+public class Necrogolem extends NPC {
+	
+	{
+		spriteClass = NecroGolemSprite.class;
+		
+		HP = HT = 12;
+		defenseSkill = 1;
+
+		alignment = Alignment.ALLY;
+		intelligentAlly = true;
+		state = HUNTING;
+
+		WANDERING = new Necrogolem.Wandering();
+		
+		//before other mobs
+		actPriority = MOB_PRIO + 1;
+	}
+
+	private Hero hero;
+	private int heroID;
+	public int golemTier;
+	
+	@Override
+	protected boolean act() {
+		
+		if ( hero == null ){
+			hero = (Hero)Actor.findById(heroID);
+			if ( hero == null ){
+				die(null);
+				sprite.killAndErase();
+				return true;
+			}
+		}
+
+		if (golemTier == 0) {
+			flying = true;
+		} else flying = false;
+
+		if (distance(hero) > 5) {
+			CellEmitter.get(pos).burst(ElmoParticle.FACTORY, 10);
+			Buff.affect(hero, DwarfNecro.class).set( HP );
+			Buff.affect(hero, DwarfNecro.class).reverseFuel();
+			destroy();
+			sprite.killAndErase();
+			Sample.INSTANCE.play( Assets.SND_MELD );
+			return true;
+		}
+
+		return super.act();
+	}
+	
+	private static final String HEROID	= "hero_id";
+	
+	@Override
+	public void storeInBundle( Bundle bundle ) {
+		super.storeInBundle( bundle );
+		bundle.put( HEROID, heroID );
+	}
+	
+	@Override
+	public void restoreFromBundle( Bundle bundle ) {
+		super.restoreFromBundle( bundle );
+		heroID = bundle.getInt( HEROID );
+	}
+	
+	public void summon( Hero hero, int HP ) {
+		this.hero = hero;
+		heroID = this.hero.id();
+		this.HP = HP;
+		HT = DwarfNecro.maxHP( hero );
+		golemTier = 1;
+	}
+
+	@Override
+	public int damageRoll() {
+		return Random.NormalIntRange(4 + hero.lvl / 8, 8 + hero.lvl / 2);
+	}
+
+	@Override
+	public int attackSkill( Char target ) {
+		return hero.attackSkill(target);
+	}
+
+	@Override
+	public int defenseSkill(Char enemy) {
+		if (hero != null) {
+			int baseEvasion = 4 + hero.lvl;
+			int heroEvasion = hero.defenseSkill(enemy);
+
+			//if the hero has more/less evasion, 50% of it is applied
+			return super.defenseSkill(enemy) * (baseEvasion + heroEvasion) / 2;
+		} else {
+			return 0;
+		}
+	}
+
+	@Override
+	public boolean interact() {
+
+		Char ally = this;
+		Game.runOnRenderThread(new Callback() {
+			@Override
+			public void call() {
+				GameScene.show(new WndOptions(
+						Messages.get(Necrogolem.class, "interact_title"),
+						Messages.get(Necrogolem.class, "interact_prompt"),
+						Messages.get(Necrogolem.class, "interact_guardian"),
+						Messages.get(Necrogolem.class, "interact_sentry"),
+						Messages.get(Necrogolem.class, "interact_place"),
+						Messages.get(Necrogolem.class, "interact_cancel")){
+					@Override
+					protected void onSelect(int index) {
+						if (index == 0){
+							golemTier = 1;
+							((NecroGolemSprite)sprite).transformGolem(1);
+							sprite.update();
+							CellEmitter.get(pos).burst(ElmoParticle.FACTORY, 10);
+						}
+
+						if (index == 1) {
+							golemTier = 0;
+							((NecroGolemSprite)sprite).transformGolem(0);
+							sprite.update();
+							CellEmitter.get(pos).burst(ElmoParticle.FACTORY, 10);
+						}
+
+						if (index == 2) {
+							int curPos = pos;
+
+							moveSprite( pos, Dungeon.hero.pos );
+							move( Dungeon.hero.pos );
+
+							Dungeon.hero.sprite.move( Dungeon.hero.pos, curPos );
+							Dungeon.hero.move( curPos );
+
+							Dungeon.hero.spend( 1 / Dungeon.hero.speed() );
+						}
+
+						if (index == 3) {
+							// cancel, do noting
+						} }
+
+				}); }	});
+
+		return false;
+	}
+
+	@Override
+	protected float attackDelay() {
+		if (golemTier == 1) {
+			return 2f; // guardian form is not good at attack
+		} else return super.attackDelay();
+	}
+	
+	@Override
+	protected boolean canAttack(Char enemy) {
+		if (golemTier == 0 && distance(enemy) > 5) {
+			return new Ballistica( pos, enemy.pos, Ballistica.MAGIC_BOLT).collisionPos == enemy.pos;
+		} else return super.canAttack(enemy);
+	}
+
+	//used so resistances can differentiate between melee and magical attacks
+	public static class NecroBolt {}
+
+	@Override
+	public boolean attack( Char enemy ) {
+
+		if (!Dungeon.level.adjacent( pos, enemy.pos )) {
+			spend( attackDelay() );
+			if (hit( this, enemy, true )) {
+				int dmg =  damageRoll();
+				enemy.damage( dmg, new NecroBolt() );
+
+				enemy.sprite.bloodBurstA( sprite.center(), dmg );
+				enemy.sprite.flash();
+
+				if (!enemy.isAlive() && enemy == Dungeon.hero) {
+					Dungeon.fail( getClass() );
+					GLog.n( Messages.get(Char.class, "kill", name) );
+				}
+				return true;
+			} else {
+				enemy.sprite.showStatus( CharSprite.NEUTRAL,  enemy.defenseVerb() );
+				return false;
+			}
+		} else {
+			return super.attack( enemy );
+		}
+	}
+
+	@Override
+	public int drRoll() {
+		if (hero != null){
+			if (golemTier == 1) {
+				return Random.NormalIntRange((int)Math.ceil(hero.lvl*0.5), (int)Math.ceil(hero.lvl*1.2));
+			} else return Random.NormalIntRange(0, (int)Math.floor(hero.lvl*0.3));
+		} else {
+			return 0;
+		}
+	}
+	
+	@Override
+	public int attackProc( Char enemy, int damage ) {
+		damage = super.attackProc( enemy, damage );
+		
+		if (enemy instanceof Mob && golemTier == 1) {
+			((Mob)enemy).aggro( this ); // guardian form only
+		}
+
+		return damage;
+	}
+
+	@Override
+	public CharSprite sprite() {
+		CharSprite s = super.sprite();
+		((NecroGolemSprite)s).transformGolem( golemTier );
+		return s;
+	}
+
+	{
+		immunities.add( ToxicGas.class );
+		immunities.add( CorrosiveGas.class );
+		immunities.add( Burning.class );
+		immunities.add( Corruption.class );
+		immunities.add( Amok.class );
+	}
+
+	private class Wandering extends Mob.Wandering{
+
+		@Override
+		public boolean act(boolean enemyInFOV, boolean justAlerted) {
+			if (!enemyInFOV){
+				CellEmitter.get(pos).burst(ElmoParticle.FACTORY, 10);
+				Buff.affect(hero, DwarfNecro.class).set( HP );
+				Buff.affect(hero, DwarfNecro.class).reverseFuel();
+				destroy();
+				sprite.killAndErase();
+				Sample.INSTANCE.play( Assets.SND_MELD );
+				return true;
+			} else {
+				return super.act(enemyInFOV, justAlerted);
+			}
+		}
+
+	}
+}
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Wandmaker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Wandmaker.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/Wandmaker.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,8 +24,10 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.items.Generator;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfExperience;
 import com.shatteredpixel.shatteredpixeldungeon.items.quest.CeremonialCandle;
 import com.shatteredpixel.shatteredpixeldungeon.items.quest.CorpseDust;
 import com.shatteredpixel.shatteredpixeldungeon.items.quest.Embers;
@@ -146,6 +148,12 @@
 				case HUNTRESS:
 					msg1 += Messages.get(this, "intro_huntress");
 					break;
+				case CLERIC:
+					msg1 += Messages.get(this, "intro_cleric");
+					break;
+				case DWARF:
+					msg1 += Messages.get(this, "intro_dwarf");
+					break;
 			}
 
 			msg1 += Messages.get(this, "intro_1");
@@ -162,7 +170,12 @@
 					break;
 			}
 
-			msg2 += Messages.get(this, "intro_2");
+			if (Dungeon.hero.heroClass == HeroClass.CLERIC) {
+				msg2 += Messages.get(this, "intro_2_cleric");
+			} else {
+				msg2 += Messages.get(this, "intro_2");
+			}
+
 			final String msg1Final = msg1;
 			final String msg2Final = msg2;
 			
@@ -199,6 +212,7 @@
 		
 		public static Wand wand1;
 		public static Wand wand2;
+		public static PotionOfExperience potion;
 		
 		public static void reset() {
 			spawned = false;
@@ -229,9 +243,10 @@
 				node.put( TYPE, type );
 				
 				node.put( GIVEN, given );
-				
-				node.put( WAND1, wand1 );
-				node.put( WAND2, wand2 );
+
+
+				node.put(WAND1, wand1);
+				node.put(WAND2, wand2);
 
 				if (type == 2){
 					node.put( RITUALPOS, CeremonialCandle.ritualPos );
@@ -251,9 +266,8 @@
 				type = node.getInt(TYPE);
 				
 				given = node.getBoolean( GIVEN );
-				
-				wand1 = (Wand)node.get( WAND1 );
-				wand2 = (Wand)node.get( WAND2 );
+				wand1 = (Wand) node.get(WAND1);
+				wand2 = (Wand) node.get(WAND2);
 
 				if (type == 2){
 					CeremonialCandle.ritualPos = node.getInt( RITUALPOS );
@@ -289,7 +303,6 @@
 				} while (wand2.getClass().equals(wand1.getClass()));
 				wand2.cursed = false;
 				wand2.upgrade();
-				
 			}
 		}
 		
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/WoundedDwarf.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/WoundedDwarf.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/actors/mobs/npcs/WoundedDwarf.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,212 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs;
+
+import com.shatteredpixel.shatteredpixeldungeon.Badges;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfHealing;
+import com.shatteredpixel.shatteredpixeldungeon.journal.Notes;
+import com.shatteredpixel.shatteredpixeldungeon.levels.rooms.Room;
+import com.shatteredpixel.shatteredpixeldungeon.levels.rooms.special.WoundedDwarfRoom;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.WandmakerSprite;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndQuest;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndWoundedDwarf;
+import com.watabou.noosa.Game;
+import com.watabou.utils.Bundle;
+import com.watabou.utils.Callback;
+
+import java.util.ArrayList;
+
+public class WoundedDwarf extends NPC {
+
+	{
+		spriteClass = WandmakerSprite.class;
+		properties.add(Property.IMMOVABLE);
+	}
+
+	private boolean seenBefore = false;
+
+	@Override
+	protected boolean act() {
+
+		if (!Quest.given && fieldOfView[Dungeon.hero.pos] && Dungeon.hero.invisible <= 0) {
+			if (!seenBefore) {
+				yell( Messages.get(this, "yell" ) );
+			}
+			seenBefore = true;
+		} else {
+			seenBefore = false;
+		}
+
+		throwItem();
+
+		return super.act();
+	}
+	
+	@Override
+	public int defenseSkill( Char enemy ) {
+		return 100_000_000;
+	}
+	
+	@Override
+	public void damage( int dmg, Object src ) {
+	}
+	
+	@Override
+	public void add( Buff buff ) {
+	}
+	
+	@Override
+	public boolean reset() {
+		return true;
+	}
+	
+	@Override
+	public boolean interact() {
+		
+		sprite.turnTo( pos, Dungeon.hero.pos );
+		if (Quest.given) {
+			Item item;
+			item = Dungeon.hero.belongings.getItem(PotionOfHealing.class);
+
+			if (item != null) {
+				Game.runOnRenderThread(new Callback() {
+					@Override
+					public void call() {
+						GameScene.show( new WndWoundedDwarf( WoundedDwarf.this, item ) );
+					}
+				});
+			} else {
+				String msg;
+				msg = Messages.get(this, "reminder", Dungeon.hero.givenName());
+				Game.runOnRenderThread(new Callback() {
+					@Override
+					public void call() {
+						GameScene.show(new WndQuest(WoundedDwarf.this, msg));
+					}
+				});
+			}
+			
+		} else {
+
+			String msg1 = "";
+			String msg2 = "";
+			switch(Dungeon.hero.heroClass){
+				case WARRIOR: default:
+					msg1 += Messages.get(this, "intro_warrior");
+					break;
+				case ROGUE:
+					msg1 += Messages.get(this, "intro_rogue");
+					break;
+				case MAGE:
+					msg1 += Messages.get(this, "intro_mage");
+					break;
+				case HUNTRESS:
+					msg1 += Messages.get(this, "intro_huntress");
+					break;
+				case CLERIC:
+					msg1 += Messages.get(this, "intro_cleric");
+					break;
+			}
+
+			msg1 += Messages.get(this, "intro_1");
+			msg2 += Messages.get(this, "intro_2");
+			final String msg1Final = msg1;
+			final String msg2Final = msg2;
+			
+			Game.runOnRenderThread(new Callback() {
+				@Override
+				public void call() {
+					GameScene.show(new WndQuest(WoundedDwarf.this, msg1Final){
+						@Override
+						public void hide() {
+							super.hide();
+							GameScene.show(new WndQuest(WoundedDwarf.this, msg2Final));
+						}
+					});
+				}
+			});
+
+			Notes.add( Notes.Landmark.DWARF );
+			Quest.given = true;
+		}
+
+		return false;
+	}
+	
+	public static class Quest {
+		
+		private static boolean spawned;
+		private static boolean given;
+		
+		public static void reset() {
+			spawned = false;
+		}
+		
+		private static final String NODE		= "dwarf";
+		private static final String SPAWNED		= "spawned";
+		private static final String GIVEN		= "given";
+		
+		public static void storeInBundle( Bundle bundle ) {
+			
+			Bundle node = new Bundle();
+			
+			node.put( SPAWNED, spawned );
+			
+			if (spawned) {
+				node.put( GIVEN, given );
+			}
+			
+			bundle.put( NODE, node );
+		}
+		
+		public static void restoreFromBundle( Bundle bundle ) {
+
+			Bundle node = bundle.getBundle( NODE );
+			
+			if (!node.isNull() && (spawned = node.getBoolean( SPAWNED ))) {
+				given = node.getBoolean( GIVEN );
+			} else {
+				reset();
+			}
+		}
+
+		
+		public static ArrayList<Room> spawnRoom( ArrayList<Room> rooms) {
+			if (!spawned && (Dungeon.depth == 23) && !Badges.isUnlocked(Badges.Badge.UNLOCK_DWARF)) {
+				rooms.add(new WoundedDwarfRoom());
+				spawned = true;
+				given = false;
+			}
+			return rooms;
+		}
+		
+		public static void complete() {
+			Notes.remove( Notes.Landmark.DWARF );
+		}
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Beam.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Beam.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Beam.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -71,7 +71,7 @@
 			super(s, e, Effects.Type.HEALTH_RAY, 0.75f);
 		}
 	}
-	
+
 	@Override
 	public void update() {
 		super.update();
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/LightBlock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/LightBlock.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/LightBlock.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,59 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.effects;
+
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.watabou.noosa.Gizmo;
+
+public class LightBlock extends Gizmo{
+
+	private CharSprite target;
+
+	public LightBlock(CharSprite target ) {
+		super();
+
+		this.target = target;
+	}
+
+	@Override
+	public void update() {
+		super.update();
+		target.hardlight(0xFFFAF0);
+	}
+
+	public void unlighten() {
+
+		target.resetColor();
+		killAndErase();
+
+	}
+
+	public static LightBlock baptized(CharSprite sprite ) {
+
+		LightBlock baptized = new LightBlock( sprite );
+		if (sprite.parent != null)
+			sprite.parent.add( baptized );
+
+		return baptized;
+	}
+
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/MagicMissile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/MagicMissile.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/MagicMissile.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,6 +23,7 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.CorrosionParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.FlameParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.LeafParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.RainbowParticle;
@@ -62,6 +63,9 @@
 	public static final int RAINBOW         = 8;
 	public static final int EARTH           = 9;
 	public static final int WARD            = 10;
+	// AddedPD
+	public static final int OTHER_MAGIC     = 11;
+	public static final int ELMO			= 12;
 
 	public static final int FIRE_CONE       = 100;
 	public static final int FOLIAGE_CONE    = 101;
@@ -147,6 +151,15 @@
 				size( 4 );
 				pour( WardParticle.FACTORY, 0.01f );
 				break;
+			case OTHER_MAGIC:
+				size( 8 );
+				pour( MagicParticle.FACTORY, 0.01f );
+				time /= 2;
+				break;
+			case ELMO:
+				size( 4 );
+				pour(ElmoParticle.MISSILE, 0.01f );
+				break;
 
 			case FIRE_CONE:
 				size( 10 );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Speck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Speck.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/Speck.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -68,6 +68,8 @@
 	public static final int STORM       = 117;
 	public static final int INFERNO     = 118;
 	public static final int BLIZZARD    = 119;
+	// AddedPD
+	public static final int SH_GEN		= 120;
 	
 	private static final int SIZE = 7;
 	
@@ -123,6 +125,9 @@
 			break;
 		case CALM:
 			frame( film.get( SCREAM ) );
+			break;
+		case SH_GEN:
+			frame( film.get( HEALING ) );
 			break;
 		default:
 			frame( film.get( type ) );
@@ -360,6 +365,12 @@
 			acc.y = 256;
 			lifespan = -speed.y / acc.y * 2;
 			break;
+
+		case SH_GEN:
+			tint(0xffffff);
+			speed.set( 0, -20 );
+			lifespan = 1f;
+			break;
 		}
 		
 		left = lifespan;
@@ -394,6 +405,7 @@
 			case EVOKE:
 				
 			case HEALING:
+			case SH_GEN:
 				am = p < 0.5f ? 1 : 2 - p * 2;
 				break;
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/SpellSprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/SpellSprite.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/SpellSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -37,7 +37,9 @@
 	public static final int CHARGE		= 2;
 	public static final int MASTERY		= 3;
 	public static final int BERSERK     = 4;
-	
+	// AddedPD
+	public static final int RUNE = 5;
+
 	private static final int SIZE	= 16;
 	
 	private enum Phase {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/CermateFireParticle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/CermateFireParticle.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/CermateFireParticle.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,64 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.effects.particles;
+
+import com.watabou.noosa.particles.Emitter;
+import com.watabou.noosa.particles.PixelParticle;
+import com.watabou.utils.ColorMath;
+
+public class CermateFireParticle extends PixelParticle.Shrinking {
+
+	public static final Emitter.Factory FACTORY = new Emitter.Factory() {
+		@Override
+		public void emit( Emitter emitter, int index, float x, float y ) {
+			((CermateFireParticle)emitter.recycle( CermateFireParticle.class )).reset( x, y );
+		}
+		@Override
+		public boolean lightMode() {
+			return true;
+		}
+	};
+
+	public CermateFireParticle() {
+		super();
+		lifespan = 0.6f;
+		acc.set( 0, -50 );
+	}
+
+	public void reset( float x, float y ) {
+		revive();
+		this.x = x;
+		this.y = y;
+		left = lifespan;
+		size = 4;
+		speed.set( 0 );
+	}
+
+	@Override
+	public void update() {
+		super.update();
+		float p = left / lifespan;
+		am = p > 0.8f ? (1 - p) * 5 : 1;
+		// color: 0xFFFFFF -> 0xF8F8FF
+		color( ColorMath.interpolate( 0xF8F8FF, 0xFFFFFF, am ) );
+	}
+}
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ElmoParticle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ElmoParticle.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/ElmoParticle.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -26,7 +26,14 @@
 import com.watabou.noosa.particles.PixelParticle;
 
 public class ElmoParticle extends PixelParticle.Shrinking {
-	
+
+	public static final Emitter.Factory MISSILE = new Factory() {
+		@Override
+		public void emit( Emitter emitter, int index, float x, float y ) {
+			((ElmoParticle)emitter.recycle( ElmoParticle.class )).reset( x, y );
+		}
+	};
+
 	public static final Emitter.Factory FACTORY = new Factory() {
 		@Override
 		public void emit( Emitter emitter, int index, float x, float y ) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PurpleParticle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PurpleParticle.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/PurpleParticle.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -36,7 +36,7 @@
 			((PurpleParticle)emitter.recycle( PurpleParticle.class )).reset( x, y );
 		}
 	};
-	
+
 	public static final Emitter.Factory BURST = new Factory() {
 		@Override
 		public void emit( Emitter emitter, int index, float x, float y ) {
@@ -47,35 +47,35 @@
 			return true;
 		}
 	};
-	
+
 	public PurpleParticle() {
 		super();
-		
+
 		lifespan = 0.5f;
 	}
-	
+
 	public void reset( float x, float y ) {
 		revive();
-		
+
 		this.x = x;
 		this.y = y;
-		
+
 		speed.set( Random.Float( -5, +5 ), Random.Float( -5, +5 ) );
-		
+
 		left = lifespan;
 	}
-	
+
 	public void resetBurst( float x, float y ) {
 		revive();
-		
+
 		this.x = x;
 		this.y = y;
-		
+
 		speed.polar( Random.Float( PointF.PI2 ), Random.Float( 16, 32 ) );
-		
+
 		left = lifespan;
 	}
-	
+
 	@Override
 	public void update() {
 		super.update();
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/RainbowParticle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/RainbowParticle.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/effects/particles/RainbowParticle.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -28,6 +28,13 @@
 
 public class RainbowParticle extends PixelParticle {
 
+	public static final Emitter.Factory FACTORY = new Emitter.Factory() {
+		@Override
+		public void emit( Emitter emitter, int index, float x, float y ) {
+			((RainbowParticle)emitter.recycle( RainbowParticle.class )).reset( x,  y );
+		}
+	};
+
 	public static final Emitter.Factory BURST = new Emitter.Factory() {
 		@Override
 		public void emit( Emitter emitter, int index, float x, float y ) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Ankh.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Ankh.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Ankh.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -22,7 +22,9 @@
 package com.shatteredpixel.shatteredpixeldungeon.items;
 
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
@@ -47,7 +49,13 @@
 	}
 
 	private Boolean blessed = false;
-	
+
+	// AddedPD : for cleric's starting ankh, prevents 'ankh farming'
+	public Item isCleric() {
+		bones = false;
+		return this;
+	}
+
 	@Override
 	public boolean isUpgradable() {
 		return false;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/BrokenSeal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/BrokenSeal.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/BrokenSeal.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -25,14 +25,18 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.ShieldBuff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndBag;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndItem;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndOptions;
 import com.watabou.noosa.audio.Sample;
+import com.watabou.utils.Bundle;
 
 import java.util.ArrayList;
 
@@ -43,6 +47,9 @@
 	//only to be used from the quickslot, for tutorial purposes mostly.
 	public static final String AC_INFO = "INFO_WINDOW";
 
+	// AddedPD : for sealknight's glyph erasing
+	public static final String AC_ERASE = "ERASE";
+
 	{
 		image = ItemSpriteSheet.SEAL;
 
@@ -53,10 +60,34 @@
 		defaultAction = AC_INFO;
 	}
 
+	public Armor.Glyph glyph;
+
+	private static final String GLYPH			= "glyph";
+	private static final String LEVEL			= "sealLevel";
+
+	@Override
+	public void storeInBundle( Bundle bundle ) {
+		bundle.put(GLYPH, glyph);
+		bundle.put(LEVEL, super.level());
+	}
+
+	@Override
+	public void restoreFromBundle( Bundle bundle ) {
+		getGlyph((Armor.Glyph) bundle.get(GLYPH));
+		this.level(bundle.getInt(LEVEL));
+	}
+
+	public void getGlyph(Armor.Glyph G) {
+		glyph = G;
+	}
+
 	@Override
 	public ArrayList<String> actions(Hero hero) {
 		ArrayList<String> actions =  super.actions(hero);
 		actions.add(AC_AFFIX);
+		if (hero.subClass == HeroSubClass.SEALKNIGHT && this.glyph != null) {
+			actions.add(AC_ERASE);
+		}
 		return actions;
 	}
 
@@ -70,9 +101,28 @@
 			GameScene.selectItem(armorSelector, WndBag.Mode.ARMOR, Messages.get(this, "prompt"));
 		} else if (action.equals(AC_INFO)) {
 			GameScene.show(new WndItem(null, this, true));
+		} else if (action.equals(AC_ERASE)) {
+			GameScene.show(new WndOptions(Messages.get(BrokenSeal.class, "sealknight_glyph"),
+					Messages.get(BrokenSeal.class, "sealknight_sure_erase", glyph.name()),
+					Messages.get(BrokenSeal.class, "sealknight_yes"),
+					Messages.get(BrokenSeal.class, "sealknight_no")) {
+				@Override
+				protected void onSelect(int index) { if (index == 0) { glyph = null; } } });
 		}
 	}
 
+	@Override
+	public ItemSprite.Glowing glowing() {
+		if (glyph != null) { return glyph.glowing(); }
+		else return null;
+	}
+
+	@Override
+	public String name() {
+		if (glyph != null) { return glyph.name( super.name() ); }
+		else return super.name();
+	}
+
 	@Override
 	//scroll of upgrade can be used directly once, same as upgrading armor the seal is affixed to then removing it.
 	public boolean isUpgradable() {
@@ -108,6 +158,11 @@
 		public synchronized boolean act() {
 			if (shielding() < maxShield()) {
 				partialShield += 1/30f;
+				// AddedPD : for sealknight, warriror's 3rd subclass
+				if (Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT) {
+					partialShield += 1/30f;
+					// just regen shield twice, as doubled!
+				}
 			}
 			
 			while (partialShield >= 1){
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EquipableItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EquipableItem.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/EquipableItem.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -26,7 +26,9 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicImmune;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShadowParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.MeleeWeapon;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
 import com.watabou.noosa.audio.Sample;
@@ -46,6 +48,11 @@
 	public ArrayList<String> actions(Hero hero ) {
 		ArrayList<String> actions = super.actions( hero );
 		actions.add( isEquipped( hero ) ? AC_UNEQUIP : AC_EQUIP );
+		// AddedPD : dwarf survivor cannot wield other weapon
+		if (hero.heroClass == HeroClass.DWARF && this instanceof MeleeWeapon) {
+			actions.remove(AC_UNEQUIP);
+			actions.remove(AC_EQUIP);
+		}
 		return actions;
 	}
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Generator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Generator.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Generator.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -114,8 +114,10 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.AssassinsBlade;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.BattleAxe;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Crossbow;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Cudgel;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Dagger;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Dirk;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.DwarfArm;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Flail;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Gauntlet;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Glaive;
@@ -323,9 +325,12 @@
 					WornShortsword.class,
 					Gloves.class,
 					Dagger.class,
-					MagesStaff.class
+					MagesStaff.class,
+					// AddedPD
+					Cudgel.class,
+					DwarfArm.class
 			};
-			WEP_T1.probs = new float[]{ 1, 1, 1, 0 };
+			WEP_T1.probs = new float[]{ 1, 1, 1, 0, 1, 0 };
 			
 			WEP_T2.classes = new Class<?>[]{
 					Shortsword.class,
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Heap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Heap.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Heap.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -297,7 +297,7 @@
 					}
 
 				//unique and upgraded items can endure the blast
-				} else if (!(item.level() > 0 || item.unique
+				} else if (!(item.level() > 0 || item.unique || item.enlightened
 						|| (item instanceof Armor && ((Armor) item).checkSeal() != null)))
 					items.remove( item );
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Item.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Item.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Item.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -77,6 +77,8 @@
 	
 	public boolean cursed;
 	public boolean cursedKnown;
+
+	public boolean enlightened;
 	
 	// Unique items persist through revival
 	public boolean unique = false;
@@ -361,6 +363,12 @@
 		
 		return this;
 	}
+
+	// AddedPD : Cleric's enlightenment ability
+	public Item enlighten() {
+		enlightened = true;
+		return this;
+	}
 	
 	public void onHeroGainExp( float levelPercent, Hero hero ){
 		//do nothing by default
@@ -450,6 +458,7 @@
 	private static final String LEVEL_KNOWN		= "levelKnown";
 	private static final String CURSED			= "cursed";
 	private static final String CURSED_KNOWN	= "cursedKnown";
+	private static final String ENLIGHTENED		= "enlightened";
 	private static final String QUICKSLOT		= "quickslotpos";
 	
 	@Override
@@ -459,6 +468,7 @@
 		bundle.put( LEVEL_KNOWN, levelKnown );
 		bundle.put( CURSED, cursed );
 		bundle.put( CURSED_KNOWN, cursedKnown );
+		bundle.put( ENLIGHTENED, enlightened );
 		if (Dungeon.quickslot.contains(this)) {
 			bundle.put( QUICKSLOT, Dungeon.quickslot.getSlot(this) );
 		}
@@ -469,6 +479,7 @@
 		quantity	= bundle.getInt( QUANTITY );
 		levelKnown	= bundle.getBoolean( LEVEL_KNOWN );
 		cursedKnown	= bundle.getBoolean( CURSED_KNOWN );
+		enlightened = bundle.getBoolean( ENLIGHTENED );
 		
 		int level = bundle.getInt( LEVEL );
 		if (level > 0) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Stylus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Stylus.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/Stylus.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -87,6 +87,9 @@
 		} else if (armor.cursed || armor.hasCurseGlyph()){
 			GLog.w( Messages.get(this, "cursed"));
 			return;
+		} else if (armor.enlightened){
+			GLog.w (Messages.get(Hero.class, "enlightened"));
+			return;
 		}
 		
 		detach(curUser.belongings.backpack);
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/TomeOfMastery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/TomeOfMastery.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/TomeOfMastery.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,6 +23,7 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
@@ -30,6 +31,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
+import com.shatteredpixel.shatteredpixeldungeon.ui.ActionIndicator;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndChooseWay;
 import com.watabou.noosa.audio.Sample;
@@ -67,25 +69,40 @@
 			
 			HeroSubClass way1 = null;
 			HeroSubClass way2 = null;
+			HeroSubClass way3 = null;
 			switch (hero.heroClass) {
 			case WARRIOR:
 				way1 = HeroSubClass.GLADIATOR;
 				way2 = HeroSubClass.BERSERKER;
+				way3 = HeroSubClass.SEALKNIGHT;
 				break;
 			case MAGE:
 				way1 = HeroSubClass.BATTLEMAGE;
 				way2 = HeroSubClass.WARLOCK;
+				way3 = HeroSubClass.TRANSMUTER;
 				break;
 			case ROGUE:
 				way1 = HeroSubClass.FREERUNNER;
 				way2 = HeroSubClass.ASSASSIN;
+				way3 = HeroSubClass.BURGLAR;
 				break;
 			case HUNTRESS:
 				way1 = HeroSubClass.SNIPER;
 				way2 = HeroSubClass.WARDEN;
+				way3 = HeroSubClass.SPIRITWALKER;
+				break;
+			case CLERIC:
+				way1 = HeroSubClass.CRUSADER;
+				way2 = HeroSubClass.SCHOLAR;
+				way3 = HeroSubClass.REDEEMER;
+				break;
+			case DWARF:
+				way1 = HeroSubClass.THUNDERBRINGER;
+				way2 = HeroSubClass.MONK;
+				way3 = HeroSubClass.NECROSMITH;
 				break;
 			}
-			GameScene.show( new WndChooseWay( this, way1, way2 ) );
+			GameScene.show( new WndChooseWay( this, way1, way2, way3 ) );
 			
 		}
 	}
@@ -121,6 +138,14 @@
 		SpellSprite.show( curUser, SpellSprite.MASTERY );
 		curUser.sprite.emitter().burst( Speck.factory( Speck.MASTERY ), 12 );
 		GLog.w( Messages.get(this, "way", way.title()) );
-		
+
+		// AddedPD : for cleric
+		if (curUser.buff(Devotion.class) != null) {
+			Devotion devotion = new Devotion();
+			int preservedRank = devotion.getrank();
+			ActionIndicator.setAction(devotion);
+			devotion.onReset();
+			devotion.onOther(preservedRank);
+		}
 	}
 }
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/Armor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/Armor.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/Armor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -25,11 +25,16 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Blindness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfArmorBuff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicImmune;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Momentum;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Weakness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.RainbowParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.BrokenSeal;
 import com.shatteredpixel.shatteredpixeldungeon.items.EquipableItem;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
@@ -56,10 +61,12 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs.Viscosity;
 import com.shatteredpixel.shatteredpixeldungeon.levels.Terrain;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.HeroSprite;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.shatteredpixel.shatteredpixeldungeon.windows.WndOptions;
 import com.watabou.noosa.particles.Emitter;
 import com.watabou.utils.Bundlable;
 import com.watabou.utils.Bundle;
@@ -176,6 +183,9 @@
 			if (seal.level() > 0){
 				degrade();
 			}
+			if (seal.glyph != null && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT) {
+				this.glyph = null;
+			}
 			GLog.i( Messages.get(Armor.class, "detach_seal") );
 			hero.sprite.operate(hero.pos);
 			if (!seal.collect()){
@@ -226,6 +236,22 @@
 			level(level()+1);
 			Badges.validateItemLevelAquired(this);
 		}
+		if (Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT){
+			if (seal.glyph == null) {
+				seal.glyph = this.glyph;
+			} else if (seal.glyph != this.glyph && this.glyph != null){
+				GameScene.show(new WndOptions(Messages.get(BrokenSeal.class, "sealknight_change"),
+						Messages.get(BrokenSeal.class, "sealknight_sure_change", seal.name()),
+						Messages.get(BrokenSeal.class, "sealknight_armor_glyph", glyph.name()),
+						Messages.get(BrokenSeal.class, "sealknight_seal_glyph", seal.glyph.name())) {
+					@Override
+					protected void onSelect(int index) {
+						if (index == 0) { seal.glyph = glyph; }
+						if (index == 1) { glyph = seal.glyph; }
+					}
+				});
+			} else glyph = seal.glyph;
+		}
 		if (isEquipped(Dungeon.hero)){
 			Buff.affect(Dungeon.hero, BrokenSeal.WarriorShield.class).setArmor(this);
 		}
@@ -250,6 +276,15 @@
 			BrokenSeal.WarriorShield sealBuff = hero.buff(BrokenSeal.WarriorShield.class);
 			if (sealBuff != null) sealBuff.setArmor(null);
 
+			// AddedPD : remove sealknight related buff - except obfuscation's mist cooltime
+			AntiMagic.SealMagic sealMagic = hero.buff(AntiMagic.SealMagic.class);
+			Potential.SealCharge sealCharge = hero.buff(Potential.SealCharge.class);
+			if (sealMagic != null) sealMagic.detach();
+			if (sealCharge != null) sealCharge.detach();
+
+			DwarfArmorBuff dwarfArmorBuff = hero.buff(DwarfArmorBuff.class);
+			if (dwarfArmorBuff != null) dwarfArmorBuff.detach();
+
 			return true;
 
 		} else {
@@ -359,13 +394,12 @@
 	}
 	
 	public Item upgrade( boolean inscribe ) {
-
-		if (inscribe && (glyph == null || glyph.curse())){
-			inscribe( Glyph.random() );
-		} else if (!inscribe && level() >= 4 && Random.Float(10) < Math.pow(2, level()-4)){
+		if (inscribe && (glyph == null || glyph.curse())) {
+			inscribe(Glyph.random());
+		} else if (!inscribe && level() >= 4 && Random.Float(10) < Math.pow(2, level() - 4)) {
 			inscribe(null);
 		}
-		
+
 		cursed = false;
 
 		if (seal != null && seal.level() == 0)
@@ -389,6 +423,20 @@
 				Badges.validateItemLevelAquired( this );
 			}
 		}
+
+		if (enlightened && attacker.buff(Weakness.class) == null) {
+			// 33% chance to weaken enemy
+			if (Random.Int(3 ) >= 2) {
+				Buff.prolong(attacker, Weakness.class, 10f);
+				attacker.sprite.centerEmitter().burst( RainbowParticle.BURST, 10);
+				if (Dungeon.hero.subClass == HeroSubClass.CRUSADER
+						&& attacker.buff(Blindness.class) == null
+						&& attacker.properties().contains(Char.Property.MAGICAL)) {
+					// Crusader special
+					Buff.prolong(attacker, Blindness.class, 4f);
+				}
+			}
+		}
 		
 		return damage;
 	}
@@ -403,7 +451,9 @@
 	
 	@Override
 	public String name() {
-		return glyph != null && (cursedKnown || !glyph.curse()) ? glyph.name( super.name() ) : super.name();
+		if (enlightened)
+			return Messages.get(Armor.class, "enlightened_name") + " " + super.name();
+		else return glyph != null && (cursedKnown || !glyph.curse()) ? glyph.name( super.name() ) : super.name();
 	}
 	
 	@Override
@@ -438,7 +488,7 @@
 			info += "\n\n" +  Messages.get(Armor.class, "inscribed", glyph.name());
 			info += " " + glyph.desc();
 		}
-		
+
 		if (cursed && isEquipped( Dungeon.hero )) {
 			info += "\n\n" + Messages.get(Armor.class, "cursed_worn");
 		} else if (cursedKnown && cursed) {
@@ -447,6 +497,8 @@
 			info += "\n\n" + Messages.get(Armor.class, "seal_attached");
 		} else if (!isIdentified() && cursedKnown){
 			info += "\n\n" + Messages.get(Armor.class, "not_cursed");
+		} else if (enlightened) { // AddedPD : cleric's enlightenment power
+			info += "\n\n" + Messages.get(Armor.class, "enlightened_info");
 		}
 		
 		return info;
@@ -523,6 +575,10 @@
 	public Armor inscribe( Glyph glyph ) {
 		if (glyph == null || !glyph.curse()) curseInfusionBonus = false;
 		this.glyph = glyph;
+		if (seal != null && !glyph.curse() && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT) {
+			BrokenSeal brokenSeal = this.seal;
+			brokenSeal.glyph = glyph;
+		}
 		updateQuickslot();
 		return this;
 	}
@@ -539,6 +595,9 @@
 		return glyph != null && glyph.getClass() == type && owner.buff(MagicImmune.class) == null;
 	}
 
+	// AddedPD : cleric's enlightenment power
+	public boolean isEnlightened() { return glyph == null && enlightened;}
+
 	//these are not used to process specific glyph effects, so magic immune doesn't affect them
 	public boolean hasGoodGlyph(){
 		return glyph != null && !glyph.curse();
@@ -550,7 +609,8 @@
 	
 	@Override
 	public ItemSprite.Glowing glowing() {
-		return glyph != null && (cursedKnown || !glyph.curse()) ? glyph.glowing() : null;
+		if (enlightened) { return new ItemSprite.Glowing( 0xFFFFCC ); }
+		else return glyph != null && (cursedKnown || !glyph.curse()) ? glyph.glowing() : null;
 	}
 	
 	public static abstract class Glyph implements Bundlable {
@@ -579,9 +639,9 @@
 		public abstract int proc( Armor armor, Char attacker, Char defender, int damage );
 		
 		public String name() {
-			if (!curse())
-				return name( Messages.get(this, "glyph") );
-			else
+			if (!curse()) {
+				return name(Messages.get(this, "glyph"));
+			} else
 				return name( Messages.get(Item.class, "curse"));
 		}
 		
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClassArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClassArmor.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClassArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -69,6 +69,12 @@
 		case HUNTRESS:
 			classArmor = new HuntressArmor();
 			break;
+		case CLERIC:
+			classArmor = new ClericArmor();
+			break;
+		case DWARF:
+			classArmor = new DwarfArmor();
+			break;
 		}
 		
 		classArmor.level(armor.level() - (armor.curseInfusionBonus ? 1 : 0));
@@ -78,6 +84,7 @@
 		classArmor.cursed = armor.cursed;
 		classArmor.curseInfusionBonus = armor.curseInfusionBonus;
 		classArmor.identify();
+		classArmor.enlightened = armor.enlightened;
 		
 		return classArmor;
 	}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClericArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClericArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/ClericArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,39 @@
+package com.shatteredpixel.shatteredpixeldungeon.items.armor;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Blindness;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Paralysis;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfBlastWave;
+import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
+import com.watabou.noosa.audio.Sample;
+
+public class ClericArmor extends ClassArmor {
+    public ClericArmor() {
+        this.image = ItemSpriteSheet.ARMOR_CLERIC;
+    }
+
+    public void doSpecial() {
+        for (Mob mob : Dungeon.level.mobs.toArray(new Mob[0])) {
+                if (Dungeon.level.heroFOV[mob.pos] && mob.alignment == Char.Alignment.ENEMY) {
+                    Buff.affect(mob, Blindness.class, 3f);
+                    WandOfBlastWave.throwChar(mob, new Ballistica(mob.pos, mob.pos + (mob.pos - curUser.pos), 6), 2);
+                    Buff.affect(mob, Paralysis.class, 0f);  // just keep their current turn, like AquaBlast spell
+                   }  }
+        Hero hero = curUser;
+        hero.HP -= curUser.HP / 3;
+        curUser.spend( Actor.TICK );
+        curUser.sprite.operate(curUser.pos);
+        curUser.busy();
+        GameScene.flash(CharSprite.DEFAULT);
+        Sample.INSTANCE.play(Assets.SND_BLAST);
+    }
+}
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/DwarfArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/DwarfArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/DwarfArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,39 @@
+package com.shatteredpixel.shatteredpixeldungeon.items.armor;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfArmorBuff;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.watabou.noosa.audio.Sample;
+
+public class DwarfArmor extends ClassArmor {
+    public DwarfArmor() {
+        this.image = ItemSpriteSheet.ARMOR_DWARF;
+    }
+
+    public void doSpecial() {
+        DwarfArmorBuff overheated = curUser.buff(DwarfArmorBuff.class);
+        if (overheated != null) {
+            GLog.w( Messages.get(this, "already_activated") );
+            return;
+        }
+
+        curUser.HP -= (curUser.HP / 3);
+
+        curUser.spend( Actor.TICK );
+        curUser.sprite.operate( curUser.pos );
+        curUser.busy();
+
+        // this formula will gain buff "after" spend TICK - so "real duration" is still 8f
+        Buff.prolong(curUser, DwarfArmorBuff.class, 8f);
+        GLog.p( Messages.get(this, "activated") );
+
+        CellEmitter.get( curUser.pos ).burst( Speck.factory( Speck.STEAM ), 8 );
+        Sample.INSTANCE.play(Assets.SND_BEACON);
+    }
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/HuntressArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/HuntressArmor.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/HuntressArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,6 +24,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Splash;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.Shuriken;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
@@ -46,7 +47,7 @@
 	@Override
 	public void doSpecial() {
 		
-		Item proto = new Shuriken();
+		Item proto = new SpectralBlade();
 		
 		for (Mob mob : Dungeon.level.mobs) {
 			if (Dungeon.level.distance(curUser.pos, mob.pos) <= 12
@@ -68,6 +69,7 @@
 					reset( curUser.pos, mob.pos, proto, callback );
 				
 				targets.put( callback, mob );
+				Splash.at( mob.pos, 0xCC99FFFF, 1 );
 			}
 		}
 		
@@ -82,4 +84,10 @@
 		curUser.busy();
 	}
 
+	public static class SpectralBlade extends Item {
+		{
+			image = ItemSpriteSheet.SPECTRAL_BLADE;
+		}
+	}
+
 }
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MageArmor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MageArmor.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/MageArmor.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -28,36 +28,70 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Burning;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Roots;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.SoulMark;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.SpellSprite;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
+import com.shatteredpixel.shatteredpixeldungeon.items.wands.Wand;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.MagesStaff;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
+import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
 import com.watabou.noosa.audio.Sample;
 
 public class MageArmor extends ClassArmor {
+
+	private Wand wand;
+	private MagesStaff staff;
 	
 	{
 		image = ItemSpriteSheet.ARMOR_MAGE;
 	}
-	
+
 	@Override
 	public void doSpecial() {
-		
+
 		for (Mob mob : Dungeon.level.mobs.toArray(new Mob[0])) {
 			if (Dungeon.level.heroFOV[mob.pos]
-				&& mob.alignment != Char.Alignment.ALLY) {
+					&& mob.alignment != Char.Alignment.ALLY) {
+
+				int hit = 0;
+
+				// if there is no enemy in your sight, cancel ability(like huntress's ability)
+				if (mob == null) {
+					GLog.w(Messages.get(this, "no_enemies"));
+					return;
+				}
+
+				hit++;
+
+				// battlemage - similar effects on staff attack effects(use code from stone of shock)
+				if (curUser.subClass == HeroSubClass.BATTLEMAGE){
+					curUser.belongings.charge(hit);
+					ScrollOfRecharging.charge(curUser);
+				}
+
+				// warlock - mark souls of all affected enemy, but with shorter duration
+				if (curUser.subClass == HeroSubClass.WARLOCK) {
+					SoulMark soulMark = mob.buff(SoulMark.class);
+					// prevents reduce mark duration which are already marked mobs
+					if (soulMark == null) { SoulMark.prolong(mob, SoulMark.class, 5); }
+				}
+
 				Buff.affect( mob, Burning.class ).reignite( mob );
 				Buff.prolong( mob, Roots.class, 3 );
 			}
 		}
 
 		curUser.HP -= (curUser.HP / 3);
-		
+
 		curUser.spend( Actor.TICK );
 		curUser.sprite.operate( curUser.pos );
 		curUser.busy();
-		
+
 		curUser.sprite.centerEmitter().start( ElmoParticle.FACTORY, 0.15f, 4 );
 		Sample.INSTANCE.play( Assets.SND_READ );
 	}
-
 }
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/AntiMagic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/AntiMagic.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/AntiMagic.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,13 +21,19 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Charm;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Weakness;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Eye;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Shaman;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Warlock;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Yog;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.MagicMissile;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfBlastWave;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfDisintegration;
@@ -41,7 +47,14 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfWarding;
 import com.shatteredpixel.shatteredpixeldungeon.levels.traps.DisintegrationTrap;
 import com.shatteredpixel.shatteredpixeldungeon.levels.traps.GrimTrap;
+import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.noosa.Image;
+import com.watabou.noosa.audio.Sample;
+import com.watabou.utils.Bundle;
+import com.watabou.utils.Callback;
 import com.watabou.utils.Random;
 
 import java.util.HashSet;
@@ -78,6 +91,16 @@
 	@Override
 	public int proc(Armor armor, Char attacker, Char defender, int damage) {
 		//no proc effect, see Hero.damage
+
+		// AddedPD : for sealknight - 'counter zap'
+		if (defender == Dungeon.hero && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT
+				&& armor.checkSeal() != null) {
+
+			SealMagic sealMagic = Dungeon.hero.buff(SealMagic.class);
+			if (sealMagic != null) {
+				sealMagic.counterZap(attacker);
+			}
+		}
 		return damage;
 	}
 	
@@ -90,4 +113,127 @@
 		return TEAL;
 	}
 
+	// AddedPD : for sealknight
+	public static class SealMagic extends Buff {
+
+		{
+			type = buffType.POSITIVE;
+		}
+
+		protected int damage = 0;
+		protected int partialDamage = 2;
+
+		private static final String DAMAGE	= "damage";
+		private static final String PARTIAL_DAMAGE	= "partialDamage";
+
+		@Override
+		public void storeInBundle( Bundle bundle ) {
+			super.storeInBundle( bundle );
+			bundle.put( DAMAGE, damage );
+			bundle.put( PARTIAL_DAMAGE, partialDamage );
+		}
+
+		@Override
+		public void restoreFromBundle( Bundle bundle ) {
+			super.restoreFromBundle( bundle );
+			damage = bundle.getInt( DAMAGE );
+			partialDamage = bundle.getInt( PARTIAL_DAMAGE );
+		}
+
+		public int getDamage(){
+			return damage;
+		}
+
+		public void getSource(int dmg) {
+			damage += dmg;
+			BuffIndicator.refreshHero();
+		}
+
+		@Override
+		public boolean attachTo( Char target ) {
+			if (super.attachTo( target )) {
+				postpone( TICK );
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		@Override
+		public boolean act() {
+			spend( TICK );
+			partialDamage--;
+			if (0 >= partialDamage){
+				partialDamage = 2;
+				damage -= TICK;
+			}
+			if (damage <= 0) {
+				detach();
+			}
+			return true;
+		}
+
+		public void spendTime() {
+			spend( TICK );
+			if (damage <= 0) {
+				detach();
+			}
+		}
+
+		public void prolong( int damage ) {
+			this.damage = damage;
+			BuffIndicator.refreshHero();
+		}
+
+		@Override
+		public int icon() {
+			return BuffIndicator.ARMOR;
+		}
+
+		@Override
+		public void tintIcon(Image icon) {
+			icon.hardlight(0x88EEFF);
+		}
+
+		@Override
+		public String toString() {
+			return Messages.get(this, "name");
+		}
+
+		@Override
+		public String desc() {
+			return Messages.get(this, "desc",  damage);
+		}
+
+		public void counterZap(Char mob) {
+
+			final Ballistica bolt = new Ballistica(Dungeon.hero.pos, mob.pos, Ballistica.MAGIC_BOLT);
+
+			if (damage >= 1 && mob.alignment != Dungeon.hero.alignment) {
+				Sample.INSTANCE.play(Assets.SND_ZAP);
+				CellEmitter.center(Dungeon.hero.pos).burst(MagicMissile.MagicParticle.FACTORY, 4);
+				MagicMissile.boltFromChar(Dungeon.hero.sprite.parent,
+						MagicMissile.OTHER_MAGIC,
+						Dungeon.hero.sprite,
+						bolt.collisionPos,
+						new Callback() {
+							@Override
+							public void call() {
+
+								int realDamage = 0;
+								if (mob.HP <= damage) { realDamage = mob.HP;
+								} else { realDamage = damage; }
+
+								mob.sprite.flash();
+								CellEmitter.center(mob.pos).burst(MagicMissile.MagicParticle.FACTORY, realDamage + 3);
+								mob.damage(realDamage, Dungeon.hero);
+
+								damage -= realDamage;
+							}
+						});
+			} else {
+				CellEmitter.center(Dungeon.hero.pos).burst(MagicMissile.MagicParticle.FACTORY, 1);
+			}
+		}
+	}
 }
\ No newline at end of file
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Entanglement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Entanglement.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Entanglement.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,9 +21,13 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Paralysis;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.EarthParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.Glyph;
@@ -47,7 +51,12 @@
 			Buff.affect( defender, Earthroot.Armor.class ).level( 5 + 2 * level );
 			CellEmitter.bottom( defender.pos ).start( EarthParticle.FACTORY, 0.05f, 8 );
 			Camera.main.shake( 1, 0.4f );
-			
+
+			// AddedPD : for sealknight - stuns enemy when glyph is activated
+			if (defender == Dungeon.hero && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT && armor.checkSeal() != null) {
+				CellEmitter.get(attacker.pos).start(Speck.factory(Speck.ROCK), 0.07f, 5);
+				Buff.prolong( attacker, Paralysis.class, 2f );
+			}
 		}
 
 		return damage;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Obfuscation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Obfuscation.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Obfuscation.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,9 +21,27 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.Blob;
+import com.shatteredpixel.shatteredpixeldungeon.actors.blobs.SmokeScreen;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Blindness;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.FlavourBuff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Frost;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.shatteredpixel.shatteredpixeldungeon.utils.BArray;
+import com.watabou.noosa.Image;
+import com.watabou.utils.PathFinder;
 
 public class Obfuscation extends Armor.Glyph {
 
@@ -31,6 +49,33 @@
 
 	@Override
 	public int proc(Armor armor, Char attacker, Char defender, int damage) {
+
+		// AddedPD : for sealknight - remove aggro from other enemies
+		if (defender == Dungeon.hero  && armor.checkSeal() != null
+				&& Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT) {
+
+			int affected = 0;
+			int set = Math.max(20, 20-(2*armor.level()));
+
+			SealCooldown cooldown = defender.buff(SealCooldown.class);
+			if (cooldown == null) {
+
+				int cell = Dungeon.hero.pos;
+				PathFinder.buildDistanceMap( cell, BArray.not( Dungeon.level.solid, null ), 2 );
+				for (int i = 0; i < PathFinder.distance.length; i++) {
+					if (PathFinder.distance[i] < Integer.MAX_VALUE) {
+						GameScene.add(Blob.seed(i, 5, SmokeScreen.class));
+					}
+				}
+
+			}
+			if (affected > 0) {
+                CellEmitter.center(defender.pos).burst(Speck.factory(Speck.SMOKE), 30);
+				Buff.affect(defender, SealCooldown.class, set);
+			}
+
+			return damage; } else
+
 		//no proc effect, see armor.stealthfactor for effect.
 		return damage;
 	}
@@ -40,4 +85,37 @@
 		return GREY;
 	}
 
+	// AddedPD : for sealknight
+	public static class SealCooldown extends FlavourBuff {
+
+		{
+			type = buffType.NEUTRAL;
+		}
+
+		float left = cooldown();
+
+		@Override
+		public int icon() {
+			return BuffIndicator.DEFERRED;
+		}
+
+		@Override
+		public void tintIcon(Image icon) {
+			icon.hardlight(-2f, 1f, 2f);
+		}
+
+		@Override
+		public String toString() {
+			return Messages.get(this, "name");
+		}
+
+		{
+			immunities.add( SmokeScreen.class );
+		}
+
+		@Override
+		public String desc() {
+			return Messages.get(this, "desc",  left);
+		}
+	}
 }
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Potential.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Potential.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Potential.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,13 +21,20 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.EnergyParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor.Glyph;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite.Glowing;
+import com.shatteredpixel.shatteredpixeldungeon.ui.BuffIndicator;
+import com.watabou.noosa.Image;
+import com.watabou.utils.Bundle;
 import com.watabou.utils.Random;
 
 public class Potential extends Glyph {
@@ -47,6 +54,16 @@
 			if (wands > 0) {
 				defender.sprite.centerEmitter().burst(EnergyParticle.FACTORY, 10);
 			}
+
+			// AddedPD : for sealknight - imbue your attack with magical strike when glyph is activated
+			if (defender == Dungeon.hero && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT
+					&& armor.checkSeal() != null) {
+				SealCharge charge = Buff.affect( defender, SealCharge.class );
+				charge.prolong( damage );
+				if (wands <= 0) {
+					defender.sprite.centerEmitter().burst(EnergyParticle.FACTORY, 10);
+				}
+			}
 		}
 		
 		return damage;
@@ -56,4 +73,91 @@
 	public Glowing glowing() {
 		return WHITE;
 	}
+
+	// AddedPD : for sealknight
+	public static class SealCharge extends Buff {
+
+		{
+			type = buffType.POSITIVE;
+		}
+
+		protected int damage = 0;
+		protected int partialDamage = 3;
+
+		private static final String DAMAGE	= "damage";
+		private static final String PARTIAL_DAMAGE	= "partialDamage";
+
+		@Override
+		public void storeInBundle( Bundle bundle ) {
+			super.storeInBundle( bundle );
+			bundle.put( DAMAGE, damage );
+			bundle.put( PARTIAL_DAMAGE, partialDamage );
+		}
+
+		@Override
+		public void restoreFromBundle( Bundle bundle ) {
+			super.restoreFromBundle( bundle );
+			damage = bundle.getInt( DAMAGE );
+			partialDamage = bundle.getInt( PARTIAL_DAMAGE );
+		}
+
+		public int getDamage(){
+			// without this, sometimes we met funny situation - "kill blacksmith", etc.
+			if (damage >= 100) { damage = 100; }
+			return damage;
+		}
+
+		public void costDamage(int dmg) {
+			damage -= dmg;
+			if (damage < 0) damage = 0;
+		}
+
+		@Override
+		public boolean attachTo( Char target ) {
+			if (super.attachTo( target )) {
+				postpone( TICK );
+				return true;
+			} else {
+				return false;
+			}
+		}
+
+		@Override
+		public boolean act() {
+			spend( TICK );
+			partialDamage--;
+			if (0 >= partialDamage){
+				partialDamage = 3;
+				damage -= TICK;
+			}
+			if (damage <= 0) {
+				detach();
+			}
+			return true;
+		}
+
+		public void prolong( int damage ) {
+			this.damage += damage;
+		}
+
+		@Override
+		public int icon() {
+			return BuffIndicator.WEAPON;
+		}
+
+		@Override
+		public void tintIcon(Image icon) {
+			icon.hardlight(0xFFFF4C);
+		}
+
+		@Override
+		public String toString() {
+			return Messages.get(this, "name");
+		}
+
+		@Override
+		public String desc() {
+			return Messages.get(SealCharge.class, "desc",  damage);
+		}
+	}
 }
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Repulsion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Repulsion.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Repulsion.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,7 +21,12 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Stamina;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Splash;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfBlastWave;
 import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
@@ -41,6 +46,14 @@
 			int oppositeHero = attacker.pos + (attacker.pos - defender.pos);
 			Ballistica trajectory = new Ballistica(attacker.pos, oppositeHero, Ballistica.MAGIC_BOLT);
 			WandOfBlastWave.throwChar(attacker, trajectory, 2);
+
+			// AddedPD : for sealknight - gain small amount of stamina for hero to retreat, or engage to ranged mob!
+			if (defender == Dungeon.hero && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT && armor.checkSeal() != null) {
+				if (defender.buff(Stamina.class) == null) {
+					Buff.prolong(defender, Stamina.class, attacker.distance(defender)+1);
+					Splash.at(defender.pos, 0xFFFFFF, 10);
+				}
+			}
 		}
 		
 		return damage;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Stone.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Stone.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Stone.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,7 +21,11 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Barkskin;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 
@@ -48,7 +52,14 @@
 		hitChance = (1f + 3f*hitChance)/4f;
 		
 		damage = (int)Math.ceil(damage * hitChance);
-		
+
+		// AddedPD : sealknight can stack barkskin when attacked
+		// AddedPD : for sealknight - 'counter zap'
+		if (defender == Dungeon.hero && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT
+				&& armor.checkSeal() != null) {
+			Buff.affect(Dungeon.hero, Barkskin.class).set(damage/10, 4);
+		}
+
 		return damage;
 	}
 	
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Swiftness.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Swiftness.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Swiftness.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,7 +21,13 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.armor.glyphs;
 
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Stamina;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Splash;
 import com.shatteredpixel.shatteredpixeldungeon.items.armor.Armor;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 
@@ -32,6 +38,19 @@
 	@Override
 	public int proc(Armor armor, Char attacker, Char defender, int damage) {
 		//no proc effect, see armor.speedfactor for effect.
+
+		// AddedPD : for sealknight - gain small amount of stamina when attacked by nearby enemy, Time to disengage!
+		if (defender == Dungeon.hero && Dungeon.hero.subClass == HeroSubClass.SEALKNIGHT && armor.checkSeal() != null) {
+
+			for (Char ch : Actor.chars()) {
+				if (Dungeon.level.adjacent(ch.pos, defender.pos)){
+					if (defender.buff(Stamina.class) == null) {
+						Buff.prolong(defender, Stamina.class, 2f);
+						Splash.at(defender.pos, 0xFFFF00, 10);
+					}
+				}
+			}
+		}
 		return damage;
 	}
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Viscosity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Viscosity.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/armor/glyphs/Viscosity.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -77,6 +77,12 @@
 		}
 		
 		protected int damage = 0;
+
+		// AddedPD : for sealknight
+		public void reduceDamage(int dmg) {
+			damage -= dmg;
+			if (damage < 0) damage = 0;
+		}
 		
 		private static final String DAMAGE	= "damage";
 		
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/DriedRose.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/DriedRose.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/artifacts/DriedRose.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -72,6 +72,8 @@
 
 import java.util.ArrayList;
 
+import static com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene.updateFog;
+
 public class DriedRose extends Artifact {
 
 	{
@@ -721,6 +723,7 @@
 
 		@Override
 		public void destroy() {
+			updateFog();	// AddedPD : now ghost share its vision, so when it dies we must update fog
 			updateRose();
 			if (rose != null) {
 				rose.ghost = null;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShockBomb.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShockBomb.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/bombs/ShockBomb.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -26,10 +26,13 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Paralysis;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Lightning;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SparkParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
 import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
 import com.shatteredpixel.shatteredpixeldungeon.tiles.DungeonTilemap;
@@ -73,7 +76,13 @@
 				//32% to 8% regular bomb damage
 				int damage = Math.round(Random.NormalIntRange(5 + Dungeon.depth, 10 + 2*Dungeon.depth) * (power/50f));
 				ch.damage(damage, this);
-				if (ch.isAlive()) Buff.prolong(ch, Paralysis.class, power);
+				// AddedPD : overcharge for dwarf!
+				if (ch.isAlive()) {
+					if (ch == Dungeon.hero && Dungeon.hero.heroClass == HeroClass.DWARF) {
+						Buff.prolong( Dungeon.hero, Haste.class, 4f);
+						ScrollOfRecharging.charge(Dungeon.hero);
+					} else Buff.prolong(ch, Paralysis.class, power);
+				}
 				arcs.add(new Lightning.Arc(DungeonTilemap.tileCenterToWorld(cell), ch.sprite.center()));
 			}
 		}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Food.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Food.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/food/Food.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,10 +24,12 @@
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
 import com.shatteredpixel.shatteredpixeldungeon.Statistics;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bless;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Hunger;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Recharging;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.effects.SpellSprite;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
@@ -108,6 +110,12 @@
 				break;
 			case ROGUE:
 			case HUNTRESS:
+			// AddedPD
+			case DWARF:
+				break;
+			case CLERIC:
+				Buff.affect( hero, Bless.class, Bless.DURATION );
+				CellEmitter.get(hero.pos).start(Speck.factory(Speck.LIGHT), 0.2f, 6);
 				break;
 		}
 	}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfForce.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfForce.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/rings/RingOfForce.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,6 +24,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.watabou.utils.Random;
 
@@ -80,6 +81,10 @@
 	@Override
 	public String statsInfo() {
 		float tier = tier(Dungeon.hero.STR());
+		if (Dungeon.hero.heroClass == HeroClass.DWARF) {
+			Messages.get(this,"dwarf_desc");
+			// AddedPD : Dwarf Survivor's alternative bonus is defined Hero.java
+		}
 		if (isIdentified()) {
 			return Messages.get(this, "stats", min(soloBonus(), tier), max(soloBonus(), tier), soloBonus());
 		} else {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Spell.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Spell.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/spells/Spell.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,6 +24,7 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicImmune;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
@@ -56,6 +57,9 @@
 			if (curUser.buff(MagicImmune.class) != null){
 				GLog.w( Messages.get(this, "no_magic") );
 				return;
+			} if (hero.heroClass == HeroClass.CLERIC) {
+				GLog.w( Messages.get(Spell.class, "cleric_no_magic") );
+				return;
 			}
 			
 			onCast( hero );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfEnchantment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfEnchantment.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfEnchantment.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,6 +21,7 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.stones;
 
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Enchanting;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
@@ -40,15 +41,13 @@
 	
 	@Override
 	protected void onItemSelected(Item item) {
-		
+
 		if (item instanceof Weapon) {
-			
-			((Weapon)item).enchant();
-			
+			if (((Weapon)item).enlightened) { GLog.w (Messages.get(Hero.class, "enlightened")); return; }
+			else ((Weapon)item).enchant();
 		} else {
-			
-			((Armor)item).inscribe();
-			
+			if (((Armor)item).enlightened) { GLog.w (Messages.get(Hero.class, "enlightened")); return; }
+			else ((Armor)item).inscribe();
 		}
 		
 		curUser.sprite.emitter().start( Speck.factory( Speck.LIGHT ), 0.1f, 5 );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfShock.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfShock.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/stones/StoneOfShock.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -26,11 +26,14 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Paralysis;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Lightning;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.EnergyParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SparkParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
 import com.shatteredpixel.shatteredpixeldungeon.utils.BArray;
 import com.watabou.noosa.audio.Sample;
@@ -58,7 +61,10 @@
 				Char n = Actor.findChar(i);
 				if (n != null) {
 					arcs.add(new Lightning.Arc(cell, n.sprite.center()));
-					Buff.prolong(n, Paralysis.class, 1f);
+					if (n == curUser && curUser.heroClass == HeroClass.DWARF) {
+						Buff.affect(n, Haste.class, 4f);
+						ScrollOfRecharging.charge(curUser);
+					} else { Buff.prolong(n, Paralysis.class, 1f); }
 					hits++;
 				}
 			}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/Wand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/Wand.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/Wand.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -116,6 +116,9 @@
 		if (owner.buff(MagicImmune.class) != null){
 			GLog.w( Messages.get(this, "no_magic") );
 			return false;
+		} if (owner.heroClass == HeroClass.CLERIC) {
+			GLog.w(Messages.get(Wand.class, "cleric_no_magic"));
+			return false;
 		}
 
 		if ( curCharges >= (cursed ? 1 : chargesPerCast())){
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLightning.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLightning.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfLightning.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -25,9 +25,13 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Lightning;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SparkParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.enchantments.Shocking;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.MagesStaff;
 import com.shatteredpixel.shatteredpixeldungeon.mechanics.Ballistica;
@@ -74,7 +78,14 @@
 			processSoulMark(ch, chargesPerCast());
 			ch.damage(Math.round(damageRoll() * multipler), this);
 
-			if (ch == Dungeon.hero) Camera.main.shake( 2, 0.3f );
+			if (ch == Dungeon.hero) {
+				Camera.main.shake( 2, 0.3f );
+				// AddedPD : overcharge our mechanized dwarf!
+				if (Dungeon.hero.heroClass == HeroClass.DWARF) {
+					Buff.prolong( ch, Haste.class, 4f);
+					ScrollOfRecharging.charge(Dungeon.hero);
+				}
+			}
 			ch.sprite.centerEmitter().burst( SparkParticle.FACTORY, 3 );
 			ch.sprite.flash();
 		}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfTransfusion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfTransfusion.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfTransfusion.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -28,6 +28,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Barrier;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Charm;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.TransfusionBuff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Beam;
 import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
@@ -47,6 +48,8 @@
 import com.watabou.utils.PointF;
 import com.watabou.utils.Random;
 
+import java.time.Duration;
+
 public class WandOfTransfusion extends Wand {
 
 	{
@@ -72,9 +75,9 @@
 			processSoulMark(ch, chargesPerCast());
 			
 			//this wand does different things depending on the target.
-			
-			//heals/shields an ally or a charmed enemy while damaging self
-			if (ch.alignment == Char.Alignment.ALLY || ch.buff(Charm.class) != null){
+
+			//heals/shields an ally while damaging self
+			if (ch.alignment == Char.Alignment.ALLY){
 				
 				// 10% of max hp
 				int selfDmg = Math.round(curUser.HT*0.10f);
@@ -97,13 +100,22 @@
 					damageHero(selfDmg);
 				} else {
 					freeCharge = false;
+					// AddedPD : notice freecharge as a "buff"
+					TransfusionBuff tBuff = curUser.buff(TransfusionBuff.class);
+					if (tBuff != null) { Buff.detach(curUser, TransfusionBuff.class); }
 				}
 
 			//for enemies...
 			} else {
-				
+
+				// AddedPD : charmed enemy will no more healed, so using this wand feels less annoying
+				if (ch.buff(Charm.class) != null) {
+					// really little effect for already charmed mobs
+					Buff.affect(ch, Charm.class, 2).object = curUser.id();
+				}
+
 				//charms living enemies
-				if (!ch.properties().contains(Char.Property.UNDEAD)) {
+				else if (!ch.properties().contains(Char.Property.UNDEAD)) {
 					Buff.affect(ch, Charm.class, 5).object = curUser.id();
 					ch.sprite.centerEmitter().start( Speck.factory( Speck.HEART ), 0.2f, 3 + level()/2 );
 				
@@ -141,13 +153,16 @@
 
 	@Override
 	public void onHit(MagesStaff staff, Char attacker, Char defender, int damage) {
-		// lvl 0 - 10%
-		// lvl 1 - 18%
-		// lvl 2 - 25%
-		if (Random.Int( level() + 10 ) >= 9){
+		// AddedPD : slightly buff for ally-focused battlemage
+		// lvl 0 - 20% (was 10%)
+		// lvl 1 - 33% (was 18%)
+		// lvl 2 - 43% (was 25%)
+		if (Random.Int( level() + 5 ) >= 4){
 			//grants a free use of the staff
 			freeCharge = true;
-			GLog.p( Messages.get(this, "charged") );
+			GLog.p(Messages.get(this, "charged"));
+			TransfusionBuff tBuff = attacker.buff(TransfusionBuff.class);
+			if (tBuff == null) { Buff.affect(attacker, TransfusionBuff.class); }
 			attacker.sprite.emitter().burst(BloodParticle.BURST, 20);
 		}
 	}
@@ -169,6 +184,21 @@
 		particle.radiateXY(0.5f);
 	}
 
+	// AddedPD : this wand needs more specific description
+	@Override
+	public String statsDesc() {
+		int selfDmg = Math.round(Dungeon.hero.HT*0.10f);
+		int healing = selfDmg+3*level();
+		int selfSH = 5+2*level();
+		int undeadMin = 3+level()/2;
+		int undeadMax = 6+level();
+
+		if (levelKnown)
+			return Messages.get(this, "stats_desc", selfDmg, healing, selfSH, undeadMin, undeadMax);
+		else
+			return Messages.get(this, "stats_desc", selfDmg, selfDmg, 5, 3, 6);
+	}
+
 	private static final String FREECHARGE = "freecharge";
 
 	@Override
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfWarding.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfWarding.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/wands/WandOfWarding.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -127,6 +127,8 @@
 		if (Random.Int( level + 5 ) >= 4) {
 			for (Char ch : Actor.chars()){
 				if (ch instanceof Ward){
+					// AddedPD : notice your heal effect is activated
+					GLog.p(Messages.get(this, "healed"));
 					((Ward) ch).wandHeal(staff.level());
 					ch.sprite.emitter().burst(MagicMissile.WardParticle.UP, ((Ward) ch).tier);
 				}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/SpiritBow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/SpiritBow.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/SpiritBow.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -26,6 +26,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Effects;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Splash;
 import com.shatteredpixel.shatteredpixeldungeon.items.rings.RingOfFuror;
 import com.shatteredpixel.shatteredpixeldungeon.items.rings.RingOfSharpshooting;
@@ -35,7 +36,11 @@
 import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.MissileSprite;
+import com.shatteredpixel.shatteredpixeldungeon.tiles.DungeonTilemap;
 import com.shatteredpixel.shatteredpixeldungeon.ui.QuickSlotButton;
+import com.watabou.noosa.Game;
+import com.watabou.noosa.Group;
+import com.watabou.noosa.Image;
 import com.watabou.noosa.audio.Sample;
 import com.watabou.utils.Callback;
 import com.watabou.utils.Random;
@@ -211,7 +216,43 @@
 	public SpiritArrow knockArrow(){
 		return new SpiritArrow();
 	}
-	
+
+	// AddedPD : spiritwalker's spectral blast
+	public static class SpectralBlast extends Image {
+
+		private static final float TIME_TO_FADE = 0.3f;
+		private float time;
+
+		public SpectralBlast(){
+			super(Effects.get(Effects.Type.RIPPLE));
+			origin.set(width / 2, height / 2);
+		}
+
+		public void reset(int pos) {
+			revive();
+			x = (pos % Dungeon.level.width()) * DungeonTilemap.SIZE + (DungeonTilemap.SIZE - width) / 2;
+			y = (pos / Dungeon.level.width()) * DungeonTilemap.SIZE + (DungeonTilemap.SIZE - height) / 2;
+			time = TIME_TO_FADE;
+		}
+
+		@Override
+		public void update() {
+			super.update();
+			if ((time -= Game.elapsed) <= 0) { kill(); }
+			else { float p = time / TIME_TO_FADE;
+				alpha(p);
+				scale.y = scale.x = (1-p)*3; } }
+
+		public static void blast(int pos) {
+			Group parent = Dungeon.hero.sprite.parent;
+			SpectralBlast b = (SpectralBlast) parent.recycle(SpectralBlast.class);
+			b.hardlight(0x99FFFF);
+			parent.bringToFront(b);
+			b.reset(pos);
+		}
+
+	}
+
 	public class SpiritArrow extends MissileWeapon {
 		
 		{
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/Weapon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/Weapon.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/Weapon.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -21,11 +21,21 @@
 
 package com.shatteredpixel.shatteredpixeldungeon.items.weapon;
 
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bless;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Blindness;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicImmune;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.RainbowParticle;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShaftParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.KindOfWeapon;
 import com.shatteredpixel.shatteredpixeldungeon.items.rings.RingOfFuror;
@@ -53,6 +63,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
+import com.watabou.noosa.audio.Sample;
 import com.watabou.utils.Bundlable;
 import com.watabou.utils.Bundle;
 import com.watabou.utils.Random;
@@ -104,7 +115,48 @@
 		if (enchantment != null && attacker.buff(MagicImmune.class) == null) {
 			damage = enchantment.proc( this, attacker, defender, damage );
 		}
-		
+
+		// AddedPD : for cleric's enlightened weapon
+		if (enlightened) {
+			if (Dungeon.hero.heroClass == HeroClass.CLERIC) {
+				Bless bless = attacker.buff(Bless.class);
+				int duration = 3+Dungeon.hero.lvl/2;
+				if (Random.Int(3 ) >= 2) {
+					// 33% chance to blessing
+					if (bless == null) {
+						Buff.prolong(attacker, Bless.class, duration);
+						CellEmitter.get( attacker.pos ).start( ShaftParticle.FACTORY, 0.2f, 3 );
+					}
+
+					for (Mob mob : Dungeon.level.mobs.toArray( new Mob[0] )) {
+						Bless allybless = mob.buff(Bless.class);
+						if (mob.alignment == Char.Alignment.ALLY && attacker.fieldOfView[mob.pos]
+								&& !mob.isCharmedBy(Dungeon.hero) && allybless == null) {
+							Buff.prolong(mob, Bless.class, duration);
+							CellEmitter.get( mob.pos ).start( ShaftParticle.FACTORY, 0.2f, 3 );
+						}
+					}
+
+					// also triggered by when wielder is ally(ex : sad ghost)
+					Bless herobless = Dungeon.hero.buff(Bless.class);
+					if (attacker != Dungeon.hero && herobless == null && attacker.fieldOfView[Dungeon.hero.pos]) {
+						Buff.prolong(Dungeon.hero, Bless.class, duration);
+						CellEmitter.get( Dungeon.hero.pos ).start( ShaftParticle.FACTORY, 0.2f, 3 );
+					}
+				}
+			}
+			// ...also crusader's enlightened weapon ALLWAYS blinds spellcasting monster!
+			if (Dungeon.hero.subClass == HeroSubClass.CRUSADER
+				&& defender.properties().contains(Char.Property.MAGICAL)) {
+				Blindness blindness = defender.buff(Blindness.class);
+				if (blindness == null) {
+					Buff.prolong(defender, Blindness.class, 3f);
+					CellEmitter.bottom(defender.pos).start(RainbowParticle.FACTORY, 0.05f, 8);
+					Sample.INSTANCE.play(Assets.SND_BLAST);
+				}
+			}
+		}
+
 		if (!levelKnown && attacker == Dungeon.hero && availableUsesToID >= 1) {
 			availableUsesToID--;
 			usesLeftToID--;
@@ -239,7 +291,9 @@
 	
 	@Override
 	public String name() {
-		return enchantment != null && (cursedKnown || !enchantment.curse()) ? enchantment.name( super.name() ) : super.name();
+		if (enlightened)
+			return Messages.get(Weapon.class, "enlightened_name") + " " + super.name();
+		else return enchantment != null && (cursedKnown || !enchantment.curse()) ? enchantment.name( super.name() ) : super.name();
 	}
 	
 	@Override
@@ -287,7 +341,10 @@
 	public boolean hasEnchant(Class<?extends Enchantment> type, Char owner) {
 		return enchantment != null && enchantment.getClass() == type && owner.buff(MagicImmune.class) == null;
 	}
-	
+
+	// AddedPD : cleric's enlightenment power
+	public boolean isEnlightened() { return enchantment == null && enlightened;}
+
 	//these are not used to process specific enchant effects, so magic immune doesn't affect them
 	public boolean hasGoodEnchant(){
 		return enchantment != null && !enchantment.curse();
@@ -299,7 +356,8 @@
 
 	@Override
 	public ItemSprite.Glowing glowing() {
-		return enchantment != null && (cursedKnown || !enchantment.curse()) ? enchantment.glowing() : null;
+		if (enlightened) { return new ItemSprite.Glowing( 0xFFFFCC ); }
+		else return enchantment != null && (cursedKnown || !enchantment.curse()) ? enchantment.glowing() : null;
 	}
 
 	public static abstract class Enchantment implements Bundlable {
@@ -329,10 +387,11 @@
 		public abstract int proc( Weapon weapon, Char attacker, Char defender, int damage );
 
 		public String name() {
-			if (!curse())
-				return name( Messages.get(this, "enchant"));
-			else
-				return name( Messages.get(Item.class, "curse"));
+			if (!curse()) {
+				if (enlightened()) {
+					return name(Messages.get(this, "enlightened_name"));
+				} else return name(Messages.get(this, "enchant")); }
+			else return name( Messages.get(Item.class, "curse"));
 		}
 
 		public String name( String weaponName ) {
@@ -347,6 +406,10 @@
 			return false;
 		}
 
+		public boolean enlightened() { // AddedPD : cleric's enlightenment power
+			return false; // Use for String name()
+		}
+
 		@Override
 		public void restoreFromBundle( Bundle bundle ) {
 		}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Shocking.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Shocking.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/enchantments/Shocking.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -25,8 +25,12 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Lightning;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SparkParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.Weapon;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
 import com.shatteredpixel.shatteredpixeldungeon.utils.BArray;
@@ -57,6 +61,13 @@
 			affected.remove(defender); //defender isn't hurt by lightning
 			for (Char ch : affected) {
 				ch.damage(Math.round(damage*0.4f), this);
+
+				// AddedPD : The Dwarf Survivor's perk(but still receive damage)
+				if ( ch == Dungeon.hero && Dungeon.hero.heroClass == HeroClass.DWARF) {
+					// overcharge his cybernetic body!
+					Buff.prolong(ch, Haste.class, 4f);
+					ScrollOfRecharging.charge(Dungeon.hero);
+				}
 			}
 
 			attacker.sprite.parent.addToFront( new Lightning( arcs, null ) );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Cudgel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Cudgel.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/Cudgel.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,43 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee;
+
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
+
+public class Cudgel extends MeleeWeapon {
+
+	{
+		image = ItemSpriteSheet.CUDGEL;
+
+		tier = 1;
+		ACC = 1.36f; //36% boost to accuracy
+		
+		bones = false;
+	}
+
+	@Override
+	public int max(int lvl) {
+		return  4*(tier+1) +    //8 base, down from 10
+				lvl*(tier+1);   //scaling unchanged
+	}
+
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/DwarfArm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/DwarfArm.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/DwarfArm.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,157 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.DwarfThunder;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Haste;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Lightning;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SparkParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.Weapon;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
+import com.shatteredpixel.shatteredpixeldungeon.utils.BArray;
+import com.watabou.noosa.Camera;
+import com.watabou.noosa.audio.Sample;
+import com.watabou.utils.PathFinder;
+
+import java.util.ArrayList;
+
+public class DwarfArm extends MeleeWeapon {
+
+    {
+        image = ItemSpriteSheet.DWARFARM;
+
+        tier = 1;
+        DLY = 0.5f; //2x speed
+
+        bones = false;
+    }
+
+    @Override
+    public ArrayList<String> actions(Hero hero) {
+        ArrayList<String> actions = super.actions( hero );
+        actions.remove(AC_UNEQUIP);
+        actions.remove(AC_THROW);
+        actions.remove(AC_DROP);
+        return actions;
+    }
+
+    @Override
+    public int proc(Char attacker, Char defender, int damage) {
+        if (attacker instanceof Hero && ((Hero)attacker).subClass == HeroSubClass.THUNDERBRINGER) {
+
+            int shocked = 0;
+
+            Buff.affect(attacker, DwarfThunder.class).set();
+
+            if (Dungeon.hero.buff(DwarfThunder.class).level() >= 4) {
+                for (int i : PathFinder.NEIGHBOURS8) {
+                    Char ch = Actor.findChar(attacker.pos + i);
+                    if (ch != null) {
+                        // only harm enemy(no self damage, no friendly fire)
+                        if (ch.alignment != Dungeon.hero.alignment) {
+                            shocked++;
+                            thunder(this, attacker, ch, damage);
+                            // yes, this means more enemy = more shocking. DESTRUCTIVE!
+                        }
+                    }
+                }
+                if (attacker.buff(Haste.class) == null && shocked >= 3) {
+                    // shock 3+ enemies gain haste
+                    Buff.prolong(attacker, Haste.class, 3f);
+                    ScrollOfRecharging.charge((Hero)attacker);
+                }
+                Camera.main.shake(2, 0.3f);
+                Dungeon.hero.buff(DwarfThunder.class).reset();
+            }
+        }
+        return super.proc(attacker, defender, damage);
+    }
+
+    public int thunder( Weapon weapon, Char attacker, Char defender, int damage ) {
+    // similar as shocking enchantment, but you can see below there are some critical changes...
+        affected.clear();
+
+        arcs.clear();
+        arc(attacker, defender, 2);
+
+        for (Char ch : affected) {
+            if (ch.alignment != attacker.alignment)
+            ch.damage(Math.round(damage*0.6f), this);
+        }
+
+        attacker.sprite.parent.addToFront( new Lightning( arcs, null ) );
+        Sample.INSTANCE.play( Assets.SND_LIGHTNING );
+
+        return damage;
+    }
+
+    private ArrayList<Char> affected = new ArrayList<>();
+
+    private ArrayList<Lightning.Arc> arcs = new ArrayList<>();
+
+    private void arc( Char attacker, Char defender, int dist ) {
+
+        affected.add(defender);
+
+        defender.sprite.centerEmitter().burst(SparkParticle.FACTORY, 3);
+        defender.sprite.flash();
+
+        PathFinder.buildDistanceMap( defender.pos, BArray.not( Dungeon.level.solid, null ), dist );
+        for (int i = 0; i < PathFinder.distance.length; i++) {
+            if (PathFinder.distance[i] < Integer.MAX_VALUE) {
+                Char n = Actor.findChar(i);
+                if (n != null && n != attacker && n.alignment != attacker.alignment && !affected.contains(n)) {
+                    arcs.add(new Lightning.Arc(defender.sprite.center(), n.sprite.center()));
+                    arc(attacker, n, (Dungeon.level.water[n.pos] && !n.flying) ? 2 : 1);
+                }
+            }
+        }
+    }
+
+    @Override
+    public int max(int lvl) {
+        return  5 + lvl*tier;       //5 base, +1 per level
+    }
+
+    @Override
+    public int defenseFactor( Char owner ) {
+        int def = 1+(int)(Math.floor(0.5*level()));
+        return def;    //1 extra defence, plus 1 per 2 level;
+    }
+
+    public String statsInfo(){
+        if (isIdentified()){
+            return Messages.get(this, "stats_desc", 1+(int)(Math.floor(0.5*level())));
+        } else {
+            return Messages.get(this, "typical_stats_desc", 1);
+        }
+    }
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MagesStaff.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,14 +23,22 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
+import com.shatteredpixel.shatteredpixeldungeon.Challenges;
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Recharging;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.TransmuterBuff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroSubClass;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.shatteredpixel.shatteredpixeldungeon.items.EquipableItem;
+import com.shatteredpixel.shatteredpixeldungeon.items.Generator;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.bags.Bag;
 import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfRecharging;
+import com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfTransmutation;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.Wand;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfCorrosion;
 import com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfCorruption;
@@ -121,14 +129,47 @@
 
 		} else if (action.equals(AC_ZAP)){
 
-			if (wand == null) {
-				GameScene.show(new WndItem(null, this, true));
-				return;
-			}
+			// AddedPD : transmuter's staff-change
+			if (curUser.subClass == HeroSubClass.TRANSMUTER && wand!= null && isEquipped(curUser)
+					&& wand.curCharges == 0 && !hasCurseEnchant() && curseInfusionBonus == false
+					&& curUser.buff(TransmuterBuff.class) == null) {
+
+				float dur = 8f + (float)(2*level());
+
+				Wand n;
+				do {
+					n = (Wand) Generator.random(Generator.Category.WAND);
+				} while (Challenges.isItemBlocked(n) || n.getClass() == wandClass());
+				n.level(0);
+				n.identify();
+				imbueWand(n, null);
+
+				int slot = Dungeon.quickslot.getSlot( this );
+				doUnequip(Dungeon.hero, false);
+				doEquip(hero);
+				if (slot != -1) {
+					Dungeon.quickslot.setSlot( slot, this );
+					wand.curCharges = 1;
+					updateQuickslot();
+				}
+
+				curUser.sprite.emitter().burst( Speck.factory( Speck.CHANGE ), 4);
+				curUser.sprite.emitter().burst(StaffParticleFactory, 30);
+				Buff.affect(curUser, Recharging.class, 4f);
+				Buff.affect(curUser, TransmuterBuff.class, dur);
+				GLog.p( Messages.get(MagesStaff.class, "transmute", this.name()));
+
+			} else {
+
+				if (wand == null) {
+					GameScene.show(new WndItem(null, this, true));
+					return;
+				}
 
-			if (cursed || hasCurseEnchant()) wand.cursed = true;
-			else                             wand.cursed = false;
-			wand.execute(hero, AC_ZAP);
+				if (cursed || hasCurseEnchant() || curUser.buff(TransmuterBuff.class) != null) wand.cursed = true;
+				else wand.cursed = false;
+				wand.execute(hero, AC_ZAP);
+			}
 		}
 	}
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MeleeWeapon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MeleeWeapon.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/melee/MeleeWeapon.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -107,6 +107,8 @@
 			info += "\n\n" + Messages.get(Weapon.class, "cursed");
 		} else if (!isIdentified() && cursedKnown){
 			info += "\n\n" + Messages.get(Weapon.class, "not_cursed");
+		} else if (enlightened) { // AddedPD : cleric's enlightenment power
+			info += "\n\n" + Messages.get(Weapon.class, "enlightened_info");
 		}
 		
 		return info;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/MissileWeapon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/MissileWeapon.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/MissileWeapon.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,8 +24,10 @@
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Actor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Baptized;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Corruption;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Devotion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.PinCushion;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
@@ -201,7 +203,8 @@
 		decrementDurability();
 		if (durability > 0){
 			//attempt to stick the missile weapon to the enemy, just drop it if we can't.
-			if (sticky && enemy != null && enemy.isAlive() && enemy.buff(Corruption.class) == null){
+			if (sticky && enemy != null && enemy.isAlive() && enemy.buff(Corruption.class) == null
+				&& enemy.buff(Baptized.class) == null){	// AddedPD : also baptized mob
 				PinCushion p = Buff.affect(enemy, PinCushion.class);
 				if (p.target == enemy){
 					p.stick(this);
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/Dart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/Dart.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/items/weapon/missiles/darts/Dart.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,8 +23,14 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Bless;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicImmune;
 import com.shatteredpixel.shatteredpixeldungeon.actors.hero.Hero;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShaftParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Crossbow;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.MissileWeapon;
@@ -34,6 +40,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSpriteSheet;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndBag;
 import com.shatteredpixel.shatteredpixeldungeon.windows.WndOptions;
+import com.watabou.utils.Random;
 
 import java.util.ArrayList;
 
@@ -112,6 +119,30 @@
 		if (bow != null && bow.enchantment != null && attacker.buff(MagicImmune.class) == null){
 			level(bow.level());
 			damage = bow.enchantment.proc(this, attacker, defender, damage);
+
+			// AddedPD : for cleric's enlightened weapon
+			if (bow.enlightened) {
+					Bless bless = attacker.buff(Bless.class);
+					int duration = 3+Dungeon.hero.lvl/2;
+					if (Random.Int(3 ) >= 2) {
+						// 33% chance to blessing
+						if (bless == null) {
+							Buff.prolong(attacker, Bless.class, duration);
+							CellEmitter.get( attacker.pos ).start( ShaftParticle.FACTORY, 0.2f, 3 );
+						}
+
+						for (Mob mob : Dungeon.level.mobs.toArray( new Mob[0] )) {
+							Bless allybless = mob.buff(Bless.class);
+							if (mob.alignment == Char.Alignment.ALLY && attacker.fieldOfView[mob.pos]
+									&& !mob.isCharmedBy(Dungeon.hero) && allybless == null) {
+								Buff.prolong(mob, Bless.class, duration);
+								CellEmitter.get( mob.pos ).start( ShaftParticle.FACTORY, 0.2f, 3 );
+							}
+						}
+					}
+
+			}
+
 			level(0);
 		}
 		return super.proc(attacker, defender, damage);
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Catalog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Catalog.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Catalog.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -94,8 +94,10 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.AssassinsBlade;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.BattleAxe;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Crossbow;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Cudgel;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Dagger;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Dirk;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.DwarfArm;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Flail;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Gauntlet;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Glaive;
@@ -156,6 +158,9 @@
 		WEAPONS.seen.put( Gloves.class,                     false);
 		WEAPONS.seen.put( Dagger.class,                     false);
 		WEAPONS.seen.put( MagesStaff.class,                 false);
+		// AddedPD
+		WEAPONS.seen.put( Cudgel.class,                     false);
+		WEAPONS.seen.put( DwarfArm.class,                   false);
 		//WEAPONS.seen.put( Boomerang.class,                  false);
 		WEAPONS.seen.put( Shortsword.class,                 false);
 		WEAPONS.seen.put( HandAxe.class,                    false);
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Notes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Notes.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/journal/Notes.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -74,7 +74,9 @@
 		GHOST,
 		WANDMAKER,
 		TROLL,
-		IMP;
+		IMP,
+		// AddedPD
+		DWARF;
 		
 		public String desc() {
 			return Messages.get(this, name());
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsLevel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsLevel.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/HallsLevel.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,9 +23,11 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.WoundedDwarf;
 import com.shatteredpixel.shatteredpixeldungeon.items.Torch;
 import com.shatteredpixel.shatteredpixeldungeon.levels.painters.HallsPainter;
 import com.shatteredpixel.shatteredpixeldungeon.levels.painters.Painter;
+import com.shatteredpixel.shatteredpixeldungeon.levels.rooms.Room;
 import com.shatteredpixel.shatteredpixeldungeon.levels.traps.BlazingTrap;
 import com.shatteredpixel.shatteredpixeldungeon.levels.traps.CorrosionTrap;
 import com.shatteredpixel.shatteredpixeldungeon.levels.traps.CursingTrap;
@@ -52,6 +54,8 @@
 import com.watabou.utils.PointF;
 import com.watabou.utils.Random;
 
+import java.util.ArrayList;
+
 public class HallsLevel extends RegularLevel {
 
 	{
@@ -61,7 +65,12 @@
 		color1 = 0x801500;
 		color2 = 0xa68521;
 	}
-	
+
+	@Override
+	protected ArrayList<Room> initRooms() {
+		return WoundedDwarf.Quest.spawnRoom(super.initRooms());
+	}
+
 	@Override
 	protected int standardRooms() {
 		//8 to 10, average 8.67
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Level.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Level.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/Level.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -34,6 +34,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Awareness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Blindness;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff;
+import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.BurglarSense;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.LockedFloor;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MagicalSight;
 import com.shatteredpixel.shatteredpixeldungeon.actors.buffs.MindVision;
@@ -44,6 +45,8 @@
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Bestiary;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Sheep;
+import com.shatteredpixel.shatteredpixeldungeon.effects.CellEmitter;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.FlowParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.WindParticle;
 import com.shatteredpixel.shatteredpixeldungeon.items.Generator;
@@ -869,11 +872,23 @@
 			} else {
 
 				if (Dungeon.hero.pos == cell) {
-					Dungeon.hero.interrupt();
+					// AddedPD : the burglar's dodge trap ability
+					BurglarSense burglarSense = Dungeon.hero.buff(BurglarSense.class);
+					if (Dungeon.hero.subClass == HeroSubClass.BURGLAR
+							&& burglarSense == null && trap.active) {
+						Dungeon.hero.interrupt();
+						Sample.INSTANCE.play(Assets.SND_EVOKE);
+						CellEmitter.get(cell).burst(Speck.factory(Speck.STEAM), 10);
+						trap.disarm();
+						Buff.affect(Dungeon.hero, BurglarSense.class, BurglarSense.TRAP_DURATION);
+						GLog.w(Messages.get(BurglarSense.class, "disarm"));
+					} else {
+						Dungeon.hero.interrupt();
+
+					}
 				}
 
 				trap.trigger();
-
 			}
 		}
 		
@@ -900,6 +915,17 @@
 						blocking[i] = false;
 					}
 				}
+			}
+			// AddedPD : for burglar - rouge's 3rd subclass
+			else if (c instanceof Hero && ((Hero) c).subClass == HeroSubClass.BURGLAR) {
+				blocking = Dungeon.level.losBlocking.clone();
+				for (int i = 0; i < blocking.length; i++){
+					// can see through door & locked door(except secret door) to check "is this room safe?" or "what's in this room?"
+					if (blocking[i] && (Dungeon.level.map[i] == Terrain.DOOR || Dungeon.level.map[i] == Terrain.LOCKED_DOOR
+										|| Dungeon.level.map[i] == Terrain.BARRICADE || Dungeon.level.map[i] == Terrain.BOOKSHELF)){
+						blocking[i] = false;
+					}
+				}
 			} else {
 				blocking = Dungeon.level.losBlocking;
 			}
@@ -965,8 +991,14 @@
 			} else if (((Hero)c).heroClass == HeroClass.HUNTRESS) {
 				for (Mob mob : mobs) {
 					int p = mob.pos;
-					if (distance( c.pos, p) == 2) {
-
+					// AddedPD : spiritwalker has dubled detection
+					if (((Hero)c).subClass == HeroSubClass.SPIRITWALKER) {
+						if (distance( c.pos, p) <= 4 && distance( c.pos, p) >= 2) {
+							if (!fieldOfView[p]){
+								Dungeon.hero.mindVisionEnemies.add(mob);
+							}
+						}
+					} else if (distance( c.pos, p) == 2) {
 						if (!fieldOfView[p]){
 							Dungeon.hero.mindVisionEnemies.add(mob);
 						}
@@ -979,7 +1011,7 @@
 					fieldOfView[m.pos + i] = true;
 				}
 			}
-			
+
 			if (c.buff( Awareness.class ) != null) {
 				for (Heap heap : heaps.valueList()) {
 					int p = heap.pos;
@@ -989,7 +1021,9 @@
 			}
 
 			for (Mob ward : mobs){
-				if (ward instanceof WandOfWarding.Ward){
+				if (ward instanceof WandOfWarding.Ward ||
+						ward instanceof DriedRose.GhostHero ||
+						ward.isBaptized()){ // AddedPD : now sad ghost and redeemer's baptized ally share its vision
 					if (ward.fieldOfView == null || ward.fieldOfView.length != length()){
 						ward.fieldOfView = new boolean[length()];
 						Dungeon.level.updateFieldOfView( ward, ward.fieldOfView );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Chasm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Chasm.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/features/Chasm.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -116,8 +116,8 @@
 		Dungeon.level.occupyCell(hero );
 		Buff.prolong( hero, Cripple.class, Cripple.DURATION );
 
-		//The lower the hero's HP, the more bleed and the less upfront damage.
-		//Hero has a 50% chance to bleed out at 66% HP, and begins to risk instant-death at 25%
+		//The lower the hero's HP, the more fully_charged and the less upfront damage.
+		//Hero has a 50% chance to fully_charged out at 66% HP, and begins to risk instant-death at 25%
 		Buff.affect( hero, FallBleed.class).set( Math.round(hero.HT / (6f + (6f*(hero.HP/(float)hero.HT)))));
 		hero.damage( Math.max( hero.HP / 2, Random.NormalIntRange( hero.HP / 2, hero.HT / 4 )), new Hero.Doom() {
 			@Override
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/WoundedDwarfRoom.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/WoundedDwarfRoom.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/rooms/special/WoundedDwarfRoom.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,79 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.levels.rooms.special;
+
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.WoundedDwarf;
+import com.shatteredpixel.shatteredpixeldungeon.items.keys.IronKey;
+import com.shatteredpixel.shatteredpixeldungeon.levels.Level;
+import com.shatteredpixel.shatteredpixeldungeon.levels.Terrain;
+import com.shatteredpixel.shatteredpixeldungeon.levels.painters.Painter;
+import com.shatteredpixel.shatteredpixeldungeon.levels.traps.SummoningTrap;
+import com.watabou.utils.Point;
+import com.watabou.utils.Reflection;
+
+public class WoundedDwarfRoom extends SpecialRoom {
+
+	public void paint( Level level ) {
+		 
+		Painter.fill( level, this, Terrain.WALL );
+		Painter.fill(level, this, 1, Terrain.TRAP);
+
+		Door door = entrance();
+		door.set( Door.Type.LOCKED );
+		level.addItemToSpawn(new IronKey(Dungeon.depth));
+		
+		int lastRow = level.map[left + 1 + (top + 1) * level.width()] == Terrain.CHASM ? Terrain.CHASM : Terrain.EMPTY;
+
+		int x = -1;
+		int y = -1;
+		if (door.x == left) {
+			x = right - 1;
+			y = top + height() / 2;
+			Painter.fill( level, x, top + 1, 1, height() - 2 , lastRow );
+		} else if (door.x == right) {
+			x = left + 1;
+			y = top + height() / 2;
+			Painter.fill( level, x, top + 1, 1, height() - 2 , lastRow );
+		} else if (door.y == top) {
+			x = left + width() / 2;
+			y = bottom - 1;
+			Painter.fill( level, left + 1, y, width() - 2, 1 , lastRow );
+		} else if (door.y == bottom) {
+			x = left + width() / 2;
+			y = top + 1;
+			Painter.fill( level, left + 1, y, width() - 2, 1 , lastRow );
+		}
+
+		for(Point p : getPoints()) {
+			int cell = level.pointToCell(p);
+			if (level.map[cell] == Terrain.TRAP){
+				level.setTrap(Reflection.newInstance(SummoningTrap.class).hide(), cell);
+			}
+		}
+		
+		int pos = x + y * level.width();
+		Painter.set( level, pos, Terrain.PEDESTAL );
+		WoundedDwarf dwarf = new WoundedDwarf();
+		level.mobs.add(dwarf);
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisarmingTrap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisarmingTrap.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisarmingTrap.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -29,6 +29,8 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.Heap;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
 import com.shatteredpixel.shatteredpixeldungeon.items.KindOfWeapon;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.Weapon;
+import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.DwarfArm;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene;
 import com.shatteredpixel.shatteredpixeldungeon.utils.GLog;
@@ -65,7 +67,9 @@
 			Hero hero = Dungeon.hero;
 			KindOfWeapon weapon = hero.belongings.weapon;
 
-			if (weapon != null && !weapon.cursed) {
+			if (weapon != null && !weapon.cursed
+					&& !weapon.enlightened
+					&& !(weapon instanceof DwarfArm)) {
 
 				int cell = Dungeon.level.randomRespawnCell();
 				if (cell != -1) {
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisintegrationTrap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisintegrationTrap.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/levels/traps/DisintegrationTrap.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -84,7 +84,7 @@
 						bag = (Bag)item;
 						item = Random.element(bag.items);
 					}
-					if (item == null || item.level() > 0 || item.unique) return;
+					if (item == null || item.level() > 0 || item.unique || item.enlightened) return;
 					if (!item.stackable){
 						item.detachAll(bag);
 						GLog.w( Messages.get(this, "one", item.name()) );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Rotberry.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Rotberry.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/plants/Rotberry.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -40,7 +40,7 @@
 	@Override
 	public void activate( Char ch ) {
 		if (ch instanceof Hero && ((Hero) ch).subClass == HeroSubClass.WARDEN){
-			Buff.affect(ch, AdrenalineSurge.class).reset(1, 200f);
+			Buff.append(ch, AdrenalineSurge.class).reset(1, 200f);
 		}
 		
 		Dungeon.level.drop( new Seed(), pos ).sprite.drop();
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/AboutScene.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,6 +23,7 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.SPDSettings;
 import com.shatteredpixel.shatteredpixeldungeon.ShatteredPixelDungeon;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Fireball;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Flare;
 import com.shatteredpixel.shatteredpixeldungeon.ui.Archs;
 import com.shatteredpixel.shatteredpixeldungeon.ui.ExitButton;
@@ -31,12 +32,21 @@
 import com.shatteredpixel.shatteredpixeldungeon.ui.Window;
 import com.watabou.input.PointerEvent;
 import com.watabou.noosa.Camera;
+import com.watabou.noosa.Halo;
 import com.watabou.noosa.Image;
 import com.watabou.noosa.PointerArea;
 import com.watabou.utils.DeviceCompat;
 
 public class AboutScene extends PixelScene {
 
+
+	private static final String TTL_ADDED_PD = "Added Pixel Dungeon";
+
+	private static final String TXT_ADDED_PD =
+			"Design, Code, & Graphics: Calming Creator";
+
+	private static final String LNK_ADDED_PD = "https://www.patreon.com/addedpd";
+
 	private static final String TTL_SHPX = "Shattered Pixel Dungeon";
 
 	private static final String TXT_SHPX =
@@ -57,12 +67,57 @@
 		super.create();
 
 		final float colWidth = Camera.main.width / (SPDSettings.landscape() ? 2 : 1);
-		final float colTop = (Camera.main.height / 2) - (SPDSettings.landscape() ? 30 : 90);
+		final float colTop = (Camera.main.height / 2) - (SPDSettings.landscape() ? 30 : 120);
 		final float wataOffset = SPDSettings.landscape() ? colWidth : 0;
 
+		Image added = Icons.ADDED_PD.get();
+		added.x = (colWidth - added.width()) / 2;
+		added.y = colTop;
+		align(added);
+		add( added );
+
+		Fireball fb = new Fireball();
+		fb.setPos( added.x+(added.width()/2), added.y+6 );
+		addToBack( fb );
+
+		RenderedTextBlock addedtitle = renderTextBlock( TTL_ADDED_PD, 8 );
+		addedtitle.hardlight( Window.ADDED_PD_COLOR );
+		add( addedtitle );
+
+		addedtitle.setPos(
+				(colWidth - addedtitle.width()) / 2,
+				added.y + added.height + 5
+		);
+		align(addedtitle);
+
+		RenderedTextBlock addedtext = renderTextBlock( TXT_ADDED_PD, 8 );
+		addedtext.maxWidth((int)Math.min(colWidth, 120));
+		add( addedtext );
+
+		addedtext.setPos((colWidth - addedtext.width()) / 2, addedtitle.bottom() + 12);
+		align(addedtext);
+
+		RenderedTextBlock addedlink = renderTextBlock( LNK_ADDED_PD, 8 );
+		addedlink.maxWidth(addedtext.maxWidth());
+		addedlink.hardlight( Window.ADDED_PD_COLOR );
+		add( addedlink );
+
+		addedlink.setPos((colWidth - addedlink.width()) / 2, addedtext.bottom() + 6);
+		align(addedlink);
+
+		PointerArea addedhotArea = new PointerArea( addedlink.left(), addedlink.top(), addedlink.width(), addedlink.height() ) {
+			@Override
+			protected void onClick( PointerEvent event ) {
+				DeviceCompat.openURI( "https://www.patreon.com/addedpd");
+			}
+		};
+		add( addedhotArea );
+
 		Image shpx = Icons.SHPX.get();
 		shpx.x = (colWidth - shpx.width()) / 2;
-		shpx.y = colTop;
+		shpx.y = SPDSettings.landscape() ?
+				colTop:
+				addedlink.top() + shpx.height + 20;
 		align(shpx);
 		add( shpx );
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/TitleScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/TitleScene.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/scenes/TitleScene.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -127,11 +127,14 @@
 			protected void onClick() {
 				WndOptions wnd = new WndOptions(Messages.get(TitleScene.class, "support"),
 						Messages.get(TitleScene.class, "patreon_body"),
-						Messages.get(TitleScene.class, "patreon_button")){
+						Messages.get(TitleScene.class, "patreon_button_shattered"),
+						Messages.get(TitleScene.class, "patreon_button_added")){
 					@Override
 					protected void onSelect(int index) {
 						if (index == 0){
 							DeviceCompat.openURI("https://www.patreon.com/ShatteredPixel");
+						} else if (index == 1) {
+							DeviceCompat.openURI("https://www.patreon.com/addedpd");
 						} else {
 							hide();
 						}
@@ -177,7 +180,7 @@
 				ShatteredPixelDungeon.switchNoFade( AboutScene.class );
 			}
 		};
-		btnAbout.icon(Icons.get(Icons.SHPX));
+		btnAbout.icon(Icons.get(Icons.ADDED_PD));
 		add(btnAbout);
 		
 		final int BTN_HEIGHT = 21;
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CharSprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CharSprite.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/CharSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -24,14 +24,17 @@
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.effects.DarkBlock;
 import com.shatteredpixel.shatteredpixeldungeon.effects.EmoIcon;
 import com.shatteredpixel.shatteredpixeldungeon.effects.FloatingText;
 import com.shatteredpixel.shatteredpixeldungeon.effects.IceBlock;
+import com.shatteredpixel.shatteredpixeldungeon.effects.LightBlock;
 import com.shatteredpixel.shatteredpixeldungeon.effects.ShieldHalo;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
 import com.shatteredpixel.shatteredpixeldungeon.effects.Splash;
 import com.shatteredpixel.shatteredpixeldungeon.effects.TorchHalo;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.FlameParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ShadowParticle;
 import com.shatteredpixel.shatteredpixeldungeon.effects.particles.SnowParticle;
@@ -79,7 +82,9 @@
 	protected float shadowOffset    = 0.25f;
 
 	public enum State {
-		BURNING, LEVITATING, INVISIBLE, PARALYSED, FROZEN, ILLUMINATED, CHILLED, DARKENED, MARKED, HEALING, SHIELDED
+		BURNING, LEVITATING, INVISIBLE, PARALYSED, FROZEN, ILLUMINATED, CHILLED, DARKENED, MARKED, HEALING, SHIELDED,
+		// AddedPD
+		NECROTIC, LIGHTENED
 	}
 	
 	protected Animation idle;
@@ -88,6 +93,9 @@
 	protected Animation operate;
 	protected Animation zap;
 	protected Animation die;
+
+	// AddedPD
+	protected Animation kick;
 	
 	protected Callback animCallback;
 	
@@ -104,6 +112,9 @@
 	protected TorchHalo light;
 	protected ShieldHalo shield;
 	protected AlphaTweener invisible;
+	//AddedPD
+	protected Emitter necrotic;
+	protected LightBlock lightBlock;
 	
 	protected EmoIcon emo;
 	protected CharHealthIndicator health;
@@ -225,12 +236,16 @@
 	
 	public void attack( int cell ) {
 		turnTo( ch.pos, cell );
+		if (ch == Dungeon.hero && Dungeon.hero.heroClass == HeroClass.DWARF
+				&& Random.Float() < 0.5f ) { play( kick ); } else
 		play( attack );
 	}
 	
 	public void attack( int cell, Callback callback ) {
 		animCallback = callback;
 		turnTo( ch.pos, cell );
+		if (ch == Dungeon.hero && Dungeon.hero.heroClass == HeroClass.DWARF
+				&& Random.Float() < 0.5f ) { play( kick ); } else
 		play( attack );
 	}
 	
@@ -254,7 +269,7 @@
 		animCallback = callback;
 		zap( cell );
 	}
-	
+
 	public void turnTo( int from, int to ) {
 		int fx = from % Dungeon.level.width();
 		int tx = to % Dungeon.level.width();
@@ -334,41 +349,41 @@
 		switch (state) {
 			case BURNING:
 				burning = emitter();
-				burning.pour( FlameParticle.FACTORY, 0.06f );
+				burning.pour(FlameParticle.FACTORY, 0.06f);
 				if (visible) {
-					Sample.INSTANCE.play( Assets.SND_BURNING );
+					Sample.INSTANCE.play(Assets.SND_BURNING);
 				}
 				break;
 			case LEVITATING:
 				levitation = emitter();
-				levitation.pour( Speck.factory( Speck.JET ), 0.02f );
+				levitation.pour(Speck.factory(Speck.JET), 0.02f);
 				break;
 			case INVISIBLE:
 				if (invisible != null) {
 					invisible.killAndErase();
 				}
-				invisible = new AlphaTweener( this, 0.4f, 0.4f );
-				if (parent != null){
+				invisible = new AlphaTweener(this, 0.4f, 0.4f);
+				if (parent != null) {
 					parent.add(invisible);
 				} else
-					alpha( 0.4f );
+					alpha(0.4f);
 				break;
 			case PARALYSED:
 				paused = true;
 				break;
 			case FROZEN:
-				iceBlock = IceBlock.freeze( this );
+				iceBlock = IceBlock.freeze(this);
 				paused = true;
 				break;
 			case ILLUMINATED:
-				GameScene.effect( light = new TorchHalo( this ) );
+				GameScene.effect(light = new TorchHalo(this));
 				break;
 			case CHILLED:
 				chilled = emitter();
 				chilled.pour(SnowParticle.FACTORY, 0.1f);
 				break;
 			case DARKENED:
-				darkBlock = DarkBlock.darken( this );
+				darkBlock = DarkBlock.darken(this);
 				break;
 			case MARKED:
 				marked = emitter();
@@ -379,8 +394,18 @@
 				healing.pour(Speck.factory(Speck.HEALING), 0.5f);
 				break;
 			case SHIELDED:
-				GameScene.effect( shield = new ShieldHalo( this ));
+				GameScene.effect(shield = new ShieldHalo(this));
 				break;
+			case NECROTIC:
+				necrotic = emitter();
+				necrotic.pour(ElmoParticle.FACTORY, 0.75f);
+				if (visible) {
+					Sample.INSTANCE.play(Assets.SND_MELD);
+				}
+				break;
+			case LIGHTENED:
+				lightBlock = LightBlock.baptized(this);
+				break;
 		}
 	}
 	
@@ -449,6 +474,18 @@
 					shield.putOut();
 				}
 				break;
+			case NECROTIC:
+			if (necrotic != null) {
+				necrotic.on = false;
+				necrotic = null;
+			}
+				break;
+			case LIGHTENED:
+				if (lightBlock != null) {
+					lightBlock.unlighten();
+					lightBlock = null;
+				}
+				break;
 		}
 	}
 	
@@ -481,6 +518,9 @@
 		if (marked != null) {
 			marked.visible = visible;
 		}
+		if (necrotic != null) {
+			necrotic.visible = visible;
+		}
 		if (sleeping) {
 			showSleep();
 		} else {
@@ -657,8 +697,8 @@
 			executing.call();
 		} else {
 			
-			if (anim == attack) {
-				
+			if (anim == attack || anim == kick) {
+
 				idle();
 				ch.onAttackComplete();
 				
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/HeroSprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/HeroSprite.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/HeroSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -33,6 +33,7 @@
 import com.watabou.noosa.TextureFilm;
 import com.watabou.utils.Callback;
 import com.watabou.utils.PointF;
+import com.watabou.utils.Random;
 import com.watabou.utils.RectF;
 
 public class HeroSprite extends CharSprite {
@@ -49,7 +50,7 @@
 
 	public HeroSprite() {
 		super();
-		
+
 		texture( Dungeon.hero.heroClass.spritesheet() );
 		updateArmor();
 		
@@ -64,36 +65,65 @@
 	public void updateArmor() {
 
 		TextureFilm film = new TextureFilm( tiers(), Dungeon.hero.tier(), FRAME_WIDTH, FRAME_HEIGHT );
-		
-		idle = new Animation( 1, true );
-		idle.frames( film, 0, 0, 0, 1, 0, 0, 1, 1 );
-		
-		run = new Animation( RUN_FRAMERATE, true );
-		run.frames( film, 2, 3, 4, 5, 6, 7 );
-		
-		die = new Animation( 20, false );
-		die.frames( film, 8, 9, 10, 11, 12, 11 );
-		
-		attack = new Animation( 15, false );
-		attack.frames( film, 13, 14, 15, 0 );
-		
-		zap = attack.clone();
-		
-		operate = new Animation( 8, false );
-		operate.frames( film, 16, 17, 16, 17 );
-		
-		fly = new Animation( 1, true );
-		fly.frames( film, 18 );
+
+		if (Dungeon.hero.heroClass == HeroClass.DWARF) {
+
+			idle = new Animation(2, true);
+			idle.frames(film, 0, 0, 0, 1, 0, 0, 1, 1);
+
+			die = new Animation(20, false);
+			die.frames(film, 7, 8, 8, 9, 9, 10);
+
+			attack = new Animation(15, false);
+			attack.frames(film, 11, 12);
+
+			kick = new Animation(15, false);
+			kick.frames(film, 13, 14, 13);
+
+			zap = new Animation(15, false);
+			zap.frames(film, 15, 16, 16, 0);
+
+			fly = new Animation(1, true);
+			fly.frames(film, 7);
+
+			operate = new Animation(8, false);
+			operate.frames(film, 17, 18, 17, 18);
+
+			read = new Animation(20, false);
+			read.frames(film, 19, 20, 20, 20, 20, 20, 20, 20, 20, 19);
+
+		} else {
+
+			idle = new Animation(1, true);
+			idle.frames(film, 0, 0, 0, 1, 0, 0, 1, 1);
+
+			die = new Animation(20, false);
+			die.frames(film, 8, 9, 10, 11, 12, 11);
+
+			attack = new Animation(15, false);
+			attack.frames(film, 13, 14, 15, 0);
+
+			zap = attack.clone();
+
+			fly = new Animation(1, true);
+			fly.frames(film, 18);
+
+			operate = new Animation(8, false);
+			operate.frames(film, 16, 17, 16, 17);
 
-		read = new Animation( 20, false );
-		read.frames( film, 19, 20, 20, 20, 20, 20, 20, 20, 20, 19 );
-		
+			read = new Animation(20, false);
+			read.frames(film, 19, 20, 20, 20, 20, 20, 20, 20, 20, 19);
+		}
+
+		run = new Animation(RUN_FRAMERATE, true);
+		run.frames(film, 2, 3, 4, 5, 6, 7);
+
 		if (Dungeon.hero.isAlive())
 			idle();
 		else
 			die();
 	}
-	
+
 	@Override
 	public void place( int p ) {
 		super.place( p );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ItemSpriteSheet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ItemSpriteSheet.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/ItemSpriteSheet.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -78,6 +78,8 @@
 	public static final int PETAL           = UNCOLLECTIBLE+2;
 	public static final int SANDBAG         = UNCOLLECTIBLE+3;
 	public static final int SPIRIT_ARROW    = UNCOLLECTIBLE+4;
+	// AddedPD : for proper image of spectral blades
+	public static final int SPECTRAL_BLADE  = UNCOLLECTIBLE+5;
 	
 	public static final int GUIDE_PAGE      = UNCOLLECTIBLE+6;
 	public static final int ALCH_PAGE       = UNCOLLECTIBLE+7;
@@ -90,7 +92,7 @@
 		assignItemRect(PETAL,       8,  8);
 		assignItemRect(SANDBAG,     10, 10);
 		assignItemRect(SPIRIT_ARROW,11, 11);
-		
+		assignItemRect(SPECTRAL_BLADE,14, 14);
 		assignItemRect(GUIDE_PAGE,  10, 11);
 		assignItemRect(ALCH_PAGE,   10, 11);
 		
@@ -188,14 +190,17 @@
 
 	private static final int WEP_TIER1      =                               xy(1, 7);   //8 slots
 	public static final int WORN_SHORTSWORD = WEP_TIER1+0;
-	public static final int CUDGEL          = WEP_TIER1+1;
+	public static final int DWARFARM		= WEP_TIER1+1;
 	public static final int GLOVES          = WEP_TIER1+2;
-	public static final int RAPIER          = WEP_TIER1+3;
+	public static final int CUDGEL			= WEP_TIER1+3;
+//	public static final int RAPIER          = WEP_TIER1+3;
 	public static final int DAGGER          = WEP_TIER1+4;
 	public static final int MAGES_STAFF     = WEP_TIER1+5;
 	static{
 		assignItemRect(WORN_SHORTSWORD, 13, 13);
+		assignItemRect(DWARFARM,	    13, 15);
 		assignItemRect(GLOVES,          12, 16);
+		assignItemRect(CUDGEL,			13, 13);
 		assignItemRect(DAGGER,          12, 13);
 		assignItemRect(MAGES_STAFF,     15, 16);
 	}
@@ -339,6 +344,8 @@
 	public static final int ARMOR_MAGE      = ARMOR+6;
 	public static final int ARMOR_ROGUE     = ARMOR+7;
 	public static final int ARMOR_HUNTRESS  = ARMOR+8;
+	public static final int ARMOR_CLERIC	= ARMOR+9;
+	public static final int ARMOR_DWARF		= ARMOR+10;
 	static{
 		assignItemRect(ARMOR_CLOTH,     15, 12);
 		assignItemRect(ARMOR_LEATHER,   14, 13);
@@ -349,6 +356,8 @@
 		assignItemRect(ARMOR_MAGE,      15, 15);
 		assignItemRect(ARMOR_ROGUE,     14, 12);
 		assignItemRect(ARMOR_HUNTRESS,  13, 15);
+		assignItemRect(ARMOR_CLERIC,	13, 12);
+		assignItemRect(ARMOR_DWARF,	 	15, 15);
 	}
 
 	                                                                                    //16 free slots
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MissileSprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MissileSprite.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/MissileSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,6 +23,7 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.armor.HuntressArmor;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.SpiritBow;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.Crossbow;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.Bolas;
@@ -101,6 +102,8 @@
 		ANGULAR_SPEEDS.put(Shuriken.class,      2160);
 		
 		ANGULAR_SPEEDS.put(TenguSprite.TenguShuriken.class,      2160);
+
+		ANGULAR_SPEEDS.put(HuntressArmor.SpectralBlade.class,      2160);
 	}
 
 	//TODO it might be nice to have a source and destination angle, to improve thrown weapon visuals
@@ -140,6 +143,9 @@
 		if (item instanceof Dart && Dungeon.hero.belongings.weapon instanceof Crossbow){
 			speed *= 3f;
 			
+		} else if (item instanceof HuntressArmor.SpectralBlade){
+			speed *= 1.2f;
+
 		} else if (item instanceof SpiritBow.SpiritArrow
 				|| item instanceof ScorpioSprite.ScorpioShot
 				|| item instanceof TenguSprite.TenguShuriken){
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NecroGolemSprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NecroGolemSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/NecroGolemSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,127 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.sprites;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Necrogolem;
+import com.shatteredpixel.shatteredpixeldungeon.effects.MagicMissile;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.watabou.noosa.TextureFilm;
+import com.watabou.noosa.audio.Sample;
+import com.watabou.utils.Callback;
+
+public class NecroGolemSprite extends MobSprite {
+
+	public NecroGolemSprite() {
+		super();
+
+		texture( Assets.NECROGOLEM );
+		transformGolem( 1 ); // 1 = guardian mode, 0 = sentry mode
+		idle();
+	}
+
+	@Override
+	public void link( Char ch ) {
+		super.link( ch );
+		add( State.NECROTIC );
+		transformGolem( ((Necrogolem)ch).golemTier);
+	}
+
+	public void transformGolem(int tier ) {
+
+	    if ( tier == 1 ) {
+            texture( Assets.NECROGOLEM );
+            TextureFilm frames = new TextureFilm( texture, 16, 16 );
+
+            idle = new Animation(4, true);
+            idle.frames(frames, 0, 1);
+
+            run = new Animation(12, true);
+            run.frames(frames, 2, 3, 4, 5);
+
+            attack = new Animation(10, false);
+            attack.frames(frames, 6, 7, 8);
+
+            die = new Animation(15, false);
+            die.frames(frames, 9, 10, 11, 12, 13);
+
+            play(idle);
+
+        } else if ( tier == 0 ) {
+            texture( Assets.NECROGOLEM );
+            TextureFilm frames = new TextureFilm( texture, 16, 16 );
+
+            idle = new Animation( 4, true );
+            idle.frames( frames, 16, 17 );
+
+            run = new Animation( 12, true );
+            run.frames( frames, 18, 19, 20, 21 );
+
+            attack = new Animation( 10, false );
+            attack.frames( frames, 22, 23, 24 );
+
+            die = new Animation( 15, false );
+            die.frames( frames, 25, 26, 27, 28, 29 );
+
+            play( idle );
+
+        }
+	}
+
+	@Override
+	public int blood() {
+		return 0x22EE66;
+	}
+
+	private int posToShoot;
+
+	@Override
+	public void attack( int cell ) {
+		if (((Necrogolem)ch).golemTier == 0) {
+			posToShoot = cell;
+		}
+		super.attack( cell );
+	}
+
+	@Override
+	public void onComplete( Animation anim ) {
+		if (anim == attack && ((Necrogolem)ch).golemTier == 0) {
+			Sample.INSTANCE.play( Assets.SND_ZAP );
+			MagicMissile.boltFromChar( parent,
+					MagicMissile.ELMO,
+					this,
+					posToShoot,
+					new Callback() {
+						@Override
+						public void call() {
+							ch.onAttackComplete();
+						}
+					} );
+
+			idle();
+
+		} else if (anim == die) {
+			emitter().burst( ElmoParticle.FACTORY, 3 );
+		} else super.onComplete( anim );
+	}
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WoundedDwarfSprite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WoundedDwarfSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/sprites/WoundedDwarfSprite.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,64 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.sprites;
+
+import com.shatteredpixel.shatteredpixeldungeon.Assets;
+import com.shatteredpixel.shatteredpixeldungeon.actors.Char;
+import com.shatteredpixel.shatteredpixeldungeon.effects.ShieldHalo;
+import com.shatteredpixel.shatteredpixeldungeon.effects.Speck;
+import com.shatteredpixel.shatteredpixeldungeon.effects.particles.ElmoParticle;
+import com.watabou.noosa.TextureFilm;
+import com.watabou.noosa.audio.Sample;
+
+public class WoundedDwarfSprite extends MobSprite {
+
+	public WoundedDwarfSprite() {
+		super();
+		
+		texture( Assets.DWARF_NPC );
+		
+		TextureFilm frames = new TextureFilm( texture, 12, 14 );
+		
+		idle = new Animation( 10, true );
+		idle.frames( frames, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 2, 1 );
+		
+		run = new Animation( 20, true );
+		run.frames( frames, 0 );
+		
+		die = new Animation( 20, false );
+		die.frames( frames, 0 );
+		
+		play( idle );
+	}
+	
+	@Override
+	public void die() {
+		super.die();
+
+		emitter().start( Speck.factory( Speck.HEALING ), 0.03f, 4 );
+
+		if (visible) {
+			Sample.INSTANCE.play( Assets.SND_DRINK );
+		}
+	}
+
+}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIndicator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIndicator.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/BuffIndicator.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -91,6 +91,14 @@
 	public static final int WELL_FED    = 43;
 	public static final int HEALING     = 44;
 	public static final int WEAPON      = 45;
+	// AddedPD
+	public static final int DEVOTION    = 46;
+	public static final int ZEALOT		= 47;
+	public static final int WINGS		= 48;
+	public static final int CREMATE		= 49;
+	public static final int BAPTIZED	= 50;
+	public static final int ECTOPLASM	= 51;
+	public static final int TRANSMUTE	= 52;
 
 	public static final int SIZE	= 7;
 	
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Icons.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Icons.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Icons.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -59,7 +59,9 @@
 	MAGE,
 	ROGUE,
 	HUNTRESS,
-	
+	CLERIC,
+	DWARF,
+
 	//main menu icons
 	ENTER,
 	GOLD,
@@ -67,6 +69,16 @@
 	BADGES,
 	CHANGES,
 	SHPX,
+	ADDED_PD,
+
+	// AddedPD : icons for cleric, +cleric_miracle.png
+	SMITE,
+	SMITE_AOE,
+	ZEALOT,
+	HOLY_WATER,
+	CREMATE,
+	BAPTIZE,
+	ENLIGHTEN,
 	
 	//misc icons
 	LIBGDX,
@@ -163,7 +175,13 @@
 		case HUNTRESS:
 			icon.frame( icon.texture.uvRect( 64, 48, 80, 64 ) );
 			break;
-		
+		case CLERIC:
+			icon.frame( icon.texture.uvRect( 80, 48, 93, 64 ) );
+			break;
+		case DWARF:
+			icon.frame( icon.texture.uvRect( 96, 48, 109, 63 ) );
+			break;
+
 		case ENTER:
 			icon.frame( icon.texture.uvRect( 0, 64, 17, 81 ) );
 			break;
@@ -182,7 +200,10 @@
 		case GOLD:
 			icon.frame( icon.texture.uvRect( 85, 64, 102, 80 ) );
 			break;
-		
+		case ADDED_PD:
+			icon.frame( icon.texture.uvRect( 105, 64, 121, 80 ) );
+			break;
+
 		case LIBGDX:
 			icon.frame( icon.texture.uvRect( 0, 81, 16, 94 ) );
 			break;
@@ -195,7 +216,35 @@
 		}
 		return icon;
 	}
-	
+
+	public static Image get_miracle( Icons type ) {
+		Image icon = new Image( Assets.MIRACLE );
+		switch (type) {
+			case SMITE:
+				icon.frame( icon.texture.uvRect( 0, 0, 16, 16 ) );
+				break;
+			case SMITE_AOE:
+				icon.frame( icon.texture.uvRect( 17, 0, 33, 16 ) );
+				break;
+			case ZEALOT:
+				icon.frame( icon.texture.uvRect( 34, 0, 50, 16 ) );
+				break;
+			case HOLY_WATER:
+				icon.frame( icon.texture.uvRect( 51, 0, 67, 16 ) );
+				break;
+			case CREMATE:
+				icon.frame( icon.texture.uvRect( 68, 0, 84, 16 ) );
+				break;
+			case BAPTIZE:
+				icon.frame( icon.texture.uvRect( 85, 0, 101, 16 ) );
+				break;
+			case ENLIGHTEN:
+				icon.frame( icon.texture.uvRect( 102, 0, 117, 16 ) );
+				break;
+		}
+		return icon;
+	}
+
 	public static Image get( HeroClass cl ) {
 		switch (cl) {
 		case WARRIOR:
@@ -206,6 +255,10 @@
 			return get( ROGUE );
 		case HUNTRESS:
 			return get( HUNTRESS );
+		case CLERIC:
+			return get( CLERIC );
+		case DWARF:
+			return get( DWARF );
 		default:
 			return null;
 		}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Window.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/Window.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -46,6 +46,7 @@
 	
 	public static final int TITLE_COLOR = 0xFFFF44;
 	public static final int SHPX_COLOR = 0x33BB33;
+	public static final int ADDED_PD_COLOR = 0x0055FF;
 	
 	public Window() {
 		this( 0, 0, 0, Chrome.get( Chrome.Type.WINDOW ) );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_4_X_Changes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_4_X_Changes.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_4_X_Changes.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -72,7 +72,7 @@
 				"_-_ Flail max damage increased by ~15%\n" +
 				"_-_ Wand of Frost damage reduction increased from 5% per turn of chill to 7.5%\n" +
 				"_-_ Ring of Furor speed bonus reduced by ~15% for slow weapons, ~0% for fast weapons\n" +
-				"_-_ Reduced sacrificial curse bleed by ~33%\n" +
+				"_-_ Reduced sacrificial curse fully_charged by ~33%\n" +
 				"_-_ Reworked glyph of brimstone, now grants shielding instead of healing\n" +
 				"_-_ Reworked glyph of stone, now reduces speed in doorways\n" +
 				"_-_ Thrown potions now trigger traps and plants"));
@@ -170,7 +170,7 @@
 				"_-_ Keys now exist in the journal, not inventory\n" +
 				"_-_ Improved donator menu button visuals\n" +
 				"_-_ Increased the efficiency of data storage\n" +
-				"_-_ Chasms now deal less damage, but bleed\n" +
+				"_-_ Chasms now deal less damage, but fully_charged\n" +
 				"_-_ Many shop prices adjusted\n" +
 				"_-_ Pirahna rooms no longer give cursed gear"));
 	}
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_6_X_Changes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_6_X_Changes.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_6_X_Changes.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -392,7 +392,7 @@
 				"The game's resistance system has been totally overhauled, to allow for more flexibility and consistency.\n\n" +
 				"Previously, if a character was resistant to something, its effect would be reduced by a random amount between 0% and 100%.\n\n" +
 				"Now, resistances are much less random, applying a specific reduction to harmful effects. Currently all resistances are 50%.\n\n" +
-				"Resistances are also now much more consistent between different creatures. e.g. all non-organic enemies are now immune to bleed.\n\n" +
+				"Resistances are also now much more consistent between different creatures. e.g. all non-organic enemies are now immune to fully_charged.\n\n" +
 				"A few things have been adjusted due to this:\n\n" +
 				"_-_ The Rotting Fist is now immune to paralysis.\n" +
 				"_-_ Psionic blast now deals 100% of current HP, instead of 100% of max HP.\n" +
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_7_X_Changes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_7_X_Changes.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/ui/changelist/v0_7_X_Changes.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -23,6 +23,7 @@
 
 import com.shatteredpixel.shatteredpixeldungeon.Assets;
 import com.shatteredpixel.shatteredpixeldungeon.Badges;
+import com.shatteredpixel.shatteredpixeldungeon.SPDSettings;
 import com.shatteredpixel.shatteredpixeldungeon.effects.BadgeBanner;
 import com.shatteredpixel.shatteredpixeldungeon.items.Honeypot;
 import com.shatteredpixel.shatteredpixeldungeon.items.artifacts.AlchemistsToolkit;
@@ -44,6 +45,7 @@
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.Shuriken;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.Tomahawk;
 import com.shatteredpixel.shatteredpixeldungeon.items.weapon.missiles.darts.Dart;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Languages;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.scenes.ChangesScene;
 import com.shatteredpixel.shatteredpixeldungeon.sprites.CharSprite;
@@ -58,6 +60,7 @@
 public class v0_7_X_Changes {
 	
 	public static void addAllChanges( ArrayList<ChangeInfo> changeInfos ){
+		add_v_added_0_1_0_Changes(changeInfos);
 		add_v0_7_5_Changes(changeInfos);
 		add_v0_7_4_Changes(changeInfos);
 		add_v0_7_3_Changes(changeInfos);
@@ -65,6 +68,226 @@
 		add_v0_7_1_Changes(changeInfos);
 		add_v0_7_0_Changes(changeInfos);
 	}
+
+	public static void add_v_added_0_1_0_Changes( ArrayList<ChangeInfo> changeInfos ){
+			// default : korean
+			ChangeInfo changes = new ChangeInfo("AddedPD_v0.1.0", true, "");
+			changes.hardlight(0x78DFFF);
+			changeInfos.add(changes);
+
+		if (SPDSettings.language() == Languages.KOREAN) {
+			changes = new ChangeInfo("사제", false, null);
+			changes.hardlight(0xFFFFFF);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.CLERIC, 0, 15, 12, 15), "사제",
+					"사제는 신성한 기적을 다룹니다. 이 컨셉은 고전적인 '신성 마법사' 캐릭터들과 00-Evan의 블로그 포스트로부터 영감을 얻었습니다. 사제를 해금하려면 한 게임을 지상으로 돌아감으로서 끝내야 합니다.\n\n" +
+							"사제는 _곤봉_을 갖고 시작합니다. 곤봉은 _명중률이 높은_ 무기로, 다른 원거리 무기 없이 시작하는 초반을 헤쳐나가는 데 도움이 될 겁니다.\n\n" +
+							"또한 사제는 축복받지 않은 _앙크_ 하나를 갖고 시작합니다. 이 여분의 앙크는 아무런 가방 없이 시작하는 것에 대한 일종의 보상입니다!\n\n" +
+							"사제는 _마법 막대와 주문 결정_을 거부하기로 맹세했습니다. 지팡이 깎는 노인의 보상도 경험의 물약 하나로 대체됩니다.\n\n" +
+							"대신, 사제는 _빛의 신앙_에 헌신하여 어둠으로 가득한 던전에 빛의 힘을 불러낼 수 있습니다!"));
+
+			changes.addButton(new ChangeButton(Icons.get(Icons.CLERIC), "빛의 신앙",
+					"사제는 '헌신'을 소모하여 '기적'을 일으킵니다. 헌신은 적을 쓰러뜨려 경험치를 얻거나 레벨업할 때 얻게 됩니다. 사제는 세 종류의 기적을 배운 채로 시작합니다:\n\n" +
+							"_강타_ - 헌신 15 소모\n" +
+							"시야 안의 적 하나에게 저항할 수 없는 피해를 줍니다. 피해량은 사제의 레벨에 비례하며, 사악한 적에게 더 큰 피해를 줍니다.\n\n" +
+							"_열광의 기도_ - 헌신 30 소모\n" +
+							"사제와 아군의 체력을 재생합니다. 재생의 효과는 사제가 얼마나 위기에 처했는지에 따르므로, 쉴틈없는 정화야말로 답입니다!\n\n" +
+							"_축성_ - 헌신 45 소모\n" +
+							"무기가 갑옷 하나를 골라 빛의 힘을 주입합니다. 모든 저주와 마법 부여를 제거하고 고유한 효과를 부여합니다. 이는 돌이킬 수 없으며, 축성된 물건은 영웅의 유해로부터 얻을 수 없습니다.\n\n" +
+							"세부 전직을 고르면, 일부 기적이 강화되거나 새로운 기적을 배웁니다."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.CLERIC, 0, 90, 12, 15), "세부 전직",
+					"_성전사_ 는 사악한 마법과 맞서 싸움으로써 헌신합니다. 축성된 무기와 강타가 마법을 쓰는 적을 실명시키며, 열광의 기도가 신비한 갑옷 효과와 아드레날린을 제공합니다.\n\n" +
+							"_신학자_는 빛의 원리를 배워나감으로써 헌신합니다. 헌신을 더욱 빠르게 얻고, 강타한 대상 주변에도 피해를 줍니다. 또한 '홍수의 은총', '화장터'를 새로운 기적으로 배우게 됩니다.\n\n" +
+							"_대속자_는 저 길잃은 것들 중에서 회개할 가능성이 있는 이들을 도우며 헌신합니다. 아군에게 강타로 치유 효과를 줍니다. 또한 '세례'로 적을 아군으로 교화하여, 함께 경험을 쌓을 수 있습니다."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_CLERIC, new ItemSprite.Glowing(0xFFFFFF)), "전설 갑옷",
+					"사제의 전설 갑옷은 '빛의 대변자' 입니다.\n\n" +
+							"빛의 대변자는 _광휘_ 능력을 사용할 수 있습니다. 광휘는 사제의 시야 안의 모든 적을 실명시키고 밀쳐냅니다!"));
+
+			changes = new ChangeInfo("드워프 생존자", false, null);
+			changes.hardlight(0xFFC65A);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.DWARFHERO, 0, 15, 12, 15), "드워프 생존자",
+					"온전한 정신을 지닌 마지막 드워프. 기계화된 정예 군인입니다. 악마들과의 옛 전쟁으로부터 살아남은 참전용사로, 드워프 왕의 폭정으로부터 가까스로 탈출했습니다. 드워프 생존자를 해금하려면 그를 찾아내어 구출해내야 합니다...\n\n" +
+							"드워프 생존자는 _기계화된 팔_을 무기로 사용합니다. 그의 팔은 _빠른 공격속도_와 _추가 방어력_을 지녔지만 다른 무기를 집어들 순 없습니다. 기계화된 팔을 강화하면 추가 방어력도 증가합니다.\n\n" +
+							"드워프 생존자는 원거리 무기 대신 5개의 _충격의 돌_을 갖고 시작합니다. 또한, 그는 (충격의 돌을 포함하여) 모든 종류의 전기 충격으로부터 잠시동안 _가속_되며, 전기 충격으로 인한 마비로부터 면역입니다.\n\n" +
+							"드워프 생존자는 아무런 가방 없이 시작합니다. 기계화된 팔 덕분에 무기를 모아둘 필요가 덜하긴 하지만요."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.DWARFHERO, 0, 90, 12, 15), "세부 전직",
+					"_천둥기수_는 드워프 군대의 정예병으로, 기계화된 팔을 개량하여 공격할 떄마다 강력한 연쇄 번개를 충전합니다. 충전이 4번째 되는 순간, 주변에 있는 적의 수만큼 연쇄 번개가 뻗어나가며 잠깐동안 가속 효과를 받습니다.\n\n" +
+							"_수도승_은 서서히 집중을 쌓습니다. 집중은 이동할 때 더 빠르게 쌓이며, 집중을 발동하면 잠시동안 적의 공격을 완전히 회피합니다. 집중으로 회피에 성공하면 빈틈을 노리고 반격하여 적을 기절시킬 수 있습니다.\n\n" +
+							"_사령장인_은 적을 쓰러뜨려 경험치를 얻을 때, 적으로부터 영혼 잔여물을 추출하여 사령공학 골렘을 작동시키고 수리합니다. 사령공학 골렘은 당신 주변에서만 활동 가능하며, 수호자 형상과 감시자 형상을 전환할 수 있습니다."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_DWARF, new ItemSprite.Glowing(0xFFC65A)), "전설 갑옷",
+					"드워프 생존자의 전설 갑옷은 _드워프제 동력 갑옷_입니다. 경이로운 드워프 기술로 만들어져 마치 착용형 골렘같은 외형이죠.\n\n" +
+							"드워프제 동력 갑옷은 _동력 과열_ 능력을 사용할 수 있습니다. 동력이 과열된 상태에선 모든 행동이 2배로 빨라집니다!"));
+
+			changes = new ChangeInfo("3번째 세부 전직", false, null);
+			changes.hardlight(Window.TITLE_COLOR);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.WARRIOR, 0, 90, 12, 15), "인장기사",
+					"_인장기사_는 부서진 인장의 힘을 일깨웠습니다! 부서진 인장이 방어막을 2배 빠르게 재생하고, 갑옷의 상형문자까지 옮길 수 있습니다.\n\n" +
+							"또한 인장이 붙은 갑옷의 상형문자가 강화로 지워지지 않도록 보존 가능하며, 종류에 따라 특수한 효과를 제공합니다:\n\n" +
+							"_애정_ - 매혹된 적 공격시 방어막 회복\n" +
+							"_항마_ - 흡수된 마법 피해로 반격 가능\n" +
+							"_유황불_ - 빙결과 얼어붙음에도 면역\n" +
+							"_위장_ - 기습 성공시 방어막 회복\n" +
+							"_속박_ - 발동시킨 적 마비\n" +
+							"_흐름_ - 물 위에서 공격속도 +20%\n" +
+							"_흐릿함_ - 연막 면역과 함께 연막 생성\n" +
+							"_전위_ - 받은 피해만큼 적의 방어, 회피 관통\n" +
+							"_반발_ - 밀쳐낼 때마다 지구력 효과\n" +
+							"_바위_ - 피격시 나무피부 효과\n" +
+							"_신속함_ - 인접한 적 피격시 지구력 효과\n" +
+							"_가시_ - 출혈된 적 공격시 방어막 회복\n" +
+							"_점성_ - 공격 성공시 지연된 피해 감소"));
+
+			changes.addButton(new ChangeButton(new Image(Assets.MAGE, 0, 90, 12, 15), "변환술사",
+					"_변환술사_는 지팡이에 혼돈의 힘을 주입합니다. 충전량이 모두 소진된 지팡이를 시전하면, 충전량 하나와 함께 잠시동안 충전 효과를 받으며 지팡이의 마법이 변환됩니다!\n\n" +
+							"그러나 지팡이의 강화 수치가 높을수록, 혼돈의 힘이 잠시 잔류하며 지팡이의 마법을 뒤틀어놓습니다. 또한 저주받은 지팡이는 이미 너무 많은 혼돈의 힘이 있기에 변환시킬 수 없습니다."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.ROGUE, 0, 90, 12, 15), "밤손님",
+					"_밤손님_은 도둑질의 달인입니다. 닫혀있건 잠겨있건 문 너머를 바라볼 수 있고, 적을 쓰러뜨릴 때마다 주변의 지형으로부터 비밀을 밝혀냅니다.\n\n" +
+							"만약 밤손님이 함정을 밟게 되면, 함정이 발동하기 직전에 초인적인 반사신경으로 해체해버립니다! 이 '반사신경'을 다시 발휘하려면 20턴의 대기 시간이 필요합니다."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.HUNTRESS, 0, 90, 12, 15), "영혼길잡이",
+					"_영혼길잡이_는 사냥꾼의 적 감지 능력과 전설 갑옷의 유령 칼날로부터 영감을 얻어 만들어졌습니다. 영적인 감각을 단련함으로써, 2배로 넓어진 범위에서 적을 감지하게 됩니다.\n\n" +
+							"영혼의 활로 공격에 성공하면, 대상으로부터 '유령 폭발'을 일으키게 됩니다. 이 폭발은 동일한 피해와 마법 부여 효과를 일으키며, 오직 적에게만 영향을 줍니다."));
+
+			changes = new ChangeInfo(Messages.get(ChangesScene.class, "buffs"), false, null);
+			changes.hardlight(CharSprite.POSITIVE);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.WARRIOR, 0, 90, 12, 15), "검투사와 광전사",
+					"_검투사_의 가르기로 유지 가능한 연속 타격의 시간이 12턴에서 20턴으로 증가했습니다. 연속 타격 수치가 초기화되는 시간도 4턴에서 6턴으로 증가했습니다.\n" +
+							"_-_ 후려치기를 제외한 필살기는 사실 없는 거나 마찬가지였습니다. 적을 떼거지로 만나지 않는 이상 4 이상의 연속 타격 수치를 만드는 것부터가 굉장히 까다롭고, 제대로 쓰려면 짜증나기까지 하니까요! 그러나 이제 이를 좀 더 자주, 무엇보다 실용적으로 사용할 수 있을 겁니다.\n\n" +
+							"_광전사_ 는 분노에 비례하여 '피해 저항'을 얻게 됩니다. 최대 100% 분노에서 받는 모든 피해의 20%를 줄여줍니다.\n" +
+							"_-_ 우리 모두 광전사가 분노를 유지하는 일이 극단적으로 어렵다는 걸 알고 있습니다! 이것이 그동안 '전사에겐 세부 전직이 없어요' 라는 농담이 나온 이유죠. 그러나 추가 피해 저항은 낮은 체력을 유지하기로 선택할 때, 그런 선택을 할만큼 충분한 이점으로 작용할 겁니다."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_MAGE), "마법사의 로브",
+					"마법사의 전설 갑옷 능력은 이제 마법사의 세부 전직에 따라 추가 효과를 일으킵니다.\n" +
+							"_-_ _전투 마법사_는 대지 융해로 영향을 준 적의 수만큼 즉시 충전량을 얻습니다.\n" +
+							"_-_ _흑마법사_는 대지 융해로 영향을 준 모든 적에게 영혼의 낙인을 찍습니다."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.WAND_TRANSFUSION), "수혈의 마법 막대",
+					"이식의 마법 막대가 보다 원래 뜻에 가까운 '수혈의 마법 막대' 로 번역이 변경되었습니다.\n\n" +
+							"전투 마법사가 수혈의 마법 막대를 융합한 지팡이로 공격하면, 이전보다 높은 확률로 '공짜 수혈' 효과를 얻습니다. 이는 버프창에 '생명력 충전됨' 버프로 표시됩니다."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARTIFACT_ROSE1), "슬픈 유령",
+					"이제 장미로부터 불러낸 슬픈 유령과 시야를 공유합니다."));
+		}
+
+		else { // for ENG
+			changes = new ChangeInfo("The Cleric", false, null);
+			changes.hardlight(0xFFFFFF);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.CLERIC, 0, 15, 12, 15), "The Cleric",
+					"The Cleric is the 'Divine Caster', concepts from old-classic divine caster class and inspired by the DeVBlog of 00-Evan. Unlocked when you ends a run return to the surface.\n\n" +
+							"The Cleric starts with the _cudgel_, which only had its name in the source. The cudgel is _accurate_ weapon so helps the early-game without starting ranged weapon.\n\n" +
+							"Also, the cleric starts with an unblessed _ankh_. This extra ankh is given as a reward for starting without any bag.\n\n" +
+							"She had an oath to _reject magic from wands and spell crystals._ The Wandmaker's reward also changes into a potion of experience.\n\n" +
+							"Instead, she devoted to _the faith of the light_, and call down the power of the brightness into the dungeon!"));
+
+			changes.addButton(new ChangeButton(Icons.get(Icons.CLERIC), "The faith of the light",
+					"The Cleric build up 'devotion' rank, which spends using 'miracle'. The devotion rank increases when defeats enemy with gain experience or level up. The Cleric starts with three miracles:\n\n" +
+							"_Smite_ - costs 15 devotion\n" +
+							"Selects an enemy in cleric's sight, deals irresistible damage. Damage depending on cleric's level, and deals more damage to evil enemies.\n\n" +
+							"_Pray of zealot_ - costs 30 devotion\n" +
+							"Gain regeneration buff to cleric and allies. The amount of regeneration depending on the danger of the situation. If you wants to regen health, restless purge is an answer!\n\n" +
+							"_Enlightenment_ - costs 45 devotion\n" +
+							"Choose an weapon/armor for imbued by light. Removes all kinds of curse and enchantment/glyph and gives unique effects. Enlightened items can't revert and never drops from Hero's remain.\n\n" +
+							"When you choose subclass, some miracles will change or learn new miracles."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.CLERIC, 0, 90, 12, 15), "The Cleric subclass",
+					"_The Crusader_ devotes by fighting against dark magic. Enlightened weapon or smite will blinds magic-using enemies. Also the Pray of zealot gains arcane armor and adrenaline.\n\n" +
+							"_The Scholar_ devotes by learning about the principle of light. The devotion gains faster, and the smite deals AoE damage. Also adds 'Holy Flood', 'Crematorium' miracle on the miracles list.\n\n" +
+							"_The Redeemer_ devotes by saving some of those stray beings can be reclaimed. Smite ally will gain healing buff. Also Adds 'Baptize' miracle to reclaim an enemy, which is able to level up."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_CLERIC, new ItemSprite.Glowing(0xFFFFFF)), "Epic armor",
+					"The Cleirc's epic armor is named 'Light's Advoate'.\n\n" +
+							"The Light's Advocate has an ability called _'Emit Radiance'_: push all enemies in your sight and blind them shortly."));
+
+			changes = new ChangeInfo("The Dwarf Survivor", false, null);
+			changes.hardlight(0xFFC65A);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.DWARFHERO, 0, 15, 12, 15), "The Dwarf Survivor",
+					"The Last Dwarf Standing. Mechanized veteran soldier, survived from the old war against the demons and tyranny of the dwarf king. Unlocked when you rescue him from the hidden place...\n\n" +
+							"The Dwarf Survivor use his _mechanized arms_ as weapon. His arms are _fast_ and _durable_ weapon, but cannot wield any other weapon. Upgrade them will _increase those durability_.\n\n" +
+							"Instead of ranged weapon, the Dwarf Survivor starts with five _stone of shock_. And including stone of shock, he is _hastened_ for a while from all kinds of electric shocks. It means he is fully immune to electro-paralyze.\n\n" +
+							"The Dwarf Survivor starts without bag. Fortunately, he needs a little less to store another weapon thanks to his arms."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.DWARFHERO, 0, 90, 12, 15), "The Dwarf subclass",
+					"_The Thunderbrigner_ reforged his arms, allow to blast chain lightning when thunder charges reach at 4. Successful attack charges thunder, and blast lighting will hasten you.\n\n" +
+							"_The Monk_ builds the 'focus' over time, builds faster while moving. The focus allow him to dodge all attacks, and to perform paralyzing blow after focus-dodging.\n\n" +
+							"_The Necrosmith_ extracts ectoplasm from worthy enemies. These souls are consumed as a fuel for the necroforged golem. His golem can be healed by consume ectoplasm, and transform between guaridan or sentry form."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_DWARF, new ItemSprite.Glowing(0xFFC65A)), "Epic armor",
+					"The Dwarf Survivor's epic armor is 'Dwarven Power Armor'. Made by wondrous dwarven technology, this armor looks like mobile golem.\n\n" +
+							"The Dwarven Power Armor has an ability to _'Overheat'_: All actions are twice as fast in a short time."));
+
+			changes = new ChangeInfo("3rd subcalsses", false, null);
+			changes.hardlight(Window.TITLE_COLOR);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.WARRIOR, 0, 90, 12, 15), "The Sealknight",
+					"_The Sealknight_ awakes power of the broken seal! His seal regenerates shields as twice as faster, and can also transfer glyph.\n\n" +
+							"Also, the glyph on the seal-affixed armor can be preserved from upgrade scrolls(or choose erase glyph), and gain additional effects:\n\n" +
+							"_affection_ - gain shield by hit charmed enemy\n" +
+							"_antimagic_ - counter-zap by absorbed damage\n" +
+							"_brimstone_ - also immune to chill and frost\n" +
+							"_camouflage_ - gain shield by surprise attack\n" +
+							"_entanglement_ - stun enemy which activates armor\n" +
+							"_flow_ - +20% faster attack on the water\n" +
+							"_obfuscation_ - emits and immune smoke screen\n" +
+							"_potential_ - infuse attack by damage taken to bypass armor\n" +
+							"_repulsion_ - gain stamina when pushing enemy\n" +
+							"_stoen_ - gain barkskin when attacked\n" +
+							"_swift_ - gain stamina when attacked nearby enemy\n" +
+							"_thorns_ - gain shield by hit bleeding enemy\n" +
+							"_viscosity_ - reduce deferred damage by hit enemy"));
+
+			changes.addButton(new ChangeButton(new Image(Assets.MAGE, 0, 90, 12, 15), "Transmuter",
+					"_The Transmuter_ infuse his staff with chaotic energy. Zapping the empty charged staff, transmuter gain 1 charge and recharging buff, and transmute the magic of staff!\n\n" +
+							"But depend on the upgrades, the more chaotic energy lasts to distort maigc. Also the cursed staff can't transmute because its already filled by chaotic energy."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.ROGUE, 0, 90, 12, 15), "The Burglar",
+					"_The Burglar_ is master of thievery. He can see through doors(even locked), and detects area from defeated enemy.\n\n" +
+							"When the burglar steps on a trap, reflexively disarms just before it activates! This reflex needs 20 turns for cooldown."));
+
+			changes.addButton(new ChangeButton(new Image(Assets.HUNTRESS, 0, 90, 12, 15), "The Spiritwalker",
+					"_The Spiritwalker_, inspired by detect perk and spectral blades. She trained her spiritual sense, now detects enemies from wider area.\n\n" +
+							"The spirit bow will cause 'spectral burst' around your target. This explosion has the equal damage and enchantments, and only deals damage to enemy."));
+
+			changes = new ChangeInfo(Messages.get(ChangesScene.class, "buffs"), false, null);
+			changes.hardlight(CharSprite.POSITIVE);
+			changeInfos.add(changes);
+
+			changes.addButton(new ChangeButton(new Image(Assets.WARRIOR, 0, 90, 12, 15), "The Gladiator and the Berseker",
+					"_The Gladiator_'s Cleave finisher extends combo by 20 turn (from 12 turn), and time to reset combo extends by 6 turn (from 4 turn).\n" +
+							"_-_ Except Clobber, many finishers require more than 4 combo, were virtually absent. Because unless you've encountered hoard, you won't be able to maintain combo. But now you can use them more often, more practically.\n\n" +
+							"_The Berserker_ has bonus 'damage resistance' from rage, maximum at 100% rage with reduce all damage taken by 20%.\n" +
+							"_-_ Everyone knows his rage is extremely unmaintainable! This is why the joke that 'warrior has no subclass' came out. Bonus DR is worthy boon when you choose to take a risk for maintain rage."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_MAGE), "Mage robe",
+					"The Mage's epic armor has special effects by subclass.\n" +
+							"_-_ _The Battlemage_ recharges immediately depends on the number of enemies affected by Molten Earth.\n" +
+							"_-_ _The Warlock_ marks souls of unmarked enemies affected by Molten Earth for a short time."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.WAND_TRANSFUSION), "Wand of transfusion",
+					"When the battle mage attacks with his staff that fuses blood transfusion, it has a higher chance of getting a 'free transfusion' effect.\n" +
+							"This is indicated by a 'Health Charged' buff in the buff window."));
+
+			changes.addButton(new ChangeButton(new ItemSprite(ItemSpriteSheet.ARTIFACT_ROSE1), "Sad Ghost",
+					"You can now share vision with the sad ghost."));
+		}
+
+	}
 	
 	public static void add_v0_7_5_Changes( ArrayList<ChangeInfo> changeInfos ){
 		ChangeInfo changes = new ChangeInfo("v0.7.5", true, "");
@@ -373,7 +596,7 @@
 				"_-_ Freerunner bonus evasion reduced by 20%."));
 
 		changes.addButton( new ChangeButton(new ItemSprite(ItemSpriteSheet.ARMOR_MAIL, new ItemSprite.Glowing(0x88EEFF)), "Glyph Nerfs",
-				"_-_ Glyph of Thorns bleed amount reduced to 4+lvl from 4+2*lvl, proc rate increased.\n\n" +
+				"_-_ Glyph of Thorns fully charged amount reduced to 4+lvl from 4+2*lvl, proc rate increased.\n\n" +
 				"_-_ Glyph of Antimagic base damage reduction reduced to 0-4 from 2-4.\n\n" +
 				"_-_ Glyph of Brimstone shield generation removed. The glyph now only protects the user from fire and does not also grant shielding when the user is aflame."));
 
@@ -491,7 +714,7 @@
 		changes.addButton( new ChangeButton(new Tomahawk(),
 				"The Tomahawk has been adjusted to make its damage more upfront, but also to reduce its extreme damage scaling with upgrades.\n\n" +
 				"_-_ Tomahawk damage scaling increased to 2-4 per level, up from 2-2\n" +
-				"_-_ Tomahawk bleed damage now starts at 60% of damage, down from 100%"));
+				"_-_ Tomahawk fully_charged damage now starts at 60% of damage, down from 100%"));
 		
 		changes.addButton( new ChangeButton( new Image(Assets.WARRIOR, 0, 15, 12, 15), "Warrior Nerfs",
 				"Warrior shielding regeneration scaling reduced. It is now a flat 1 shield every 30 turns. This is a very slight buff to the earlygame, and a significant nerf to the lategame.\n\n" +
@@ -768,7 +991,7 @@
 				"_-_ damage at 2/3 charges increased by ~15%"));
 		
 		changes.addButton( new ChangeButton( new ItemSprite(ItemSpriteSheet.ARMOR_LEATHER, new ItemSprite.Glowing(0x222222)), "Other Buffs",
-				"_-_ vorpal enchant bleed reduced by 20%\n\n" +
+				"_-_ vorpal enchant fully_charged reduced by 20%\n\n" +
 				"_-_ glyph of potential wand charge bonus increased by 20%\n\n" +
 				"_-_ glyph of stone evasion conversion efficiency increased to 75% from 60%"));
 		
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseWay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseWay.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndChooseWay.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -36,7 +36,7 @@
 	private static final int BTN_HEIGHT	= 18;
 	private static final float GAP		= 2;
 	
-	public WndChooseWay( final TomeOfMastery tome, final HeroSubClass way1, final HeroSubClass way2 ) {
+	public WndChooseWay( final TomeOfMastery tome, final HeroSubClass way1, final HeroSubClass way2, final HeroSubClass way3 ) {
 		
 		super();
 
@@ -47,7 +47,7 @@
 		add( titlebar );
 
 		RenderedTextBlock hl = PixelScene.renderTextBlock( 6 );
-		hl.text( way1.desc() + "\n\n" + way2.desc() + "\n\n" + Messages.get(this, "message"), WIDTH );
+		hl.text( way1.desc() + "\n\n" + way2.desc() + "\n\n" + way3.desc() + "\n\n" + Messages.get(this, "message"), WIDTH );
 		hl.setPos( titlebar.left(), titlebar.bottom() + GAP );
 		add( hl );
 		
@@ -70,6 +70,16 @@
 		};
 		btnWay2.setRect( btnWay1.right() + GAP, btnWay1.top(), btnWay1.width(), BTN_HEIGHT );
 		add( btnWay2 );
+
+		RedButton btnWay3 = new RedButton( way3.title().toUpperCase() ) {
+			@Override
+			protected void onClick() {
+				hide();
+				tome.choose( way3 );
+			}
+		};
+		btnWay3.setRect( 0, btnWay2.bottom() + GAP, btnWay1.width(), BTN_HEIGHT );
+		add( btnWay3 );
 		
 		RedButton btnCancel = new RedButton( Messages.get(this, "cancel") ) {
 			@Override
@@ -77,7 +87,7 @@
 				hide();
 			}
 		};
-		btnCancel.setRect( 0, btnWay2.bottom() + GAP, WIDTH, BTN_HEIGHT );
+		btnCancel.setRect( btnWay3.right() + GAP, btnWay2.bottom() + GAP, btnWay1.width(), BTN_HEIGHT );
 		add( btnCancel );
 		
 		resize( WIDTH, (int)btnCancel.bottom() );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndClass.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndClass.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -142,16 +142,22 @@
 			String message = null;
 			switch (cl) {
 				case WARRIOR:
-					message = HeroSubClass.GLADIATOR.desc() + "\n\n" + HeroSubClass.BERSERKER.desc();
+					message = HeroSubClass.GLADIATOR.desc() + "\n\n" + HeroSubClass.BERSERKER.desc() + "\n\n" + HeroSubClass.SEALKNIGHT.desc();
 					break;
 				case MAGE:
-					message = HeroSubClass.BATTLEMAGE.desc() + "\n\n" + HeroSubClass.WARLOCK.desc();
+					message = HeroSubClass.BATTLEMAGE.desc() + "\n\n" + HeroSubClass.WARLOCK.desc() + "\n\n" + HeroSubClass.TRANSMUTER.desc();
 					break;
 				case ROGUE:
-					message = HeroSubClass.FREERUNNER.desc() + "\n\n" + HeroSubClass.ASSASSIN.desc();
+					message = HeroSubClass.FREERUNNER.desc() + "\n\n" + HeroSubClass.ASSASSIN.desc() + "\n\n" + HeroSubClass.BURGLAR.desc();
 					break;
 				case HUNTRESS:
-					message = HeroSubClass.SNIPER.desc() + "\n\n" + HeroSubClass.WARDEN.desc();
+					message = HeroSubClass.SNIPER.desc() + "\n\n" + HeroSubClass.WARDEN.desc() + "\n\n" + HeroSubClass.SPIRITWALKER.desc();
+					break;
+				case CLERIC:
+					message = HeroSubClass.CRUSADER.desc() + "\n\n" + HeroSubClass.SCHOLAR.desc() + "\n\n" + HeroSubClass.REDEEMER.desc();
+					break;
+				case DWARF:
+					message = HeroSubClass.THUNDERBRINGER.desc() + "\n\n" + HeroSubClass.MONK.desc() + "\n\n" + HeroSubClass.NECROSMITH.desc();
 					break;
 			}
 
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndStartGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndStartGame.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndStartGame.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -51,7 +51,7 @@
 
 public class WndStartGame extends Window {
 	
-	private static final int WIDTH    = 120;
+	private static final int WIDTH    = 124;
 	private static final int HEIGHT   = 140;
 
 	public WndStartGame(final int slot){
@@ -65,7 +65,7 @@
 		PixelScene.align(title);
 		add(title);
 		
-		float heroBtnSpacing = (WIDTH - 4*HeroBtn.WIDTH)/5f;
+		float heroBtnSpacing = (WIDTH - 6*HeroBtn.WIDTH)/6f;
 		
 		float curX = heroBtnSpacing;
 		for (HeroClass cl : HeroClass.values()){
@@ -174,6 +174,10 @@
 				hero = new Image(Assets.ROGUE, 0, 90, 12, 15);
 			} else if (cl == HeroClass.HUNTRESS){
 				hero = new Image(Assets.HUNTRESS, 0, 90, 12, 15);
+			} else if (cl == HeroClass.CLERIC){
+				hero = new Image(Assets.CLERIC, 0, 90, 12, 15);
+			}  else if (cl == HeroClass.DWARF){
+				hero = new Image(Assets.DWARFHERO, 0, 90, 12, 15);
 			}
 			add(hero);
 			
@@ -194,7 +198,9 @@
 			super.update();
 			if (cl != GamesInProgress.selectedClass){
 				if (!cl.isUnlocked()){
-					hero.brightness(0.3f);
+					if (cl == HeroClass.DWARF){
+						hero.brightness(0f);
+					} else hero.brightness(0.3f);
 				} else {
 					hero.brightness(0.6f);
 				}
@@ -340,7 +346,16 @@
 							heroLoadout.icon(new ItemSprite(ItemSpriteSheet.GLOVES, null));
 							heroMisc.icon(new Image(Assets.TILES_SEWERS, 112, 96, 16, 16 ));
 							break;
-					}
+						case CLERIC:
+							heroItem.icon(Icons.get(Icons.CLERIC));
+							heroLoadout.icon(new ItemSprite(ItemSpriteSheet.CUDGEL, null));
+							heroMisc.icon(new ItemSprite(ItemSpriteSheet.ANKH, null));
+							break;
+						case DWARF:
+							heroItem.icon(new ItemSprite(ItemSpriteSheet.DWARFARM, null));
+							heroLoadout.icon(new ItemSprite(ItemSpriteSheet.STONE_SHOCK, null));
+							heroMisc.icon(new ItemSprite(ItemSpriteSheet.TOKEN));
+							break;					}
 					
 					layout();
 					
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWandmaker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWandmaker.java	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWandmaker.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -22,11 +22,12 @@
 package com.shatteredpixel.shatteredpixeldungeon.windows;
 
 import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.hero.HeroClass;
 import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Wandmaker;
 import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfExperience;
 import com.shatteredpixel.shatteredpixeldungeon.items.quest.CorpseDust;
 import com.shatteredpixel.shatteredpixeldungeon.items.quest.Embers;
-import com.shatteredpixel.shatteredpixeldungeon.items.wands.Wand;
 import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
 import com.shatteredpixel.shatteredpixeldungeon.plants.Rotberry;
 import com.shatteredpixel.shatteredpixeldungeon.scenes.PixelScene;
@@ -53,51 +54,78 @@
 		add( titlebar );
 
 		String msg = "";
-		if (item instanceof CorpseDust){
-			msg = Messages.get(this, "dust");
-		} else if (item instanceof Embers){
-			msg = Messages.get(this, "ember");
-		} else if (item instanceof Rotberry.Seed){
-			msg = Messages.get(this, "berry");
+		if (Dungeon.hero.heroClass == HeroClass.CLERIC) {
+			msg = Messages.get(this, "cleric");
+		} else {
+			if (item instanceof CorpseDust) {
+				msg = Messages.get(this, "dust");
+			} else if (item instanceof Embers) {
+				msg = Messages.get(this, "ember");
+			} else if (item instanceof Rotberry.Seed) {
+				msg = Messages.get(this, "berry");
+			}
 		}
 
 		RenderedTextBlock message = PixelScene.renderTextBlock( msg, 6 );
 		message.maxWidth(WIDTH);
 		message.setPos(0, titlebar.bottom() + GAP);
 		add( message );
-		
-		RedButton btnWand1 = new RedButton( Messages.titleCase(Wandmaker.Quest.wand1.name()) ) {
-			@Override
-			protected void onClick() {
-				selectReward( wandmaker, item, Wandmaker.Quest.wand1 );
-			}
-		};
-		btnWand1.setRect(0, message.top() + message.height() + GAP, WIDTH, BTN_HEIGHT);
-		add( btnWand1 );
-		
-		RedButton btnWand2 = new RedButton( Messages.titleCase(Wandmaker.Quest.wand2.name()) ) {
-			@Override
-			protected void onClick() {
-				selectReward( wandmaker, item, Wandmaker.Quest.wand2 );
-			}
-		};
-		btnWand2.setRect(0, btnWand1.bottom() + GAP, WIDTH, BTN_HEIGHT);
-		add( btnWand2 );
-		
-		resize(WIDTH, (int) btnWand2.bottom());
+
+
+		if (Dungeon.hero.heroClass == HeroClass.CLERIC) {
+			RedButton btnWand1 = new RedButton(Messages.titleCase(Wandmaker.Quest.potion.name())) {
+				@Override
+				protected void onClick() {
+					selectReward(wandmaker, item, Wandmaker.Quest.potion);
+				}
+			};
+			btnWand1.setRect(0, message.top() + message.height() + GAP, WIDTH, BTN_HEIGHT);
+			add(btnWand1);
+
+		} else {
+
+			RedButton btnWand1 = new RedButton(Messages.titleCase(Wandmaker.Quest.wand1.name())) {
+				@Override
+				protected void onClick() {
+					selectReward(wandmaker, item, Wandmaker.Quest.wand1);
+				}
+			};
+			btnWand1.setRect(0, message.top() + message.height() + GAP, WIDTH, BTN_HEIGHT);
+			add(btnWand1);
+
+			RedButton btnWand2 = new RedButton(Messages.titleCase(Wandmaker.Quest.wand2.name())) {
+				@Override
+				protected void onClick() {
+					selectReward(wandmaker, item, Wandmaker.Quest.wand2);
+				}
+			};
+			btnWand2.setRect(0, btnWand1.bottom() + GAP, WIDTH, BTN_HEIGHT);
+			add(btnWand2);
+
+			resize(WIDTH, (int) btnWand2.bottom());
+		}
 	}
 	
-	private void selectReward( Wandmaker wandmaker, Item item, Wand reward ) {
+	private void selectReward( Wandmaker wandmaker, Item item, Item reward ) {
 		
 		hide();
 		
 		item.detach( Dungeon.hero.belongings.backpack );
 
-		reward.identify();
-		if (reward.doPickUp( Dungeon.hero )) {
-			GLog.i( Messages.get(Dungeon.hero, "you_now_have", reward.name()) );
-		} else {
-			Dungeon.level.drop( reward, wandmaker.pos ).sprite.drop();
+		if (Dungeon.hero.heroClass == HeroClass.CLERIC) {
+			PotionOfExperience potion = new PotionOfExperience();
+			if (potion.doPickUp(Dungeon.hero)) {
+				GLog.i(Messages.get(Dungeon.hero, "you_now_have", potion.name()));
+			} else {
+				Dungeon.level.drop(potion, wandmaker.pos).sprite.drop();
+			}
+		} else {
+			reward.identify();
+			if (reward.doPickUp(Dungeon.hero)) {
+				GLog.i(Messages.get(Dungeon.hero, "you_now_have", reward.name()));
+			} else {
+				Dungeon.level.drop(reward, wandmaker.pos).sprite.drop();
+			}
 		}
 		
 		wandmaker.yell( Messages.get(this, "farewell", Dungeon.hero.givenName()) );
Index: core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWoundedDwarf.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWoundedDwarf.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
+++ core/src/main/java/com/shatteredpixel/shatteredpixeldungeon/windows/WndWoundedDwarf.java	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -0,0 +1,86 @@
+/*
+ * Pixel Dungeon
+ * Copyright (C) 2012-2015 Oleg Dolya
+ *
+ * Shattered Pixel Dungeon
+ * Copyright (C) 2014-2019 Evan Debenham
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>
+ */
+
+package com.shatteredpixel.shatteredpixeldungeon.windows;
+
+import com.shatteredpixel.shatteredpixeldungeon.Dungeon;
+import com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.WoundedDwarf;
+import com.shatteredpixel.shatteredpixeldungeon.items.Item;
+import com.shatteredpixel.shatteredpixeldungeon.items.potions.PotionOfHealing;
+import com.shatteredpixel.shatteredpixeldungeon.messages.Messages;
+import com.shatteredpixel.shatteredpixeldungeon.scenes.PixelScene;
+import com.shatteredpixel.shatteredpixeldungeon.sprites.ItemSprite;
+import com.shatteredpixel.shatteredpixeldungeon.ui.RedButton;
+import com.shatteredpixel.shatteredpixeldungeon.ui.RenderedTextBlock;
+import com.shatteredpixel.shatteredpixeldungeon.ui.Window;
+
+import static com.shatteredpixel.shatteredpixeldungeon.Badges.validateDwarfUnlock;
+
+public class WndWoundedDwarf extends Window {
+
+	private static final int WIDTH		= 120;
+	private static final int BTN_HEIGHT	= 20;
+	private static final float GAP		= 2;
+
+	public WndWoundedDwarf(final WoundedDwarf woundedDwarf, final Item item ) {
+		
+		super();
+		
+		IconTitle titlebar = new IconTitle();
+		titlebar.icon(new ItemSprite(item.image(), null));
+		titlebar.label(Messages.titleCase(item.name()));
+		titlebar.setRect(0, 0, WIDTH, 0);
+		add( titlebar );
+
+		String msg = "";
+		if (item instanceof PotionOfHealing) {
+			msg = Messages.get(this, "potion");
+		}
+
+		RenderedTextBlock message = PixelScene.renderTextBlock( msg, 6 );
+		message.maxWidth(WIDTH);
+		message.setPos(0, titlebar.bottom() + GAP);
+		add( message );
+		
+		RedButton btnEnd = new RedButton( Messages.get(this, "end")) {
+			@Override
+			protected void onClick() {
+				endQuest( woundedDwarf );
+			}
+		};
+		btnEnd.setRect(0, message.top() + message.height() + GAP, WIDTH, BTN_HEIGHT);
+		add( btnEnd );
+	}
+	
+	private void endQuest(WoundedDwarf woundedDwarf) {
+
+		PotionOfHealing potion = new PotionOfHealing();
+		potion.identify().quantity(1).detach(Dungeon.hero.belongings.backpack);
+
+		hide();
+
+		woundedDwarf.yell( Messages.get(this, "farewell", Dungeon.hero.givenName()) );
+		woundedDwarf.destroy();
+		woundedDwarf.sprite.die();
+		WoundedDwarf.Quest.complete();
+		validateDwarfUnlock();
+	}
+}
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/actors/actors.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>x-windows-949
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/actors/actors.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/actors/actors.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -69,8 +69,8 @@
 actors.buffs.berserk.berserk=Berserking
 actors.buffs.berserk.exhausted=Exhausted
 actors.buffs.berserk.recovering=Recovering
-actors.buffs.berserk.angered_desc=The severity of the berserker's injuries strengthen his blows. As the berserker takes physical damage, his rage will build, granting him bonus damage. Damage which is blocked by armor still counts towards building rage.\n\nRage will fade over time. The lower the berserker's health, the longer it will last.\n\nIf the berserker is brought to 0 hp while at full rage, and is wearing his seal, he will go berserk and _refuse to die_ for a short time.\n\nCurrent Rage: _%.0f%%_\n_+%.0f%%_ damage
-actors.buffs.berserk.berserk_desc=At the brink of death, fear and uncertainty bleed away, leaving only anger. In this state of near-death the berserker is extremely powerful _dealing +50% damage, gaining bonus shielding, and refusing to die._\n\nThis bonus shielding is stronger the better the berserker's armor, and will deplete over time. When this shielding is reduced to 0, the berserker will give in and die.\n\nAny form of healing will return the berserker to stability, but he will be exhausted. While exhausted, the berserker will need to gain experience before being able to build rage again.
+actors.buffs.berserk.angered_desc=The severity of the berserker's injuries strengthen his blows and tenacity. As the berserker takes physical damage, his rage will build, granting him bonus damage. Damage which is blocked by armor still counts towards building rage.\n\nRage will fade over time. The lower the berserker's health, the longer it will last.\n\nIf the berserker is brought to 0 hp while at full rage, and is wearing his seal, he will go berserk and _refuse to die_ for a short time.\n\nCurrent Rage: _%.0f%%_\n_+%.0f%%_ damage\n_+%.0f%%_ damage resistance
+actors.buffs.berserk.berserk_desc=At the brink of death, fear and uncertainty bleed away, leaving only anger. In this state of near-death the berserker is extremely powerful _dealing +50% damage, resists all damage taken by 20%., gaining bonus shielding, and refusing to die._\n\nThis bonus shielding is stronger the better the berserker's armor, and will deplete over time. When this shielding is reduced to 0, the berserker will give in and die.\n\nAny form of healing will return the berserker to stability, but he will be exhausted. While exhausted, the berserker will need to gain experience before being able to build rage again.
 actors.buffs.berserk.recovering_desc=Inner strength has its limits. The berserker must rest before using his rage again.\n\nWhile recovering the berserker does not build any rage from taking damage.\n\nLevels until recovered: _%.2f_
 actors.buffs.berserk.no_rages=Berserking will also permanently wear on him, reducing his max health each time.
 actors.buffs.berserk.past_rages=Times berserker has raged: _%d_\nMax health reduced to: _%d%%_
@@ -150,7 +150,7 @@
 
 actors.buffs.fury.name=Furious
 actors.buffs.fury.heromsg=You become furious!
-actors.buffs.fury.desc=You are angry, enemies won't like you when you're angry.\n\nA great rage burns within you, increasing the damage you deal with physical attacks by 50%%.\n\nThis rage will last as long as you are injured below 50%% health.
+actors.buffs.fury.desc=You are angry, enemies won't like you when you're angry.\n\nA great rage burns within you, increasing the damage you deal with physical attacks by 50%% and resist from all damage you taken by 20%%.\n\nThis rage will last as long as you are injured below 50%% health.
 
 actors.buffs.blobimmunity.name=Purification Barrier
 actors.buffs.blobimmunity.desc=Some strange force is encasing you in a thin protective barrier, blocking out all harmful airborne effects.\n\nYou are immune to all area-bound effects while this barrier lasts.\n\nTurns of immunity remaining: %s.
@@ -279,6 +279,79 @@
 actors.buffs.wellfed.name=Well Fed
 actors.buffs.wellfed.desc=You feel quite satisfied and full.\n\nWhile well fed, your hunger will not increase, and you will heal an additional amount of health over time.\n\nTurns remaining: %d.
 
+####AddedPD
+actors.buffs.transfusionbuff.name=Health charged
+actors.buffs.transfusionbuff.desc=Your staff of transfusion is charged with enemies' health!\n\nThis charge is consumed instead of your health the next time you heal allies.
+
+actors.buffs.transmuterbuff.name=Moment of transmutation
+actors.buffs.transmuterbuff.desc=Zapping the empty charged staff, the transmuter gain 1 charge and recharging buff, and transmute the magic of staff!\n\nBut depend on the upgrades, the more chaotic energy lasts to distort maigc. Also the cursed staff can't transmute because its already filled by chaotic energy.\n\nTurns remaining: %s.
+
+actors.buffs.burglarsense.name=Already disarm
+actors.buffs.burglarsense.disarm=You reflexively disarm trap just before it works!
+actors.buffs.burglarsense.desc=The burglar can reflexively disarm trap when triggered it. But once disarmed, needs some time until reflex restored.\n\nTurns to restore reflex remaining : %s.
+
+actors.buffs.dwarfarmorbuff.name=Overheated
+actors.buffs.dwarfarmorbuff.desc=Your dwarven power armor swings with tremendous energy and flashes your body!\n\nWhile overheated, your all actions including attacks, movements, and using item, are _twice as fast._ \n\nTurns remaining: %s.
+
+actors.buffs.devotion.name=Devotion
+actors.buffs.devotion.desc=In the darkness of the dungeon, the connection with the divine light is suppressed. But you can purify the darkness with some ways - purge those dark creatures, or gain experience level. \n\nYou have %s devotion.
+actors.buffs.devotion.miracles=You now have three miracles : Smite, Pray of Zealot, Enlightenment
+actors.buffs.devotion.crusader=antimagic+
+actors.buffs.devotion.scholar=AOE smite
+actors.buffs.devotion.redeemer=Baptize
+actors.buffs.devotion.need_more_rank=You needs more devotion to call the light.
+actors.buffs.devotion.smite_prompt=Select a target to smite\ncost 15 devotion\n\nDeals _%1$d_ damage\n+_%2$d_ for darkness beings
+actors.buffs.devotion.smite_prompt_crusader=Select a target to _smite_\ncost 15 devotion\n\nDeals _%1$d_ damage\n+_%2$d_ for darkness beings\nBlinds magical beings
+actors.buffs.devotion.smite_prompt_scholar=Select a target to _smite_\ncost 15 devotion\n\nDeals _%1$d_ damage\n+_%2$d_ for darkness beings\nSame damage to nearby targets
+actors.buffs.devotion.smite_prompt_redeemer=Select a target to _smite_\ncost 15 devotion\n\nDeals _%1$d_ damage\n+_%2$d_ for darkness beings\nCure and shields _%3$d_ for ally
+actors.buffs.devotion.smite_bad_target=You can only smite a target in your sight.
+actors.buffs.devotion.smite_boss=%s is so deeply immersed in the darkness of the dungeon, resist your smite of the light!
+actors.buffs.devotion.which_enlighten=Select a weapon or armor to enlighten
+actors.buffs.devotion.enlighten=The power of the divine light enlighten it!
+actors.buffs.devotion.prompt=Which miracle to call upon? You have _%s_ devotion.
+actors.buffs.devotion.choose_smite=_Smite_ - cost 15
+actors.buffs.devotion.choose_zealot=_Pray of Zealot_ - cost 30
+actors.buffs.devotion.choose_enlighten=_Enlightenment_ - cost 45
+actors.buffs.devotion.cancel=cancel
+actors.buffs.devotion.zealot_buff_name=Pray of Zealot
+actors.buffs.devotion.zealot_buff_desc=zeal left : %1$d.\ndanger level : %2$d.\n+%3$d regeneration
+actors.buffs.devotion.choose_holy_water=_Bless of Water_ - cost 20
+actors.buffs.devotion.holy_water_desc=The water here is blessed holy water. Evil beings are weakened and difficult to move in here.
+actors.buffs.devotion.holy_water_debuff_name=Holy Flood
+actors.buffs.devotion.holy_water_debuff_desc=By the power of the holy flood, all evil beings are weakened and difficult to move.
+actors.buffs.devotion.choose_cremate=_Crematorium_ - cost 25
+actors.buffs.devotion.cermate_blob=The purifying flame is rising here. Other blobs will disappear, and effective for cremating undead.
+actors.buffs.devotion.choose_baptize=_Baptize_ - cost 60
+actors.buffs.devotion.baptize_prompt=Select a target to _baptize_\ncost 60 devotion\n\nTarget becomes ally
+actors.buffs.devotion.baptize_used=You can maintain an enemy which baptized.
+actors.buffs.devotion.baptize_bad_target=You can only baptize an enemy in your sight.
+actors.buffs.devotion.baptize_cannot_boss=The target's resist if too powerful!
+actors.buffs.devotion.baptize_on=%s accepts your baptism!
+actors.buffs.devotion.baptize_injured=Your %s is seriously injured!
+actors.buffs.devotion.baptize_buff_name=Baptized
+actors.buffs.devotion.baptize_buff_desc=Baptized ally can use stairs, and level up when your level is up.\n\nHP bonus: _%1$d__%2$d_\nDef bonus: _%3$d_\nDmg bonus: _0-%4$d_
+actors.buffs.devotion.interact_title=Recall or Salvation
+actors.buffs.devotion.interact_prompt=You can recall ally to your near, also salvation to disappear.
+actors.buffs.devotion.interact_recall=Recall
+actors.buffs.devotion.interact_dismiss=Salvation
+actors.buffs.devotion.interact_cancel=cancel
+actors.buffs.devotion.interact_recall_on=Your %s is return.
+actors.buffs.devotion.interact_recall_fail=There are no area to call other one.
+actors.buffs.devotion.interact_dismiss_on=You pray %s's Salvation.
+
+actors.buffs.dwarffocus.name=Focus
+actors.buffs.dwarffocus.focused=Focused!
+actors.buffs.dwarffocus.desc=The monk focuses all his attention on the enemy's movements. If enemy in sight, the monk start focusing, and focus faster while moving. If there is no enemy in sight, focus will gradually disappear.\n\nIf you are not paralyzed, you can dodge any attacks while focused! If you succeed in dodging the attack, you will paralyze the enemy.\n\nTurns need to be focused: _%d_
+actors.buffs.dwarffocus.desc_focused=Now you are in focused!\n\nIf you are not paralyzed, _you can dodge any attacks for a while!_
+
+actors.buffs.dwarfthunder.name=thunder charge
+actors.buffs.dwarfthunder.level=%d charge
+actors.buffs.dwarfthunder.blast=blast!
+actors.buffs.dwarfthunder.desc=The arms of the thunderbringer are reforged to blast chain lightning. Unused thunder charges will be discharged one by one, but as soon as thunder is charged for the _fourth_ time, it will be released as a blast of chain lightning. If the lightning hits enough number of enemies, grants haste buff.\n\nCharged thunder: _1%$d_\nTurns to discharge: _2%$s_
+
+actors.buffs.dwarfnecro.name=Ectoplasm
+actors.buffs.dwarfnecro.needfuel=The necrosmith extracts the ectoplasm from enemy's soul, use as a fuel of his own necroforged golem. _10 Ectoplasm_ are required to activate the new necroforged golem.\n\nExtracted ectoplasm: _%d_
+actors.buffs.dwarfnecro.desc=Sufficient ectoplasm is extracted, necroforged golem is activated. As usual, it will be etherialized and keep an eye on the approaching enemy... Etherialized golem regenerates at time an experience.\nHP: _%1$d_/_%2$d_\n\n_Guardian form_:\n_%3$d_-_%4$d_ DR, take an aggro from enemy, slow attack speed.\n\n_Sentry from_:\n_0_-_%5$d_DR, flying, ranged magic attack.
 
 
 ###hero
@@ -301,45 +374,79 @@
 actors.hero.heroclass.warrior_desc_item=The Warrior starts with a _unique broken seal,_ which he can affix to armor.\n\nHe will slowly generate shielding over his health while he is wearing armor with the seal affixed.\n\nThe seal can be moved between armor, carrying a single upgrade with it.
 actors.hero.heroclass.warrior_desc_loadout=The Warrior starts with a _worn shortsword,_ which offers more direct damage than other starter weapons.\n\nThe Warrior starts with _three throwing stones,_ which offer limited ranged damage.\n\nThe Warrior starts with a _potion bandolier,_ which can store various potions and protect them from the cold.
 actors.hero.heroclass.warrior_desc_misc=The Warrior regains a small amount of HP whenever he eats food.\n\nThe Warrior automatically identifies:\n- Scrolls of Identify\n- Potions of Healing\n- Scrolls of Rage
-actors.hero.heroclass.warrior_desc_subclasses=A subclass can be chosen after defeating the second boss. The Warrior has two subclasses:
+actors.hero.heroclass.warrior_desc_subclasses=A subclass can be chosen after defeating the second boss. The Warrior has three subclasses:
 
 actors.hero.heroclass.mage=mage
 actors.hero.heroclass.mage_unlock=The Mage is an expert with wands, and carries a _unique magical staff._\n\nTo unlock him _use two scrolls of upgrade in one run._
 actors.hero.heroclass.mage_desc_item=The Mage starts with a _unique staff,_ which can be imbued with the properties of a wand.\n\nThe staff recharges significantly faster than a wand, and has 1 more maximum charge.\n\nThe staff starts out imbued with magic missile.
 actors.hero.heroclass.mage_desc_loadout=The Mage starts with his staff as his melee weapon. The staff deals less melee damage than other starter weapons.\n\nThe Mage can use the magic in his staff to attack at range.\n\nThe Mage starts with a _scroll holder,_ which can store various scrolls and protect them from fire.
 actors.hero.heroclass.mage_desc_misc=The Mage partially identifies wands the moment he uses them.\n\nThe Mage regains a small amount of wand and staff charge whenever he eats food.\n\nThe Mage automatically identifies:\n- Scrolls of Identify\n- Potions of Liquid Flame\n- Scrolls of Upgrade
-actors.hero.heroclass.mage_desc_subclasses=A subclass can be chosen after defeating the second boss. The Mage has two subclasses:
+actors.hero.heroclass.mage_desc_subclasses=A subclass can be chosen after defeating the second boss. The Mage has three subclasses:
 
 actors.hero.heroclass.rogue=rogue
 actors.hero.heroclass.rogue_unlock=The Rogue can control the flow of battle and strike from invisibility using his _unique cloak of shadows._\n\nTo unlock him _perform 20 surprise attacks in one run._
 actors.hero.heroclass.rogue_desc_item=The Rogue starts with a unique artifact: the _Cloak of Shadows,_ which he can use to become invisible at will.\n\nLike all artifacts, the cloak cannot be directly upgraded. Instead it becomes more powerful as it is used.
 actors.hero.heroclass.rogue_desc_loadout=The Rogue starts with a _dagger,_ which deals more damage when surprising enemies.\n\nThe Rogue starts with _three throwing knives,_ which offer some ranged damage and deal more damage to surprised enemies.\n\nThe Rogue starts with a _velvet pouch,_ which can store small items like seeds and runestones.
 actors.hero.heroclass.rogue_desc_misc=The Rogue detects secrets and traps from a greater distance.\n\nThe Rogue is able to find more secrets hidden in the dungeon.\n\nThe Rogue automatically identifies:\n- Scrolls of Identify\n- Potions of Invisibility\n- Scrolls of Magic Mapping
-actors.hero.heroclass.rogue_desc_subclasses=A subclass can be chosen after defeating the second boss. The Rogue has two subclasses:
+actors.hero.heroclass.rogue_desc_subclasses=A subclass can be chosen after defeating the second boss. The Rogue has three subclasses:
 
 actors.hero.heroclass.huntress=huntress
 actors.hero.heroclass.huntress_unlock=The Huntress is a master of thrown weapons, and has a _unique magical bow_ with infinite arrows.\n\nTo unlock her _defeat 20 enemies with the help of thrown weapons in one run._
 actors.hero.heroclass.huntress_desc_item=The Huntress starts with a _unique spirit bow,_ which can fire an infinite number of conjured arrows.\n\nThe bow steadily grows stronger as the huntress levels up, and can be augmented and enchanted.
 actors.hero.heroclass.huntress_desc_loadout=The Huntress starts with a pair of _studded gloves,_ which attack much faster than other starter weapons.\n\nThe Huntress starts with her bow as a ranged option.\n\nThe Huntress starts with a _velvet pouch,_ which can store small items like seeds and runestones.
 actors.hero.heroclass.huntress_desc_misc=The Huntress can travel through tall grass without trampling it.\n\nThe Huntress can use thrown weapons for longer before they break.\n\nThe Huntress senses nearby enemies even if they are hidden behind obstacles.\n\nThe Huntress automatically identifies:\n- Scrolls of Identify\n- Potions of Mind Vision\n- Scrolls of Lullaby
-actors.hero.heroclass.huntress_desc_subclasses=A subclass can be chosen after defeating the second boss. The Huntress has two subclasses:
+actors.hero.heroclass.huntress_desc_subclasses=A subclass can be chosen after defeating the second boss. The Huntress has three subclasses:
+
+actors.hero.heroclass.cleric=cleric
+actors.hero.heroclass.cleric_unlock=The Cleric devoted to the _faith of light_, against the magic of wands and spells.\n\nTo unlock her _finish one run to get the amulet and get back to the surface._\n\nThis is an _'additonal class'_ from AddedPD, not included in the 'all classes' of the basic SPD. Recommended for experienced dungeoneer.
+actors.hero.heroclass.cleric_desc_item=The Cleric can _call_ miracles of the light by offering the devotion.\n\n_The Devotion_ is restored whenever she gains experience or defeats enough enemies on each floor.\n\nThe Cleric starts with three miracles:\n\n_Smite_ \nDeals damage to one enemy in her sight.\n\n_Pray of zealot_ \nRegenerates herself and allies, depends on how much she in crisis.\n\n_Enlightenment_ \nOne single weapon or armor will becomes enlightened.
+actors.hero.heroclass.cleric_desc_loadout=The Cleric starts with a _cudgel_, which more accurate than other starter weapons.\n\nThe Cleric starts with an _ankh_, the death-preventing item which can blessed by a fully filled dew vial. \n\nThe Cleric had an oath to refuse magic, to prevent any cause of corruption. So, she cannot use any _wands_ and _spell crystals_.
+actors.hero.heroclass.cleric_desc_misc=The Cleric gains short blessing whenever she eats food.\n\nThe Cleric automatically identifies:\n- Scrolls of Identify\n- Potions of Experience\n- Scrolls of Remove Curse
+actors.hero.heroclass.cleric_desc_subclasses=A subclass can be chosen after defeating the second boss. The Cleric has three subclasses:
+
+actors.hero.heroclass.dwarf=dwarf
+actors.hero.heroclass.dwarf_unlock=There is a survivor who fights alone against the evil somewhere in the _hall of demons_...\n\nThis is an _'additonal class'_ from AddedPD, not included in the 'all classes' of the basic SPD. Recommended for experienced dungeoneer.
+actors.hero.heroclass.dwarf_desc_item=The Dwarf Survivor's _arms are mechanized_ by dwarven technology.\n\nMechanized arms can attack faster than other stater weapons, and block damage scaled by upgrade level. But The Dwarf Survivor cannot wield other melee weapons.
+actors.hero.heroclass.dwarf_desc_loadout=The Dwarf Survivor use _mechanized arms_ as a weapon.\n\nThe Dwarf Survivor starts with three _stone of shock,_ which paralyzed nearby enemies for short length. The Dwarf survivor can also be used to hasten and shielding himself.
+actors.hero.heroclass.dwarf_desc_misc=The Dwarf Survivor gains haste buff when electro-shocked, instead paralyzed.\n\nThe Dwarf Survivor automatically identifies:\n- Scrolls of Identify\n- Potions of Haste\n- Scrolls of Recharge
+actors.hero.heroclass.dwarf_desc_subclasses=A subclass can be chosen after defeating the second boss. The Dwarf Survivor has three subclasses:
 
 actors.hero.herosubclass.gladiator=gladiator
-actors.hero.herosubclass.gladiator_desc=A successful attack with a melee weapon allows the _Gladiator_ to start a combo. Building combo allows him to use unique finisher moves.
+actors.hero.herosubclass.gladiator_desc=A successful attack with a melee weapon allows the _Gladiator_ to start a combo. Building combo allows to use unique finisher moves.
 actors.hero.herosubclass.berserker=berserker
-actors.hero.herosubclass.berserker_desc=The _Berserker_ deals bonus damage scaling with damage taken. When at full rage, he can refuse to die for a short time, at the cost of exhaustion.
+actors.hero.herosubclass.berserker_desc=The _Berserker_ deals bonus damage and endure pain, scaling with damage taken. When at full rage, he can refuse to die for a short time, at the cost of exhaustion.
+actors.hero.herosubclass.sealknight=sealknight
+actors.hero.herosubclass.sealknight_desc=The _Sealknight_ awakes power of broken seal, gain some extra shields regardless of quality and restore shields faster. Also, the glpyh gain bonus effects and preserved from upgrade.
 actors.hero.herosubclass.warlock=warlock
 actors.hero.herosubclass.warlock_desc=When using wands on an enemy, the _Warlock_ has a chance to mark their soul. Marked enemies will heal him and restore his hunger whenever they take physical damage.
 actors.hero.herosubclass.battlemage=battlemage
 actors.hero.herosubclass.battlemage_desc=When fighting with his staff, the _Battlemage_ conjures bonus effects depending on the wand his staff is imbued with. His staff will also gain charge through combat.
+actors.hero.herosubclass.transmuter=transmuter
+actors.hero.herosubclass.transmuter_desc=The _Transmuter_ infuse his staff with chaotic energy. Zapping the empty charged staff, gain 1 charge and recharge buff, and transmute its magic. But chaotic energy remains for a while, distort magic like accursed.
 actors.hero.herosubclass.assassin=assassin
 actors.hero.herosubclass.assassin_desc=While invisible the _Assassin_ prepares a deadly strike on his next attack. The longer spent invisible, the more powerful the attack will be.
 actors.hero.herosubclass.freerunner=freerunner
 actors.hero.herosubclass.freerunner_desc=The _Freerunner_ builds momentum as he runs. Momentum increases his movement speed and evasion, but it quickly fades when he isn't moving.
+actors.hero.herosubclass.burglar=burglar
+acrots.hero.herosubclass.burglar_desc=Not just a mundane thief, the _Burglar_ is a professional. He can see through doors, reveal area when enemy down, and disarm trap just before it works.
 actors.hero.herosubclass.sniper=sniper
 actors.hero.herosubclass.sniper_desc=The _Sniper_ is a master of ranged combat. She gains increased vision and her ranged attacks pierce armor. After striking with a thrown weapon, she can follow up with a special attack from her bow.
 actors.hero.herosubclass.warden=warden
 actors.hero.herosubclass.warden_desc=The _Warden_ has a strong connection to nature which allows her to see through tall grass and command furrowed grass to sprout around plants she grows. Plants she tramples will also give bonus effects, tipped darts gain 2x durability, and grass will give her an armor boost when she stands in it.
+actors.hero.herosubclass.spiritwalker=spiritwalker
+actors.hero.herosubclass.spiritwalker_desc=The _Spiritwalker_ trained her spectral ability. She detect enemies in wider range, and the successful shot by spirit bow will cause spectral burst, which deals equal damage and enchantment.
+actors.hero.herosubclass.crusader=crusader
+actors.hero.herosubclass.crusader_desc=The _Crusader_ devotes by fighting against dark magic. Enlightened weapon or smite will blinds magic-using enemies. Also the Pray of zealot gains arcane armor and adrenaline.
+actors.hero.herosubclass.scholar=scholar
+actors.hero.herosubclass.scholar_desc=The _Scholar_ devotes by learning about the principle of light. The devotion gains faster, and the smite deals AoE damage. Also adds 'Holy Flood', 'Crematorium' miracle on the miracles list.
+actors.hero.herosubclass.redeemer=redeemer
+actors.hero.herosubclass.redeemer_desc=The _Redeemer_ devotes by saving some of those stray beings can be reclaimed. Smite ally will gain healing buff. Also Adds 'Baptize' miracle to reclaim an enemy, which is able to level up.
+actors.hero.herosubclass.thunderbringer=thunderbringer
+actors.hero.herosubclass.thunderbringer_desc=The _Thunderbrigner_ reforged his arms, allow to blast chain lightning when thunder charges reach at 4. Successful attack charges thunder, and blast lighting will hasten you.
+actors.hero.herosubclass.monk=monk
+actors.hero.herosubclass.monk_desc=The _Monk_ builds the focus over time, builds faster while moving. The focus allow him to dodge all attacks, and to perform paralyzing blow after focus-dodging.
+actors.hero.herosubclass.necrosmith=necrosmith
+actors.hero.herosubclass.necrosmith_desc=The _Necrosmith_ extracts ectoplasm from worthy enemies. These souls are consumed as a fuel for the necroforged golem. His golem can be healed by consume ectoplasm, and transform between guaridan or sentry form.
 
 
 
@@ -415,17 +522,41 @@
 actors.mobs.npcs.wandmaker.intro_rogue=Oh Goodness, you startled me! I haven't met a bandit from this place that still has his sanity, so you must be from the surface! If you're up to helping a stranger out, I may have a task for you.
 actors.mobs.npcs.wandmaker.intro_mage=Oh, hello %s! I heard there was some ruckus regarding you and the wizards institute? Oh never mind, I never liked those stick-in-the-muds anyway. If you're willing, I may have a task for you.
 actors.mobs.npcs.wandmaker.intro_huntress=Oh, hello miss! A friendly face is a pleasant surprise down here isn't it? In fact, I swear I've seen your face before, but I can't put my finger on it... Oh never mind, if you're here for adventure, I may have a task for you.
+actors.mobs.npcs.wandmaker.intro_cleric=Oh ... yeah, in your eyes, I might look like those necromancer. I'm a wizard of a very different kind from those who know only that skeleton. If you trust me, I may have a task for you.
+actors.mobs.npcs.wandmaker.intro_dwarf=Oh! The alive dwarf! You looks like more paler than I remember, I almost couldn't recognize you are a dwarf. Because when old humans like me, our memories become fleeting earlier than dwarves. If you want, I may have a task for you.
 actors.mobs.npcs.wandmaker.intro_1=\n\nI came here to find a rare ingredient for a wand, but I've gotten myself lost, and my magical shield is weakening. I'll need to leave soon, but can't bear to go without getting what I came for.
 actors.mobs.npcs.wandmaker.intro_dust=I'm looking for some _corpse dust._ It's a special kind of cursed bone meal that usually shows up in places like this. There should be a barricaded room around here somewhere, I'm sure some dust will turn up there. Do be careful though, the curse the dust carries is quite potent, _get back to me as fast as you can_ and I'll cleanse it for you.
 actors.mobs.npcs.wandmaker.intro_ember=I'm looking for some _fresh embers_ from a newborn fire elemental. Elementals usually pop up when a summoning ritual isn't controlled, so just find some candles and a ritual site and I'm sure you can get one to pop up. You might want to _keep some sort of freezing item handy_ though, elementals are very powerful, but ice will take them down quite easily.
 actors.mobs.npcs.wandmaker.intro_berry=The old warden of this prison kept a _rotberry plant,_ and I'm after one of its seeds. The plant has probably gone wild by now though, so getting it to give up a seed might be tricky. Its garden should be somewhere around here. Try to _keep away from its vine lashers_ if you want to stay in one piece. Using fire might be tempting but please don't, you'll kill the plant and destroy its seeds.
 actors.mobs.npcs.wandmaker.intro_2=\n\nIf you can get that for me, I'll be happy to pay you with one of my finely crafted wands! I brought two with me, so you can take whichever one you prefer.
+actors.mobs.npcs.wandmaker.intro_2_cleric=\n\nYou must have sworn that you won't use magic wand, so instead give _a potion boiled with the starflower!_ Don't worry, it's not even a piece of minor dark arts.
 actors.mobs.npcs.wandmaker.reminder_dust=Any luck with corpse dust, %s? Look for some barricades.
 actors.mobs.npcs.wandmaker.reminder_ember=Any luck with those embers, %s? You'll need to find four candles and the ritual site.
 actors.mobs.npcs.wandmaker.reminder_berry=Any luck with a Rotberry seed, %s? Look for a room filled with vegetation.
 actors.mobs.npcs.wandmaker.def_verb=blocked
 actors.mobs.npcs.wandmaker.desc=This old yet hale gentleman wears a slightly confused expression. He is protected by a magic shield.
 
+actors.mobs.npcs.necrogolem.name=necroforged golem
+actors.mobs.npcs.necrogolem.desc=The result of grafting necromancy into dwarven engineering. Honestly, it's a horrifying appearance as it fueled by ectoplasm, not even earth elemental. However, it is a desperate situation to take out such an object...\n\nThe necroforged golem is committed to detecting enemies approaching you. When _Guardian form_, the golem protects you from enemies and attempts melee. When _Sentry form_, the golem focuses on defeating enemy, firing magical projectile.\n\nIf there are no enemies in sight, the golem will be etherialized and hover your way... Until the enemy comes.
+actors.mobs.npcs.necrogolem.interact_title=necroforged golem
+actors.mobs.npcs.necrogolem.interact_prompt=You can transform your golem, or swap the position with it.
+actors.mobs.npcs.necrogolem.interact_guardian=Guardian form
+actors.mobs.npcs.necrogolem.interact_sentry=Sentry form
+actors.mobs.npcs.necrogolem.interact_place=swap position
+actors.mobs.npcs.necrogolem.interact_cancel=cancel
+
+actors.mobs.npcs.woundeddwarf.name=dwarf survivor
+actors.mobs.npcs.woundeddwarf.yell=I don't know who you are, but ignore this room! It's a trap!
+actors.mobs.npcs.woundeddwarf.intro_warrior=I cannot believe it. How did humans get down here? Be careful if you heading to the amulet. The trembling chaos down there keeps it. Even a tough warrior like you has eaten many...
+actors.mobs.npcs.woundeddwarf.intro_rogue=A rogue who decided to rob the demons' den? I cannot believe it. If the amulet is your goal, what you should be most careful is the trembling chaos down there. Its gaze is unnaturally terrible...
+actors.mobs.npcs.woundeddwarf.intro_mage=As you can see, you are a much more powerful mage than the warlocks have made my city fall. Nevertheless, if you want the power of the amulet, stay alert. The trembling chaos down there, was corrupt a lot of mages...
+actors.mobs.npcs.woundeddwarf.intro_huntress=You have a very spiritual soul for humans. By the way, isn't this a plane too far from the forest where the spirit walks? If you're looking for the amulet, don't slow down until the end. The trembling chaos down there is hard to penetrate even with the arrow of the spirit...
+actors.mobs.npcs.woundeddwarf.intro_cleric=Is it the will of the light or the will of the self that led you to this plane? It may be the will of the amulet. Think about it once and go down, because if you face the trembling chaos down there, you shouldn not lose things that led you ...
+actors.mobs.npcs.woundeddwarf.intro_1=\n\nThe fact that humans have come down here means that the creepy king has finally fallen. I was resisted but captured, and almost became a ghoul. However I was sent as a offering to the demons. Unfortunately, other friends seem to have lost their mind.
+actors.mobs.npcs.woundeddwarf.intro_2=\n\nI don't know what the demons were trying to do, but I think they studied dwarf's body to make something terrible. I tried to escape several times, but as you can see, my arm- and weapon, were very smashed.\n\nTo fix this, I need a_healing potion_...
+actors.mobs.npcs.woundeddwarf.reminder=Anyway, thank you for saving me. Will you continue to go down? I'm not going anywhere until I fix this arm. _If only the arm can be repaired ..._
+actors.mobs.npcs.woundeddwarf.desc=Just before the dwarf king takes all of the life essence and spirit from the dwarves of the metropolis, he is a survivor who managed to escape the fate of becoming an undead slave. He survived free from the dominating influence of the king, but how fiercely he has resisted, demons have broken both arms completely.\n\nNow he just sits down with his body and mind bent, but if you gave a _potion of healing_, he may also be able to recover his mind to go on _his own adventure!_
+
 
 
 ###mobs
@@ -581,6 +712,7 @@
 
 actors.mobs.succubus.name=succubus
 actors.mobs.succubus.desc=The succubi are demons that look like seductive (in a slightly gothic way) girls. Using its magic, the succubus can charm a hero, who will become unable to attack anything until the charm wears off. When succubi attack a charmed hero, they will steal their life essence.
+actors.mobs.succubus.cleric=You are not seduced by those evil beings!
 
 actors.mobs.swarm.name=swarm of flies
 actors.mobs.swarm.desc=The deadly swarm of flies buzzes angrily. Every non-magical attack will split it into two smaller but equally dangerous swarms.
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/actors/actors_ko.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/actors/actors_ko.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/actors/actors_ko.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -62,16 +62,16 @@
 actors.buffs.barkskin.name=나무껍질
 actors.buffs.barkskin.desc=당신의 피부는 단단해져 마치 나무껍질과 같아졌습니다.\n\n단단해진 피부는 마치 효과적인 갑옷과 같아서 물리적인 공격을 더 잘 방어하게 됩니다. \n\n당신의 현재 추가 방어력은 %d입니다.\n나무껍질 효과는 %s턴 뒤에 약해집니다.
 
-actors.buffs.barrier.name=보호막
-actors.buffs.barrier.desc=단단한 힘의 보호막이 모든 피해를 막아줍니다.\n\n보호막은 보호막 수치가 소진될 때 까지 모든 피해를 막아줍니다. 또한 보호막 수치는 1턴에 1씩 감소합니다.\n\n현재 보호막 수치는 %d입니다.
+actors.buffs.barrier.name=방어막
+actors.buffs.barrier.desc=단단한 힘의 방어막이 모든 피해를 막아줍니다.\n\n방어막은 방어막 수치가 소진될 때 까지 모든 피해를 막아줍니다. 방어막 수치는 1턴에 1씩 감소합니다.\n\n현재 방어막 수치는 %d입니다.
 
 actors.buffs.berserk.angered=분노
 actors.buffs.berserk.berserk=격노
 actors.buffs.berserk.exhausted=탈진
 actors.buffs.berserk.recovering=회복 중
-actors.buffs.berserk.angered_desc=광전사의 부상이 심할수록 그 타격도 강화됩니다. 광전사가 육체적인 피해를 받으면, 더욱 분노하여 추가 피해를 줍니다. 갑옷에 의해 감소된 피해 역시 그의 분노를 더합니다.\n\n분노는 시간이 지나면서 사라지며, 광전사의 체력이 낮을수록 더 오래 지속됩니다.\n\n만약 완전히 분노한 상태에서 인장이 박힌 갑옷을 입은 광전사의 체력이 0이 되면, 그는 격노하여 짧은 시간 동안 _죽음을 유예_ 할 수 있습니다.\n\n현재 분노: _%.0f%%_\n_+%.0f%%_ 피해량
-actors.buffs.berserk.berserk_desc=죽음이 임박한 시점에서, 두려움과 번뇌가 사라지고 분노만 남습니다. 이런 죽음에 가까운 상태에서 광전사는 극도로 강력합니다 _50%의 추가 피해를 입히고, 추가 방어막을 얻고, 죽음을 유예합니다._\n\n추가 방어막은 그의 갑옷이 좋을수록 더 강력하며, 시간이 지나면서 줄어들 것입니다. 이 보호막이 0까지 줄어들면 광전사는 삶을 포기하고 죽을 것입니다.\n\n어떤 방법으로든 체력을 회복하면 안정을 되찾을 수 있지만, 탈진 상태에 접어들게 됩니다. 탈진 상태에선 다시 격노 상태에 접어들기 위해선 경험치를 얻어야만 합니다.
-actors.buffs.berserk.recovering_desc=내면의 힘에는 한계가 있는 법입니다. 광전사가 다시 격노할 수 있께 되려면 우선 조금 쉬어야만 합니다.\n\n체력을 회복하는 동안 광전사는 피해를 입을 때 분노를 얻지 못합니다.\n\n복구될 때까지의 레벨: _%.2f_
+actors.buffs.berserk.angered_desc=광전사의 부상이 심할수록 그 타격과 인내력도 강화됩니다. 광전사가 육체적인 피해를 받으면, 더욱 분노하여 추가 피해를 주고 더 큰 고통을 견딜 수 있게 됩니다. 갑옷에 의해 감소된 피해 역시 그의 분노를 더합니다.\n\n분노는 시간이 지나면서 사라지며, 광전사의 체력이 낮을수록 더 오래 지속됩니다.\n\n만약 완전히 분노한 상태에서 인장이 박힌 갑옷을 입은 광전사의 체력이 0이 되면, 그는 격노하여 짧은 시간 동안 _죽음을 유예_ 할 수 있습니다.\n\n현재 분노: _%.0f%%_\n_+%.0f%%_ 피해량\n_+%.0f%%_ 피해 저항
+actors.buffs.berserk.berserk_desc=죽음이 임박한 시점에서, 두려움과 번뇌가 사라지고 분노만 남습니다. 이런 죽음에 가까운 상태에서 광전사는 극도로 강력합니다 _50%의 추가 피해를 입히고, 추가 방어막을 얻고, 죽음을 유예합니다._\n\n추가 방어막은 그의 갑옷이 좋을수록 더 강력하며, 시간이 지나면서 줄어들 것입니다. 이 방어막이 0까지 줄어들면 광전사는 삶을 포기하고 죽을 것입니다.\n\n어떤 방법으로든 체력을 회복하면 안정을 되찾을 수 있지만, 탈진 상태에 접어들게 됩니다. 탈진 상태에선 다시 격노 상태에 접어들기 위해선 경험치를 얻어야만 합니다.
+actors.buffs.berserk.recovering_desc=내면의 힘에는 한계가 있는 법입니다. 광전사가 다시 격노하려면 우선 조금 쉬어야만 합니다.\n\n체력을 회복하는 동안 광전사는 피해를 입을 때 분노를 얻지 못합니다.\n\n복구될 때까지의 레벨: _%.2f_
 actors.buffs.berserk.no_rages=격노 효과는 광전사의 기력을 영구적으로 소모시켜 격노할 때 마다 최대 체력이 감소합니다.
 actors.buffs.berserk.past_rages=격노 횟수: _%d_\n현재 최대 체력: _%d%%_
 actors.buffs.berserk.rankings_desc=격노하며 버텼으나 사망
@@ -112,12 +112,12 @@
 actors.buffs.combo.cleave_prompt=갈라버릴 대상을 선택\n대상이 죽으면, 연속 타격을 유지함
 actors.buffs.combo.cleave_desc=이제 _가르기_ 가 가능합니다. 이 공격은 피해량이 증가하며, _적을 처치하는데 성공하면 연속 타격을 유지할 수 있습니다._ 여러 명의 적을 상대하면서 연속 타격을 유지하기 위해 효과적인 수단입니다.
 actors.buffs.combo.slam_prompt=강타할 대상을 선택\n방어구 성능에 비례한 추가 피해와 방어막 획득
-actors.buffs.combo.slam_desc=현재 _강타_ 를 사용할 수 있습니다. 이 공격은 _더 높은 피해를 주고 당신이 입고 있는 갑옷의 성능에 비례한 보호막을 부여합니다._ 이 공격은 전투를 끝내는 데에 좋으며, 다음 전투를 더 오래 버텨낼 수 있게 합니다.
+actors.buffs.combo.slam_desc=현재 _강타_ 를 사용할 수 있습니다. 이 공격은 _더 높은 피해를 주고 당신이 입고 있는 갑옷의 성능에 비례한 방어막을 얻습니다._ 이 공격은 전투를 끝내는 데에 좋으며, 다음 전투를 더 오래 버텨낼 수 있게 합니다.
 actors.buffs.combo.crush_prompt=으깨버릴 대상을 선택\n엄청난 피해를 줌.
 actors.buffs.combo.crush_desc=이제 _으깨기_ 가 가능합니다. 이 잔혹한 공격은 _매우 지속적으로 커다란 피해를 입힙니다._ 높은 체력을 가진 강력한 적을 제압할 때 효과적입니다!
 actors.buffs.combo.fury_prompt=분노 폭발 대상을 선택\n매우 빠르게 여러번 공격
 actors.buffs.combo.fury_desc=이제 _분노 폭발_ 이 가능합니다. 이 잔혹한 공격은 감소된 피해량으로 _현재 연속 타격 수치만큼 적을 공격합니다._ 매 공격마다 무기에 걸린 마법을 발동시킬 수 있으므로, 그런 무기를 사용할때 매우 효과적입니다!
-actors.buffs.combo.desc=검투사들은 공격에 성공할 때마다 전투에 추진력을 얻습니다. 명중한 공격은 연속 타격 수치를 하나 늘립니다. 그러나 일정 시간동안 공격하지 않거나, 공격이 두 번 연속으로 빗나가면 연속 타격 수치는 0으로 되돌아갑니다.\n\n연속 타격을 많이 성공시키면 절대 빗나가지 않는 필살기를 사용할 수 있습니다! 연속 수치가 2, 4, 6, 8, 10일때 각각의 특수한 필살기를 사용할 수 있으며, 이를 사용하면 연속 타격 수치가 초기화됩니다.
+actors.buffs.combo.desc=검투사들은 공격에 성공할 때마다 전투에 추진력을 얻습니다. 명중한 공격은 연속 타격 수치를 하나 늘립니다. 그러나 일정 시간동안 공격하지 않거나, 공격이 세 번 연속으로 빗나가면 연속 타격 수치는 0으로 되돌아갑니다.\n\n연속 타격을 많이 성공시키면 절대 빗나가지 않는 필살기를 사용할 수 있습니다! 연속 수치가 2, 4, 6, 8, 10일때 각각의 특수한 필살기를 사용할 수 있으며, 이를 사용하면 연속 타격 수치가 초기화됩니다.
 
 actors.buffs.corruption.name=타락
 actors.buffs.corruption.desc=타락 마법은 존재의 근원을 조작하여, 대상을 아군과 적대하도록 만듭니다.\n\n타락한 생물체는 자신의 동료를 공격하며, 자신의 원래 적을 무시합니다. 타락은 또한 걸린 대상에게 피해를 입히며, 시간이 지남에 따라 체력이 천천히 사라집니다.\n\n타락 효과는 영구적으로 지속되며, 오직 죽어야만 끝이 납니다.
@@ -279,6 +279,80 @@
 actors.buffs.wellfed.name=배부름
 actors.buffs.wellfed.desc=당신은 매우 배부르며, 만족감을 느끼고 있습니다.\n\n배부른 상태에서, 당신은 허기가 지지 않을 것이며, 일정 시간동안 추가적인 체력을 회복할 것입니다.\n\n배부름을 느끼지 않기까지 %d 턴 남았습니다.
 
+####AddedPD
+actors.buffs.transfusionbuff.name=생명력 충전됨
+actors.buffs.transfusionbuff.desc=수혈의 지팡이가 적들의 생명력으로 충전되었습니다!\n\n이렇게 충전된 생명력은 다음 번에 아군을 치유할 때 당신의 생명력 대신 소모됩니다.
+
+actors.buffs.transmuterbuff.name=변환의 시간!
+actors.buffs.transmuterbuff.desc=변환술사는 지팡이의 충전량이 전부 소진되었을 때, 혼돈의 힘을 주입하여 흡수된 마법을 다른 종류로 변환시킬 수 있습니다!\n\n변환된 마법은 충전량 하나와 함께 잠시동안 충전 효과를 제공합니다. 그러나 이 과정에서 혼돈의 힘이 개입하므로, 변환된 직후에 시전하면 _예기치 못한 일이 벌어질 수 있습니다!_\n\n지팡이의 강화 수치가 높을수록 혼돈의 힘도 강해져 더욱 오래 잔류합니다. 또한, 이미 혼돈의 힘으로 가득한 저주받은 지팡이는 변환시킬 수 없습니다.\n\n혼돈의 힘이 사라질 때까지 _%s_턴 남았습니다.
+
+actors.buffs.burglarsense.name=함정 해체함
+actors.buffs.burglarsense.disarm=당신은 반사적으로 함정이 작동하기 직전에 해체했다!
+actors.buffs.burglarsense.desc=밤손님은 함정을 밟았을 때 초인적인 반사신경을 발휘하여 작동 직전에 해체할 수 있습니다. 그러나 한번 해체하면 다시 반사신경을 가다듬을 시간이 필요합니다.\n\n다시 반사적으로 해체할 수 있을 때까지 %s턴 남았습니다.
+
+actors.buffs.dwarfarmorbuff.name=과열됨
+actors.buffs.dwarfarmorbuff.desc=당신의 드워프제 동력 갑옷이 엄청난 에너지로 요동치며 증기를 내뿜고 있습니다!\n\n과열된 상태에서, 공격과 이동, 아이템 사용을 비롯한 당신의 _모든 행동은 2배 빨라집니다._ \n\n과열이 끝나기까지 %s턴 남았습니다.
+
+actors.buffs.devotion.name=헌신
+actors.buffs.devotion.desc=던전의 어둠 속에서, 당신과 신성한 빛의 유대는 억눌립니다. 그러나 몇 가지 방법으로 이 어둠을 정화할 수 있습니다 - 저 어둠에 물든 것들을 퇴치하거나, 어둠에 맞서며 경험을 쌓으십시오!\n\n현재 _%s점_의 헌신이 있습니다.
+actors.buffs.devotion.miracles=\n\n_강타_는 시야 안의 대상 하나에게 피할 수 없는 피해를 줍니다. 사악한 대상에겐 더욱 강한 피해를 줍니다.\n\n_열광의 기도_는 당신과 모든 아군에게 열광을 불어넣습니다. 위험에 처하거나 강력한 적을 상대할수록, 매 턴마다 남아 있는 열광을 소모하여 체력을 회복합니다.\n\n_축성_은 장비의 마법 부여와 저주를 없애고 빛의 힘을 깃들입니다. 무기는 공격할 때마다 착용자와 아군을 축복하고, 갑옷은 공격받을 때마다 적을 약화시킵니다.
+actors.buffs.devotion.crusader=\n\n성전사는 축성된 무기와 강타로 마법을 시전하는 적을 실명시킬 수 있습니다. 또한 열광의 기도로 치유받을 때마다 신비한 갑옷 효과를 받으며, 위기에 처했을 때 아드레날린 효과를 받습니다.
+actors.buffs.devotion.scholar=\n\n_홍수의 은총_은 신학자 주변에 성스러운 홍수를 불러냅니다. 홍수는 함정을 해체하고, 성수로서의 힘이 사라지기 전까지 사악한 적의 공격과 이동을 늦춥니다.\n\n_화장터_는 신학자 주변에 정화의 불꽃을 불러냅니다. 모든 환경 효과와 언데드는 불꽃 속에서 정화됩니다.
+actors.buffs.devotion.redeemer=\n\n_세례_는 대속자가 적의 어둠을 짊어짐으로써 아군으로 거듭나게 합니다. 오직 하나의 세례만 유지할 수 있으며, 세례받은 대상은 당신이 경험을 얻을 때마다 함께 성장합니다.\n\n대속자는 아군에게 강타를 사용하여 치유해줄 수 있습니다.
+actors.buffs.devotion.need_more_rank=기적을 행하려면 더 많은 헌신이 필요합니다.
+actors.buffs.devotion.smite_prompt=_강타_ - 헌신 15 소모\n\n대상 하나에게 _%1$d_ 피해\n사악한 적에게 _%2$d_ 피해
+actors.buffs.devotion.smite_prompt_crusader=_강타_의 기적\n헌신 15 소모\n\n대상 하나에게 _%1$d_ 피해\n사악한 적에게 _%2$d_ 피해\n마법 쓰는 적에게 실명
+actors.buffs.devotion.smite_prompt_scholar=_강타_의 기적\n헌신 15 소모\n\n대상과 주변 적에게 _%1$d_ 피해\n사악한 적에게 _%2$d_피해
+actors.buffs.devotion.smite_prompt_redeemer=_강타_의 기적\n헌신 15 소모\n\n대상과 주변 적에게 _%1$d_ 피해\n사악한 적에게 _%2$d_ 피해\n아군에게 _%3$d_ 만큼 치유 효과
+actors.buffs.devotion.smite_bad_target=당신을 제외한 시야 안의 대상만 강타할 수 있습니다.
+actors.buffs.devotion.smite_boss=%s은(는) 던전의 어둠에 너무 깊게 물들어 있어, 빛의 강타를 저항한다!
+actors.buffs.devotion.which_enlighten=축성할 무기 또는 갑옷 선택
+actors.buffs.devotion.enlighten=신성한 빛의 힘이 당신의 장비에 깃들었다!
+actors.buffs.devotion.prompt=어떤 기적을 행하겠습니까?\n현재 헌신은 _%s_ 입니다.
+actors.buffs.devotion.choose_smite=_강타_ - 헌신 15 소모
+actors.buffs.devotion.smite_name=강타
+actors.buffs.devotion.choose_zealot=_열광의 기도_ - 헌신 30 소모
+actors.buffs.devotion.choose_enlighten=_축성_ - 헌신 45 소모
+actors.buffs.devotion.cancel=취소한다
+actors.buffs.devotion.zealot_buff_name=열광의 기도
+actors.buffs.devotion.zealot_buff_desc=남은 열광 : %1$d.\n위험 수준 : %2$d.\n%3$d만큼 체력 재생
+actors.buffs.devotion.choose_holy_water=_홍수의 은총_ - 헌신 20 소모
+actors.buffs.devotion.holy_water_desc=이곳의 물에는 성수가 흘러들어 잠시 축복이 깃들어 있다. 악한 존재들은 이곳의 물 속에서 약화되고, 움직이기도 어려워진다.
+actors.buffs.devotion.holy_water_debuff_name=축복받은 성수
+actors.buffs.devotion.holy_water_debuff_desc=성수의 힘에 의하여, 악한 존재들은 공격력과 이동속도가 각각 25%%씩 저하됩니다.
+actors.buffs.devotion.choose_cremate=_화장터_ - 헌신 25 소모
+actors.buffs.devotion.cermate_blob=여기에 정화의 불꽃이 타오르고 있다. 다른 환경 효과는 즉시 정화될 것이며, 죽지 못한 이들에게 안식을 가져다주는 데에도 효과적이다.
+actors.buffs.devotion.choose_baptize=_세례_ - 헌신 60 소모
+actors.buffs.devotion.baptize_prompt=_세례_의 기적\n헌신 60 소모\n\n대상은 아군이 됨
+actors.buffs.devotion.baptize_used=당신은 오직 한 명의 세례만 유지할 수 있습니다.
+actors.buffs.devotion.baptize_bad_target=오직 시야 안의 적만 세례할 수 있습니다.
+actors.buffs.devotion.baptize_cannot_boss=그 대상의 어둠은 당신이 짊어지기엔 너무나 무겁다...
+actors.buffs.devotion.baptize_on=%s(은)는 당신의 세례를 받아들였다!
+actors.buffs.devotion.baptize_injured=당신의 %s(이)가 죽어가고 있다...
+actors.buffs.devotion.baptize_buff_name=세례받음
+actors.buffs.devotion.baptize_buff_desc=층을 오갈 수 있습니다. 당신이 레벨업할 때마다 세례받은 이들도 레벨업합니다.\n이 대상은 현재 _%1$d번_ 레벨업했습니다. _%2$d_의 추가 체력과 _%3$d_의 추가 회피를 얻고, 공격할 때 주는 피해가 _0-%4$d_만큼 증가합니다.
+actors.buffs.devotion.interact_title=귀환 또는 안식
+actors.buffs.devotion.interact_prompt=당신에게 세례받은 대상을 즉시 당신 곁으로 귀환시킬 수 있습니다. 이때 대상은 던전의 어둠을 헤쳐나간 반동으로 잠시 기절합니다. 또는, 대상이 구원받아 안식에 들도록 기도해줄 수 있습니다. 대상은 빛을 따라 던전에서 완전히 사라집니다.
+actors.buffs.devotion.interact_recall=귀환
+actors.buffs.devotion.interact_dismiss=안식
+actors.buffs.devotion.interact_cancel=취소한다
+actors.buffs.devotion.interact_recall_on=당신의 %s(이)가 귀환했다.
+actors.buffs.devotion.interact_recall_fail=당신의 %s(이)가 귀환할 공간이 모자라다.
+actors.buffs.devotion.interact_dismiss_on=당신은 %s의 안식과 구원을 기도했다.
+
+actors.buffs.dwarffocus.name=집중
+actors.buffs.dwarffocus.focused=집중 발동
+actors.buffs.dwarffocus.desc=수도승은 적의 움직임에 모든 집중을 쏟아 빈틈을 파악해냅니다. 시야 안에 적이 있다면 집중하기 시작하고, 이동하는 동안엔 더욱 빠르게 집중합니다. 시야 안에 적이 없다면 집중은 조금씩 사라집니다. \n\n마비되어 있지만 않다면, 집중이 발동된 순간 어떤 공격이든 피할 수 있습니다! 이때 회피에 성공하면 공격해온 적의 자세를 무너뜨려 잠깐동안 마비시킵니다.\n\n앞으로 _%d_턴 후 집중을 발동합니다.
+actors.buffs.dwarffocus.desc_focused=수도승이 적의 움직임에 모든 집중을 쏟아 빈틈을 파악했습니다!\n\n마비되어 있지만 않다면, 당신은 _잠깐동안 어떤 공격이든 피할 수 있습니다!_
+
+actors.buffs.dwarfthunder.name=천둥 충전
+actors.buffs.dwarfthunder.level=%d번째 충전
+actors.buffs.dwarfthunder.blast=천둥 방출!
+actors.buffs.dwarfthunder.desc=천둥기수의 기계화된 팔은 적을 공격할 때마다 천둥의 힘을 충전하도록 개조되었습니다. 천둥이 4번째로 충전되는 순간, 천둥기수 주변에 연쇄 번개가 방출됩니다!\n\n연쇄 번개의 피해량은 기계화된 팔에 비례합니다. 또한 주변에 있는 적의 수만큼 연쇄 번개가 방출되며, 3명 이상의 적에게 방출시켰다면 가속 효과를 받습니다.\n\n천둥 충전은 시간이 지날수록 하나씩 방전됩니다. 현재 천둥은 _%1$d_번 충전되었고, 방전되기까지 _%2$d_턴 남았습니다.
+
+actors.buffs.dwarfnecro.name=영혼 잔여물
+actors.buffs.dwarfnecro.needfuel=사령장인은 적의 영혼으로부터 잔여물을 추출하여, 사령공학 골렘의 동력으로 사용합니다. 새로운 사령공학 골렘을 작동시키려면 10개의 영혼 잔여물이 필요합니다.\n\n현재 _%d_개의 영혼 잔여물이 모였습니다.
+actors.buffs.dwarfnecro.desc=충분한 영혼 잔여물이 모여 사령공학 골렘이 작동중입니다. 골렘은 당신 주변에서만 작동할 수 있고, 평소에는 영체화된 채로 적이 다가오기를 어딘가에서 주시하고 있을 겁니다...\n\n영체화된 사령공학 골렘은 시간이 흐르거나 당신이 경험치를 얻을 때마다 체력을 회복합니다. 현재 체력은 _%1$d_이며, 최대 체력은 _%2$d_입니다. 또한, 사령공학 골렘과 상호작용하면 자리를 바꾸거나 형상을 전환할 수 있습니다.\n\n_수호자 형상_의 사령공학 골렘은 _%3$d_-_%4$d_의 방어력을 갖고, 적의 주의를 자신에게로 돌립니다. 그러나 공격 속도가 느립니다.\n\n_감시자 형상_의 사령공학 골렘은 _0_-_%5$d_의 방어력을 갖는 대신, 비행 상태가 되며 원거리 마법 공격으로 적을 제압하는 데 주력합니다. 
 
 
 ###hero
@@ -301,45 +375,79 @@
 actors.hero.heroclass.warrior_desc_item=전사는 방어구에 붙일 수 있는 _특별한 부서진 인장_ 을 가지고 시작합니다.\n\n인장이 붙은 방어구를 입고 있을 때 천천히 재생되는 방어막을 얻습니다.\n\n인장은 방어구에 옮겨붙일 수 있으며, 1만큼의 강화 수치를 이전할 수 있습니다.
 actors.hero.heroclass.warrior_desc_loadout=전사는 _낡은 소검_ 을 가지고 시작합니다. 낡은 소검은 다른 시작 무기들보다 조금 더 강력합니다.\n\n전사는 3개의 _투척용 돌_ 을 가지고 시작합니다. 투척용 돌은 약한 원거리 피해를 줍니다.\n\n전사는 _물약 보관대_ 를 가지고 시작하여 포션이 얼어버리는 것을 방지할 수 있습니다.
 actors.hero.heroclass.warrior_desc_misc=전사는 음식을 먹을 때마다 약간의 체력을 회복합니다.\n\n전사는 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 치유 물약\n- 분노의 주문서
-actors.hero.heroclass.warrior_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 전사의 두 가지 보조 직업은 다음과 같습니다.
+actors.hero.heroclass.warrior_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 전사의 세 가지 세부 전직은 다음과 같습니다.
 
 actors.hero.heroclass.mage=마법사
 actors.hero.heroclass.mage_unlock=마법사는 마법 막대의 전문가이며, _특별한 마법 지팡이_ 를 가지고 시작합니다.\n\n마법사를 해금하려면 _한 판에서 두 개의 강화의 주문서를 사용하십시오._
 actors.hero.heroclass.mage_desc_item=마법사는 _특별한 지팡이_ 를 가지고 시작하며, 다른 마법 막대를 융합시켜 그 마법을 사용할 수 있습니다.\n\n지팡이는 마법 막대보다 훨씬 더 빠르게 충전되며, 1의 충전량을 더 가집니다.\n\n지팡이는 기본적으로 마탄 마법을 사용할 수 있습니다.
 actors.hero.heroclass.mage_desc_loadout=마법사는 그의 지팡이를 근접 무기로 사용합니다. 지팡이는 다른 시작 무기에 비해 적은 피해를 입힙니다.\n\n마법사는 그의 지팡이에 깃든 마법을 발사해 원거리의 적을 공격할 수 있습니다.\n\n마법사는 _주문서 보관함_ 을 가지고 시작하여 주문서가 불에 타는 것을 방지할 수 있습니다.
-actors.hero.heroclass.mage_desc_misc=마법사는 그가 마법 막대를 사용한 순간 부분적으로 그것을 감정합니다.\n\n마법사는 음식을 먹을 때마다 소량의 마법 막대와 지팡이의 충전량을 얻습니다.\n\n마법사는 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 액체 화염 물약\n- 강화의 주문서
-actors.hero.heroclass.mage_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 마법사의 두 가지 보조 직업은 다음과 같습니다.
+actors.hero.heroclass.mage_desc_misc=마법사는 마법 막대를 사용한 순간 부분적으로 그것을 감정합니다.\n\n마법사는 음식을 먹을 때마다 소량의 마법 막대와 지팡이의 충전량을 얻습니다.\n\n마법사는 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 액체 화염 물약\n- 강화의 주문서
+actors.hero.heroclass.mage_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 마법사의 세 가지 세부 전직은 다음과 같습니다.
 
 actors.hero.heroclass.rogue=도적
 actors.hero.heroclass.rogue_unlock=도적은 그의 _특별한 그림자의 망토_ 를 통한 투명화로 전투의 흐름을 조절하고 강력한 한 방을 먹일 수 있습니다.\n\n도적을 해금하려면 _한 판에서 20번의 기습 공격을 시행하십시오._
 actors.hero.heroclass.rogue_desc_item=도적은 특별한 마법 유물인 _그림자의 망토_ 를 가지고 시작합니다. 그림자의 망토를 사용하여 원할 때 투명화할 수 있습니다.\n\n다른 마법 유물들과 마찬가지로 직접 강화할 순 없으나, 투명화를 사용할수록 강력해집니다.
 actors.hero.heroclass.rogue_desc_loadout=도적은 _단검_ 을 가지고 시작합니다. 단검은 적에게 기습 공격을 할때 추가 피해를 줍니다.\n\n도적은 3개의 _투척용 칼_ 을 가지고 시작합니다. 먼 거리에 있는 적을 기습 공격할 때 추가 피해를 줍니다.\n\n도적은 _벨벳 주머니_ 를 가지고 시작하며, 씨앗과 룬석을 담아둘 수 있습니다.
 actors.hero.heroclass.rogue_desc_misc=도적은 더 먼 거리에서도 숨겨진 비밀과 함정을 찾아냅니다.\n\n도적은 던전에 숨겨진 비밀들을 더 많이 찾아낼 수 있습니다.\n\n도적은 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 투명화의 물약\n- 마법 지도의 주문서
-actors.hero.heroclass.rogue_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 도적의 두 가지 보조 직업은 다음과 같습니다.
+actors.hero.heroclass.rogue_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 도적의 세 가지 세부 전직은 다음과 같습니다.
 
 actors.hero.heroclass.huntress=사냥꾼
-actors.hero.heroclass.huntress_unlock=사냥꾼은 투척 무기의 숙련자로, 무한한 화살을 가진 _특별한 마법 활_ 을 가지고 시작합니다.\n\n사냥꾼을 해금하려면 _한 판에서 투척 무기로 공격한 적 20마리를 처치하십시오._
-actors.hero.heroclass.huntress_desc_item=사냥꾼은 마법의 화살을 무한정 쏠 수 있는 _특별한 영혼의 활_ 을 가지고 시작합니다.\n\n이 활은 사냥꾼이 레벨을 올림에 따라 점점 강력해지며, 개조되거나 마법을 부여받을 수도 있습니다.
+actors.hero.heroclass.huntress_unlock=사냥꾼은 투척 무기의 숙련자로, 무한한 화살을 가진 _특별한 영혼의 활_ 을 가지고 시작합니다.\n\n사냥꾼을 해금하려면 _한 판에서 투척 무기로 공격한 적 20마리를 처치하십시오._
+actors.hero.heroclass.huntress_desc_item=사냥꾼은 화살을 무한정 쏠 수 있는 _영혼의 활_ 을 가지고 시작합니다.\n\n이 활은 사냥꾼이 레벨을 올림에 따라 점점 강력해지며, 개조되거나 마법을 부여받을 수도 있습니다.
 actors.hero.heroclass.huntress_desc_loadout=사냥꾼은 다른 시작 무기보다 빠르게 공격할 수 있는 한 쌍의 _징 박힌 장갑_ 을 가지고 시작합니다.\n\n사냥꾼은 원거리 공격 수단으로 활을 가지고 시작합니다.\n\n사냥꾼은 _벨벳 주머니_ 를 가지고 시작하며, 씨앗과 룬석을 담아둘 수 있습니다.
-actors.hero.heroclass.huntress_desc_misc=사냥꾼은 긴 풀을 밟지 않고 지나갈 수 있습니다.\n\n사냥꾼은 투척 무기를 부서지기 전까지 더 오랫동안 사용할 수 있습니다.\n\n사냥꾼은 주변에 장애물 너머에 있는 적을 감지할 수 있습니다.\n\n사냥꾼은 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 심안의 물약\n- 자장가의 주문서
-actors.hero.heroclass.huntress_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 사냥꾼의 두 가지 보조 직업은 다음과 같습니다.
+actors.hero.heroclass.huntress_desc_misc=사냥꾼은 긴 풀을 밟지 않고 지나갈 수 있습니다.\n\n사냥꾼은 투척 무기를 부서지기 전까지 더 오랫동안 사용할 수 있습니다.\n\n사냥꾼은 주변 장애물 너머에 있는 적을 감지할 수 있습니다.\n\n사냥꾼은 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 심안의 물약\n- 자장가의 주문서
+actors.hero.heroclass.huntress_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 사냥꾼의 세 가지 세부 전직은 다음과 같습니다.
+
+actors.hero.heroclass.cleric=사제
+actors.hero.heroclass.cleric_unlock=사제는 마법과 거리가 먼 대신, 빛의 신앙에 헌신함으로써 기적을 일으킵니다.\n\n사제를 해금하려면 _한 판에서 옌더의 아뮬렛을 얻고 지상으로 돌아가십시오._\n\n이 직업은 _추가 직업_ 입니다. 추가 직업은 기존 직업과 따로 배지를 얻게 되며, 경험있는 플레이어에게 권장합니다.
+actors.hero.heroclass.cleric_desc_item=사제는 빛의 신앙에 헌신을 바쳐 _기적_ 을 일으킵니다.\n\n사제가 레벨업하거나, 각 층에서 충분한 수의 적을 쓰러뜨리면 _헌신_ 을 얻습니다. \n\n사제는 세 가지 기적을 알고 시작합니다:\n\n_강타_ \n시야 안의 적 하나에게 피할 수 없는 피해를 줍니다.\n\n_열광의 기도_ \n얼마나 위기에 처했느냐에 따라, 사제와 아군들이 체력을 재생합니다.\n\n_축성_ \n무기나 갑옷 하나를 골라 신성한 힘으로 축성합니다.
+actors.hero.heroclass.cleric_desc_loadout=사제는 다른 시작 무기보다 정확한 _곤봉_ 을 가지고 시작합니다.\n\n사제는 부활의 힘이 깃든 _앙크_ 하나를 갖고 시작합니다. 다른 앙크와 달리, 이 앙크는 오직 사제만이 사용할 수 있습니다.\n\n사제는 혹시모를 타락의 여지를 예방하기 위하여 가능한 마법을 멀리하기로 맹세했습니다. 따라서, _마법 막대_나 _주문 결정_은 사용할 수 없습니다.
+actors.hero.heroclass.cleric_desc_misc=사제는 음식을 먹을 때마다 식전기도를 올려 잠시동안 축복받습니다.\n\n사제는 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 경험의 물약\n- 저주 해제의 주문서
+actors.hero.heroclass.cleric_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 사제의 세 가지 세부 전직은 다음과 같습니다.
+
+actors.hero.heroclass.dwarf=드워프 생존자
+actors.hero.heroclass.dwarf_unlock= _지옥_ 어딘가에 악마들에게 붙잡힌 생존자가 있다고 합니다...\n\n이 직업은 _추가 직업_ 입니다. 추가 직업은 기존 직업과 따로 배지를 얻게 되며, 경험있는 플레이어에게 권장합니다.
+actors.hero.heroclass.dwarf_desc_item=드워프 생존자는 _양쪽 팔이 기계화_ 되었습니다.\n\n기계화된 팔은 다른 시작 무기보다 빠르게 공격할 수 있고, 강화할수록 피해를 일부 막을 수 있습니다. 그러나 다른 무기로 교체할 순 없습니다.
+actors.hero.heroclass.dwarf_desc_loadout=드워프 생존자는 _기계화된 팔_ 을 무기로 씁니다.\n\n드워프 생존자는 5개의 _충격의 돌_ 을 가지고 시작합니다. 이 룬석은 전기 충격을 일으켜 주변의 적을 짧은 시간 동안 마비시키고 마법 막대를 충전합니다. 이에 더하여, 드워프 생존자는 가속됩니다.
+actors.hero.heroclass.dwarf_desc_misc=드워프 생존자는 전기 충격을 받으면 가속됩니다. 또한 전기 충격으로 인한 마비에 면역입니다.\n\n드워프 생존자는 다음의 아이템들을 감정한 채로 시작합니다.\n- 감정의 주문서\n- 신속의 물약\n- 공포의 주문서
+actors.hero.heroclass.dwarf_desc_subclasses=두 번째 보스를 쓰러트리면 보조 직업을 선택할 수 있습니다. 드워프 생존자의 세 가지 세부 전직은 다음과 같습니다.
 
 actors.hero.herosubclass.gladiator=검투사
-actors.hero.herosubclass.gladiator_desc=_검투사_ 는 근접 공격을 성공시킬 때 마다 연속 타격을 개시합니다. 연속 타격 수치에 따라 특별한 필살기를 사용할 수 있습니다.
+actors.hero.herosubclass.gladiator_desc=_검투사_ 는 전투에 탄력을 더합니다. 무기로 공격을 명중시킬 때 마다 연속 타격을 개시합니다. 연속 타격 수치를 모두 소모하여 빗나가지 않는 필살기를 쓸 수 있습니다. 필살기의 종류는 연속 타격 수치에 따라 달라집니다.
 actors.hero.herosubclass.berserker=광전사
-actors.hero.herosubclass.berserker_desc=_광전사_ 는 받은 피해에 비례해 추가 피해를 입힙니다. \n격노한 상태에서, 그는 탈진을 무릅쓰고 짧은 시간동안 죽음을 유예할 수 있습니다.
+actors.hero.herosubclass.berserker_desc=_광전사_ 는 내면의 분노를 이끌어냅니다. 받은 피해에 비례해 분노가 쌓일수록 더 강하게 공격하고 더 많은 고통을 견뎌냅니다. 완전히 분노한 상태라면, 탈진을 무릅쓰고 격노하여 짧은 시간동안 죽음을 유예할 수 있습니다.
+actors.hero.herosubclass.sealknight=인장기사
+actors.hero.herosubclass.sealknight_desc=_인장기사_ 는 인장의 힘을 일깨웁니다. 2배 빠르게 방어막을 재생하며, 강화 수치와 상관없이 약간의 추가 방어막을 얻습니다. 또한 인장이 붙은 갑옷의 상형문자가 종류에 따라 추가 효과를 얻으며 강화해도 사라지지 않습니다.
 actors.hero.herosubclass.warlock=흑마법사
-actors.hero.herosubclass.warlock_desc=_흑마법사_ 는 적에게 마법 막대를 사용함으로써 영혼 표식을 걸 확률이 있습니다. 표식이 걸린 적들은 물리 피해를 입을 때 마다 흑마법사의 체력과 허기를 충족시킵니다.
+actors.hero.herosubclass.warlock_desc=_흑마법사_ 는 영혼에 낙인을 찍어 흡수하는 흑마법을 구사합니다. 적에게 마법 막대를 사용하면 일정 확률로 영혼의 낙인을 찍습니다. 낙인찍힌 적이 물리 피해를 입을 때 마다 체력과 허기를 회복합니다.
 actors.hero.herosubclass.battlemage=전투 마법사
-actors.hero.herosubclass.battlemage_desc=_전투 마법사_ 는 자신의 지팡이로 물리 공격을 할 때, 지팡이가 흡수한 특성에 따른 추가 효과를 줄 수 있습니다. 또한 피해를 입힐 때 마다 추가 충전량을 얻을 수 있습니다.
+actors.hero.herosubclass.battlemage_desc=_전투 마법사_ 는 지팡이를 더욱 강력한 무기로 개선했습니다. 지팡이를 무기로 적을 타격할 때 마다 추가 충전량을 얻으며, 지팡이가 흡수한 마법 막대에 따른 추가 효과를 줄 수 있습니다.
+actors.hero.herosubclass.transmuter=변환술사
+actors.hero.herosubclass.transmuter_desc=_변환술사_ 는 지팡이에 혼돈의 힘을 주입 합니다. 충전량이 전부 소진된 지팡이를 시전하면 마법이 다른 종류로 변환되며 충전량 하나와 충전 효과를 받지만, 잠시동안 혼돈의 힘이 잔류하여 마법을 뒤틉니다.
 actors.hero.herosubclass.assassin=암살자
-actors.hero.herosubclass.assassin_desc=_암살자_ 는 투명화 상태가 되면 다음 공격을 신중하게 준비합니다. 투명화 한 시간이 길어질수록 더욱 강력한 공격을 할 수 있습니다.
+actors.hero.herosubclass.assassin_desc=_암살자_ 는 점멸 암살법을 터득했습니다. 투명화 상태가 되면 다음 암살을 신중하게 준비합니다. 투명화 한 시간이 길어질수록 더 멀리, 더 강력한 암살이 가능합니다.
 actors.hero.herosubclass.freerunner=프리러너
-actors.hero.herosubclass.freerunner_desc=_프리러너_ 는 이동할 때 마다 가속력을 쌓습니다. 가속력이 높을수록 이동속도와 회피가 증가하지만, 움직이지 않으면 가속력이 급속도로 줄어듭니다.
+actors.hero.herosubclass.freerunner_desc=_프리러너_ 는 신출귀몰한 곡예사입니다. 이동할 때 마다 가속력을 쌓으며, 가속력이 높을수록 이동속도와 회피가 증가합니다. 움직이지 않으면 가속력이 급속도로 줄어듭니다.
+actors.hero.herosubclass.burglar=밤손님
+actors.hero.herosubclass.burglar_desc=_밤손님_ 은 잡도둑과는 격이 다른 전문가입니다. 문 너머를 볼 수 있고, 쓰러뜨린 적으로부터 주변의 비밀을 밝혀냅니다. 또한 함정을 밟아도 작동 직전에 해체할 수 있습니다.
 actors.hero.herosubclass.sniper=저격수
-actors.hero.herosubclass.sniper_desc=_저격수_ 는 원거리 전투의 숙련자입니다. 그녀는 더 멀리 볼 수 있고, 그녀의 원거리 공격은 방어구를 꿰뚫습니다. 투척 무기로 공격한 다음에 그녀는 그녀의 활로 특별한 공격을 시전할 수 있습니다.
+actors.hero.herosubclass.sniper_desc=_저격수_ 는 원거리 전투의 숙련자입니다. 더 멀리 볼 수 있고, 원거리 공격이 방어구를 꿰뚫습니다. 투척 무기로 공격한 다음엔 영혼의 활로 특별한 사격이 가능합니다.
 actors.hero.herosubclass.warden=숲지기
-actors.hero.herosubclass.warden_desc=_숲지기_ 는 자연과의 강한 결속을 통해 긴 수풀 너머를 볼 수 있고, 헤쳐나간 풀을 그녀가 키우는 식물 근처에 자라나게 할 수 있습니다. 그녀가 밟는 식물들은 또한 추가적인 효과를 줄 것이며, 특수 다트는 2배의 내구성을 가집니다.  그리고 잔디는 그녀가 잔디에 서 있을 때 추가적인 방어력을 줄 것입니다.
+actors.hero.herosubclass.warden_desc=_숲지기_ 는 자연과의 강한 결속을 통해 풀 너머를 볼 수 있고, 씨앗을 심으면 근처에 헤쳐나간 풀이 자랍니다. 식물을 밟을 때 추가 효과를 받고, 풀을 밟으면 추가 방어력을 얻습니다. 또한 특수 다트는 2배의 내구성을 가집니다.
+actors.hero.herosubclass.spiritwalker=영혼길잡이
+actors.hero.herosubclass.spiritwalker_desc=_영혼길잡이_ 는 영적인 능력을 깨우쳤습니다. 더 넓은 범위의 적을 감지할 수 있고, 영혼의 활로 적을 공격하면 동일한 피해와 마법 부여 효과를 가하는 영혼 폭발을 일으킵니다.
+actors.hero.herosubclass.crusader=성전사
+actors.hero.herosubclass.crusader_desc=_성전사_는 어둠의 마법과 정면으로 맞서며 헌신합니다. 마법을 쓰는 적을 강타하거나 축성된 무기로 공격하면 잠시동안 실명시킬 수 있습니다. 또한 열광의 기도가 신비한 갑옷 효과를 부여하며, 위기에 처했을 땐 추가로 아드레날린 효과까지 부여합니다.
+actors.hero.herosubclass.scholar=신학자
+actors.hero.herosubclass.scholar_desc=_신학자_는 기적의 이치를 이해하며 헌신합니다. 헌신을 쌓는 속도가 빨라지고, 강타가 대상 주변에도 피해를 줍니다. 주변에 물을 뿌리고 성수로 만들어 악한 존재를 약화시키는 '홍수의 은총', 닿은 환경을 정화하고 언데드에게 치명적인 불꽃을 일으키는 '화장터' 기적을 얻습니다.
+actors.hero.herosubclass.redeemer=대속자
+actors.hero.herosubclass.redeemer_desc=_대속자_는 구원할 여지가 남은 이들을 지켜내려 헌신합니다. 강타를 아군에게 사용하면 치유 효과를 주고, 적 하나를 아군으로 받아들이는 '세례' 기적을 얻습니다. 한 번에 한 명의 세례만 유지할 수 있지만, 세례받은 대상은 층을 오갈 수 있으며 당신을 따라 경험을 쌓아갑니다!
+actors.hero.herosubclass.thunderbringer=천둥기수
+actors.hero.herosubclass.thunderbringer_desc=한때 드워프 군대의 정예병은 _천둥기수_라 불리며, 기계화된 팔을 위협적으로 개조할 권한을 받았습니다. 기계화된 팔로 공격할 때마다 천둥을 충전하며, 4번째 충전은 주변에 연쇄 번개를 방출하고 스스로를 가속시킵니다.
+actors.hero.herosubclass.monk=수도승
+actors.hero.herosubclass.monk_desc=드워프 무술의 달인으로 거듭난 _수도승_ 은 어떤 공격이건 집중하여 피할 수 있습니다. 집중은 시야 안에 적이 있다면 서서히 차오르고 이동할수록 빠르게 차오릅니다. 집중으로 공격을 피하면 적의 빈틈을 포착하여 마비시킬 수 있습니다.
+actors.hero.herosubclass.necrosmith=사령장인
+actors.hero.herosubclass.necrosmith_desc=_사령장인_ 은 드워프 공학에 사령술을 접목했습니다. 적을 쓰러뜨리면 영혼 잔여물을 추출하며, 충분한 양의 잔여물이 모이면 사령공학 골렘을 가동시킵니다. 사령공학 골렘은 수호자 형상과 감시자 형상을 전환하며 전투에 참여합니다.
 
 
 
@@ -414,19 +522,41 @@
 actors.mobs.npcs.wandmaker.intro_warrior=오, 이 우울한 곳을 찾는 모험가가 있다니 얼마나 놀라운 기쁨인가! 이 늙은이를 돕고 싶으면, 여기 부탁이 있네.
 actors.mobs.npcs.wandmaker.intro_rogue=오 신이시어, 놀랐구먼! 아직 이성을 잃지 않은 도적은 본 적이 없으니, 자네는 분명 지상에서 내려온 사람이겠군! 이 늙은이를 돕고 싶다면, 여기 부탁이 있네.
 actors.mobs.npcs.wandmaker.intro_mage=오, 반갑네 %s(이)여! 자네에 대해 마법사 학회에서 이야기를 들은 적이 있던가? 아 신경쓸 거 없네, 그 앞뒤 꽉 막힌 녀석들이랑은 엮이기도 싫으니 말야. 이 늙은이를 돕고 싶다면, 여기 부탁이 있네.
-actors.mobs.npcs.wandmaker.intro_huntress=아 반갑네, 여인이여! 이렇게 깊은 곳에서 친숙한 얼굴을 보자니 놀랍군, 안 그런가? 사실 난 분명 자네 얼굴을 본 적 있는 것 같은데, 확신은 안 서는군... 뭐 어쨋든, 이 늙은이를 돕고 싶다면, 여기 부탁이 있네.
+actors.mobs.npcs.wandmaker.intro_huntress=아 반갑네, 여인이여! 이렇게 깊은 곳에서 친숙한 얼굴을 보자니 놀랍군, 안 그런가? 사실 난 분명 자네 얼굴을 본 적 있는 것 같은데, 확신은 안 서는군... 뭐 어쟀든, 이 늙은이를 돕고 싶다면, 여기 부탁이 있네.
+actors.mobs.npcs.wandmaker.intro_cleric=오... 그래, 자네 눈에는 내가 강령술사랑 한 패로 보일지도 모르겠군. 저 해골바가지밖에 모르는 녀석들과는 엄연히 다른 부류의 마법사니까 안심하게. 이 늙은이를 돕고 싶다면, 여기 부탁이 있네.
+actors.mobs.npcs.wandmaker.intro_dwarf=세상에나, 드워프로군! 내가 기억하는 모습보다 훨씬 창백해서 못 알아볼 뻔 했구먼. 인간은 늙으면 기억이 가물가물해져서 말야. 이 늙은이를 돕고 싶다면, 여기 부탁이 있네.
 actors.mobs.npcs.wandmaker.intro_1=\n\n난 마법 막대를 만들 희귀할 재료를 찾으러 왔네, 하지만 여기서 길을 잃었고, 마법 보호막도 점점 힘을 잃어가는구먼. 곧 여길 떠야할 것 같지만, 그 물건을 못 얻고 그냥 갈 수는 없어서 말야.
-actors.mobs.npcs.wandmaker.intro_dust=내가 필요한 건 _시체 먼지_ 일세. 이러한 장소에서만 나온다는 특별한 종류의 저주받은 뼛가루지. 여기 어딘가에 나무로 막힌 문이 있을 껀데,  그 문 너머에 있을 거라고 확신하지. 하지만 주의하게나. 그 먼지가 가진 저주는 꽤 강력하거든, _먼지를 얻었으면 최대한 빨리 나에게로 돌아와 주게._ 그 저주를 정화해 줄 테니 말야.
+actors.mobs.npcs.wandmaker.intro_dust=내가 필요한 건 _시체 먼지_ 일세. 이러한 장소에서만 나온다는 특별한 종류의 저주받은 뼛가루지. 여기 어딘가에 나무로 막힌 문이 있을 건데, 그 문 너머에 있을 거라고 확신하지. 하지만 주의하게나. 그 먼지가 가진 저주는 꽤 강력하거든, _먼지를 얻었으면 최대한 빨리 나에게로 돌아와 주게._ 그 저주를 정화해 줄 테니 말야.
 actors.mobs.npcs.wandmaker.intro_ember=내가 필요한 건 갓 소환된 불정령에서 얻을 수 있는 _신선한 잉걸불_ 일세. 정령은 조정되지 않은 소환 의식으로 쉽게 부를 수 있으니, 의식의 제단에 양초를 몇 개 가져가면 하나 소환할 수 있을 걸세. 정령은 강하지만 얼음으로 쉽게 제압할 수 있으니, _얼음을 일으키는 아이템을 가져가면 편리할 걸세._
 actors.mobs.npcs.wandmaker.intro_berry=예전에 이 감옥의 한 간수는 _썩은열매 식물_ 을 키웠다고 하더군, 그리고 난 그 씨앗을 필요로 한다네. 하지만 지금쯤 그 식물은 통제불능으로 자랐을 꺼고, 씨앗을 쉽게 얻을 수는 없을 것일세. 썩은열매가 만든 정원은 여기 근처에 있을 걸세. 살고 싶으면 _덩굴에 묶이지 않게 주의_ 하게나. 불을 쓰고 싶겠지만, 불을 이용하면 식물과 함께 씨앗을 태워 버리니 _불은 절대로 사용하면 안 된다네._
 actors.mobs.npcs.wandmaker.intro_2=\n\n그 물건을 내게 가져오면 특별히 이 늙은이가 정성스레 만든 마법 막대를 보답으로 주지! 나 한테 두 개가 있으니, 둘 중 하나 원하는 것을 가져가면 된다네.
+actors.mobs.npcs.wandmaker.intro_2_cleric=\n\n자네는 분명 마법 막대를 휘두르지 않겠다고 맹세했을테니, 대신 _별꽃으로 끓인 물약_을 보답으로 주지! 그 물건은 본격적인 흑마법도 아니니 걱정말게나.
 actors.mobs.npcs.wandmaker.reminder_dust=시체 먼지는 아직인가, %s(이)여? 나무로 막힌 곳을 찾아보게나.
 actors.mobs.npcs.wandmaker.reminder_ember=잉걸불은 아직인가, %s(이)여? 양초 4개를 찾아 의식의 제단으로 가게나.
 actors.mobs.npcs.wandmaker.reminder_berry=썩은열매 씨앗은 아직인가, %s(이)여? 식물로 가득 찬 방을 찾아 보게나.
 actors.mobs.npcs.wandmaker.def_verb=방어
 actors.mobs.npcs.wandmaker.desc=이 늙었지만 정중한 신사는 길을 잃어 약간 난감한 표정을 하고 있습니다. 현재 그는 마법 보호막으로 보호되고 있습니다.
 
+actors.mobs.npcs.necrogolem.name=사령공학 골렘
+actors.mobs.npcs.necrogolem.desc=드워프 공학에 사령술을 접목한 결과물입니다. 솔직히, 대지 정령도 아니고 영혼 잔여물을 빙의시킨 만큼 소름끼치긴 하군요. 그러나 이런 물건을 꺼내들 정도로 절박한 상황이긴 합니다...\n\n사령공학 골렘은 당신 주변으로 다가오는 적을 감지하려 온 힘을 기울입니다. _수호자_ 형상일 땐 적으로부터 당신을 지키며 접근전을 시도합니다. _감시자_ 형상일 땐 적을 제압하는 데 주력하며, 마법 탄환을 발사합니다.\n\n시야 내에 적이 없는 경우, 사령공학 골렘은 영체화하여 당신의 곁을 맴돌 것입니다. 적이 다가올 때까지 말이죠...
+actors.mobs.npcs.necrogolem.interact_title=사령공학 골렘
+actors.mobs.npcs.necrogolem.interact_prompt=골렘의 형상을 전환하거나, 골렘과 자리를 바꿀 수 있습니다.
+actors.mobs.npcs.necrogolem.interact_guardian=수호자 형상
+actors.mobs.npcs.necrogolem.interact_sentry=감시자 형상
+actors.mobs.npcs.necrogolem.interact_place=자리 바꾸기
+actors.mobs.npcs.necrogolem.interact_cancel=취소
 
+actors.mobs.npcs.woundeddwarf.name=드워프 생존자
+actors.mobs.npcs.woundeddwarf.yell=누군지는 몰라도 이 방은 무시하게! 여긴 함정이야!
+actors.mobs.npcs.woundeddwarf.intro_warrior=믿을 수가 없군. 인간이 어쩌다 여기까지 내려온거지? 아뮬렛 때문이라면 부디 조심하게. 저 아래에서 꿈틀거리는 혼돈이 그걸 지키고 있으니 말이야. 자네처럼 강인한 전사조차 여럿 잡아먹은 녀석이지...
+actors.mobs.npcs.woundeddwarf.intro_rogue=악마들의 소굴을 털기로 작정한 도적이라고? 믿기지가 않는군. 아뮬렛이 목적이라면 자네가 가장 주의할 함정은 저 아래에서 꿈틀거리는 혼돈이라네. 시선 하나만큼은 고약하기 그지없는 녀석이지...
+actors.mobs.npcs.woundeddwarf.intro_mage=보아하니, 자네는 우리 도시를 몰락하게 만든 족속들보다 훨씬 강대한 마법사로군. 그럼에도 아뮬렛의 힘을 원한다면, 정신 바짝 차리게. 저 아래에서 꿈틀거리는 혼돈은 수많은 마법사를 타락시킨 녀석이니 말이야...
+actors.mobs.npcs.woundeddwarf.intro_huntress=인간이라기엔 신기한 영혼을 지녔군. 헌데, 여긴 영혼이 거니는 숲에서 너무 먼 장소 아닌가? 아뮬렛을 찾으러 왔다면, 마지막까지 긴장을 늦추지 말게. 저 아래에서 꿈틀거리는 혼돈은 영혼의 화살로도 꿰뚫기 어려우니...
+actors.mobs.npcs.woundeddwarf.intro_cleric=여기까지 자네를 이끌어준 건 빛의 의지인가, 자기자신의 의지인가? 아뮬렛의 의지일지도 모르겠군. 한번 고민해보고 내려가게나. 저 아래에서 꿈틀거리는 혼돈을 마주하면, 자네를 이끌어준 바로 그것을 잃지 말아야 할테니...
+actors.mobs.npcs.woundeddwarf.intro_1=\n\n인간이 이곳에 내려왔다는 건 그 소름끼치는 독재자가 마침내 몰락했다는 얘기겠지. 나는 저항하다가 구울 신세가 될 뻔했지만 불행인지 다행인지 악마들에게 제물로 바쳐졌네. 안타깝게도 다른 친구들은 그대로 정신까지 빼앗긴 모양이군.
+actors.mobs.npcs.woundeddwarf.intro_2=\n\n악마들이 무슨 속셈이었는지는 모르겠지만 내 몸을 가지고 드워프의 몸을 연구한 것 같네. 그 지식으로 얼마나 끔찍한 괴물을 만들어냈을지 모르겠군. 여러 차례 탈출을 시도해봤지만, 결국 보다시피 내 팔이자 무기였던 물건도 아주 작살이 나버렸다네. 이걸 고치려면 _치유 물약_ 정도는 필요하겠어...
+actors.mobs.npcs.woundeddwarf.reminder=아무튼, 구해줘서 고맙네. 자네는 계속해서 내려갈테지? 나는 이 팔을 고치기 전까진 어디로도 못 가겠지만. _팔만 고칠 수 있다면..._
+actors.mobs.npcs.woundeddwarf.desc=드워프 제왕이 대도시의 주민들로부터 생명 정수와 정신을 모조리 빼앗기 직전에, 가까스로 언데드 노예가 되는 운명을 피한 생존자입니다. 덕분에 제왕의 영향력으로부터 자유로운 채로 살아남았지만 그동안 얼마나 격렬히 저항해왔는지, 악마들이 양쪽 팔을 부숴버렸군요.\n\n지금은 몸도 마음도 꺾인채로 그저 주저앉아 있지만, 부서진 팔을 수리할 _치유 물약_이 있다면 그 또한 자신만의 모험을 떠날 마음을 회복할지도 모릅니다!
 
 ###mobs
 actors.mobs.acidic.name=산성 전갈
@@ -581,6 +711,7 @@
 
 actors.mobs.succubus.name=서큐버스
 actors.mobs.succubus.desc=서큐버스들은(고딕 형식의 옷을 입고) 타인을 유혹하는 여인 형태의 악마입니다. 마법을 사용하여 영웅을 매혹시킬 수 있으며, 매혹에 걸린 영웅은 효과가 끝날 때 까지 직접적인 공격을 할 수 없게 됩니다. 서큐버스가 매혹에 걸린 영웅을 공격하면 그들의 생명 정수를 훔칩니다.
+actors.mobs.succubus.cleric=당신은 악마의 유혹 따위에 굴하지 않는다!
 
 actors.mobs.swarm.name=파리떼
 actors.mobs.swarm.desc=치명적인 파리떼들이 성난 듯이 윙윙댑니다. 모든 비마법 공격은 두 개의 작은 파리떼로 분열되지만 공격성은 그대로입니다.
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/items/items.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>x-windows-949
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/items/items.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/items/items.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -30,6 +30,8 @@
 
 items.armor.glyphs.antimagic.name=%s of anti-magic
 items.armor.glyphs.antimagic.desc=This powerful glyph allows armor to defend its wearer against magical attacks as well as physical ones. This magical defence is not affected by the armor's tier.
+items.armor.glyphs.antimagic$sealmagic.name=Absorbed magic
+items.armor.glyphs.antimagic$sealmagic.desc=Sealknight can access the implied intention of the glyph.\n\nThe glyph of anti-magic, absorbs magic from its magical defence. Absorbed magic will automatically zapped toward the enemy that attacks you.\n\nAbsorbed magic zapped just enough to defeat the enemy, and slowly fade away over time.\nAbsorbed magic left : %d.
 
 items.armor.glyphs.brimstone.name=%s of brimstone
 items.armor.glyphs.brimstone.desc=This glyph shields the wearer and their belongings from fire, completely nullifying its damage and negative effects.
@@ -45,10 +47,14 @@
 
 items.armor.glyphs.obfuscation.name=%s of obfuscation
 items.armor.glyphs.obfuscation.desc=This glyph obscures the wearer, making them more difficult to detect.
+items.armor.glyphs.obfuscation$sealcooldown.name=Mist exhausted
+items.armor.glyphs.obfuscation$sealcooldown.desc=Sealknight can access the implied intention of the glyph.\n\nThe glyph of obfuscation, releases the mist of obscure the wearer's presence. Except for enemies attacked the wearer just before, the wearer's presence will 'disappear' for a moment.\n\nOnce release, the mist of obscure need some times to reuse.\nTurns to reuse the mist: %d.
 
 items.armor.glyphs.potential.name=%s of potential
 items.armor.glyphs.potential.rankings_desc=Killed by: glyph of potential
 items.armor.glyphs.potential.desc=This glyph builds energy when struck, granting charge to the wearer's wand when it activates.
+items.armor.glyphs.potential$sealcharge.name=Potential charge
+items.armor.glyphs.potential$sealcharge.desc=Sealknight can access the implied intention of the glyph.\n\nThe glyph of potential, glyphs convert the damage taken into the potential energy. Potential energy imbues your attack, penetrating the enemy's defenses and bypassing emeemy's evasion like a magical attack.\n\nPotential energy is consumed as much as it penetrates the enemy's defenses, and will discharge slowly over time.\nPotential energy left : %d.
 
 items.armor.glyphs.repulsion.name=%s of repulsion
 items.armor.glyphs.repulsion.desc=This glyph rebounds force against attackers, sending them flying back.
@@ -90,6 +96,8 @@
 items.armor.armor.cursed=You can feel a malevolent magic lurking within this armor.
 items.armor.armor.not_cursed=This armor is free of malevolent magic.
 items.armor.armor.seal_attached=The Warrior's broken seal is attached to this armor.
+items.armor.armor.enlightened_name=Enlightened
+items.armor.armor.enlightened_info=You feel protective light from it. This armor weaken enemies when they attack wearer. Also it can't be cursed, enchanted, disintegrated.
 items.armor.armor$glyph.glyph=glyph
 items.armor.armor$glyph.killed=%s killed you...
 
@@ -102,14 +110,15 @@
 items.armor.huntressarmor.name=huntress cloak
 items.armor.huntressarmor.ac_special=SPECTRAL BLADES
 items.armor.huntressarmor.no_enemies=No enemies in sight
-items.armor.huntressarmor.desc=A huntress in such cloak can create a fan of spectral blades. Each of these blades will target a single enemy in the huntress's field of view, inflicting damage depending on her currently equipped melee weapon.
+items.armor.huntressarmor.desc=A huntress in such cloak can create a fan of _spectral blades._ Each of these blades will target a single enemy in the huntress's field of view, inflicting damage depending on her currently equipped melee weapon.
 
 items.armor.leatherarmor.name=leather armor
 items.armor.leatherarmor.desc=Armor made from tanned monster hide. Not as light as cloth armor but provides better protection.
 
 items.armor.magearmor.name=mage robe
 items.armor.magearmor.ac_special=MOLTEN EARTH
-items.armor.magearmor.desc=Wearing this gorgeous robe, a mage can cast a spell of molten earth: all the enemies in his field of view will be set on fire and unable to move at the same time.
+items.armor.magearmor.no_enemies=No enemies in sight
+items.armor.magearmor.desc=Wearing this gorgeous robe, a mage can cast a spell of molten earth: all the enemies in his field of view will be set on fire and unable to move at the same time.\n\nAlso, the battlemage recharge his wands by the number of the affected enemies, and the warlock mark all affected enemies.
 
 items.armor.mailarmor.name=mail armor
 items.armor.mailarmor.desc=Interlocking metal links make for a tough but flexible suit of armor.
@@ -121,7 +130,7 @@
 items.armor.roguearmor.ac_special=SMOKE BOMB
 items.armor.roguearmor.fov=You can only jump to an empty location in your field of view
 items.armor.roguearmor.prompt=Choose a location to jump to
-items.armor.roguearmor.desc=Wearing this dark garb, a rogue can perform a trick, that is called "smoke bomb": he blinds enemies who could see him and jumps aside.
+items.armor.roguearmor.desc=Wearing this dark garb, a rogue can perform a trick, that is called _smoke bomb_ : he blinds enemies who could see him and jumps aside.
 
 items.armor.scalearmor.name=scale armor
 items.armor.scalearmor.desc=The metal scales sewn onto a leather vest create a flexible, yet protective armor.
@@ -129,7 +138,19 @@
 items.armor.warriorarmor.name=warrior suit of armor
 items.armor.warriorarmor.ac_special=HEROIC LEAP
 items.armor.warriorarmor.prompt=Choose direction to leap
-items.armor.warriorarmor.desc=While this armor looks heavy, it allows a warrior to perform heroic leap towards a targeted location, slamming down to stun all neighbouring enemies.
+items.armor.warriorarmor.desc=While this armor looks heavy, it allows a warrior to perform _heroic leap_ towards a targeted location, slamming down to stun all neighbouring enemies.
+
+####AddedPD
+items.armor.clericarmor.name=the Light's advocate
+items.armor.clericarmor.ac_special=EMIT RADIANCE
+items.armor.clericarmor.desc=Now you can _emit radiance_ of the light, to push and blind all enemies in your sight.\n\nYOU ARE THE ADVOCATE. YOU ARE THE ENVOY. YOU ARE THE MESSENGER. TELL THEM WHO IS THE TRUE RULER OF THIS REALM.
+
+items.armor.dwarfarmor.name=dwarven power armor
+items.armor.dwarfarmor.ac_special=OVERHEAT
+items.armor.dwarfarmor.activated=Your armor swings with tremendous energy!
+items.armor.dwarfarmor.already_activated=You are already overheated!
+items.armor.dwarfarmor.deactivated=Your armor is no longer overheated.
+items.armor.dwarfarmor.desc=This dwarven armor is equipped with a huge number of pumps and pistons. When _overheat_ armor's energy core, its mechanism allow the Dwarf Survivor to perform all actions extremely fast for a short time.
 
 
 
@@ -826,6 +847,7 @@
 items.rings.ringofforce.stats=When unarmed, at your current strength, this ring will deal _%1$d-%2$d damage._ With a weapon equipped, this ring will increase damage by _%3$d._
 items.rings.ringofforce.typical_stats=When unarmed, at your current strength, typically this ring will deal _%1$d-%2$d damage._ With a weapon equipped, typically this ring will increase damage by _%3$d._
 items.rings.ringofforce.desc=This ring enhances the force of the wearer's melee blows. This extra power is fairly weak when wielding weapons, but an unarmed attack will be made much stronger. A cursed ring will instead weaken the wearer's blows.
+items.rings.ringofforce.dwarf_desc=Your mechanized arm receives bonus damage equal to half of when unarmed, thanks to dwarven technology.
 
 items.rings.ringoffuror.name=ring of furor
 items.rings.ringoffuror.stats=When worn, this ring will increase the speed of your attacks by _%s%%._
@@ -1035,6 +1057,7 @@
 
 items.spells.spell.ac_cast=CAST
 items.spells.spell.no_magic=You can't cast spells while magic immune.
+items.spells.spell.cleric_no_magic=You have an oath to rejects magic from spell crystal.
 
 items.spells.magicalinfusion.name=magical infusion
 items.spells.magicalinfusion.inv_title=Infuse an item
@@ -1135,6 +1158,7 @@
 items.wands.wand.ac_zap=ZAP
 items.wands.wand.fizzles=Your wand fizzles; it must not have enough charge.
 items.wands.wand.no_magic=Your wand fizzles; you cannot use wands while magic immune.
+items.wands.wand.cleric_no_magic=You have an oath to rejects magic from wand.
 items.wands.wand.self_target=You can't target yourself!
 items.wands.wand.identify=You are now familiar enough with your wand to identify it.
 items.wands.wand.cursed=This wand is cursed, making its magic chaotic and random.
@@ -1213,12 +1237,13 @@
 items.wands.wandoftransfusion.ondeath=You killed yourself with your own Wand of Transfusion...
 items.wands.wandoftransfusion.charged=Your staff is charged with the life energy of your enemy!
 items.wands.wandoftransfusion.desc=A fairly plainly shaped wand, it stands out due to its magenta hue and pitch black gem at the tip.
-items.wands.wandoftransfusion.stats_desc=When used on allies, this wand saps some of your own health to heal or shield them. When used on enemies, the wand briefly charms them while pulling a bit of energy back to you. Hostile undead will be damaged instead of charmed.
+items.wands.wandoftransfusion.stats_desc=When used on allies, this wand saps some of your own health by _%1$d_, to heal or shield them. Healing amount is _%2$d_.\n\nWhen used on enemies, the wand briefly charms them while pulling a bit of energy back to you as _%3$d_ amount of shield. Hostile undead will be damaged _%4$d-%5$d_, instead of charmed.
 
 items.wands.wandofwarding.name=wand of warding
 items.wands.wandofwarding.staff_name=staff of warding
 items.wands.wandofwarding.no_more_wards=Your wand can't sustain any more wards.
 items.wands.wandofwarding.bad_location=You can't place a ward there.
+items.wands.wandofwarding.healed=Your staff heal the wards and sentries!
 items.wands.wandofwarding.desc=This short metal wand has a bright purple gem floating above its tip.
 items.wands.wandofwarding.stats_desc=Rather than directly damaging an enemy, this wand will summon stationary wards and sentries. Wards can be summoned anywhere you have vision, even through walls, but cannot be placed next to each other. This wand can sustain _%d energy_ worth of wards at a time.
 items.wands.wandofwarding$ward.name_1=lesser ward
@@ -1322,6 +1347,10 @@
 items.weapon.melee.assassinsblade.stats_desc=This weapon is stronger against unaware enemies.
 items.weapon.melee.assassinsblade.desc=A small wavy blade made of obsidian, difficult to use despite being lightweight, but deadly if it finds the right mark.
 
+items.weapon.melee.cudgel.name=cudgel
+items.weapon.melee.cudgel.stats_desc=This is a rather accurate weapon.
+items.weapon.melee.cudgel.desc=An Old, but reliable weapon. Many wandering clerics, nameless missionaries use cudgel for self-defense.
+
 items.weapon.melee.battleaxe.name=battle axe
 items.weapon.melee.battleaxe.stats_desc=This is a rather accurate weapon.
 items.weapon.melee.battleaxe.desc=The enormous steel head of this battle axe puts considerable heft behind each wide stroke.
@@ -1338,6 +1367,11 @@
 items.weapon.melee.dirk.stats_desc=This weapon is stronger against unaware enemies.
 items.weapon.melee.dirk.desc=A longer thrusting dagger, gives a bit more steel to plunge into foes.
 
+items.weapon.melee.dwarfarm.name=mechanized arm
+items.weapon.melee.dwarfarm.typical_stats_desc=Typically this weapon blocks 0-%d damage. This blocking scales with upgrades.
+items.weapon.melee.dwarfarm.stats_desc=This weapon blocks 0-%d damage. This blocking scales with upgrades.\nThis weapon is a very fast weapon.
+items.weapon.melee.dwarfarm.desc=A pair of mechanized arms made by a piece of wondrous dwarven technology, once dwarf soldier's standard wargear. Their 'hands' seems unable to wield other weapon, but already fine weapons by themselves.
+
 items.weapon.melee.flail.name=flail
 items.weapon.melee.flail.stats_desc=This is a rather inaccurate weapon.\nThis weapon cannot surprise attack.
 items.weapon.melee.flail.desc=A spiked ball attached to a handle by a length of chain. Very unwieldy, but devastating if it lands a solid hit.
@@ -1386,6 +1420,7 @@
 items.weapon.melee.magesstaff.ac_zap=ZAP
 items.weapon.melee.magesstaff.prompt=Select a wand
 items.weapon.melee.magesstaff.imbue=You imbue your staff with the %s.
+items.weapon.melee.magesstaff.transmute=Your staff transmute into %s!
 items.weapon.melee.magesstaff.conflict=The conflicting magics erase the enchantment on your staff.
 items.weapon.melee.magesstaff.id_first=You'll need to identify this wand first.
 items.weapon.melee.magesstaff.cursed=You can't use a cursed wand.
@@ -1576,7 +1611,8 @@
 items.weapon.weapon.stronger=It is augmented to enhance _damage._
 items.weapon.weapon.enchanted=It has a _%s._
 items.weapon.weapon$enchantment.enchant=enchantment
-
+items.weapon.weapon.enlightened_name=Enlightened
+items.weapon.weapon.enlightened_info=You feel wrathful light from it. This weapon can exorcise wraiths easily, and has a chance to blessing wielder and allies. Also it can't be cursed, enchanted, disarmed, disintegrated.
 
 ###misc items
 items.amulet.name=amulet of yendor
@@ -1603,6 +1639,15 @@
 items.brokenseal.degraded_armor=The condition of this armor is too poor.
 items.brokenseal.affix=You affix the seal to your armor!
 items.brokenseal.desc=A wax seal, affixed to armor as a symbol of valor. All the markings on the seal have worn off with age and it is broken in half down the middle.\n\nA memento from his home, the seal helps the warrior persevere. While wearing the seal the warrior will slowly generate shielding on top of his health based on the quality of his armor.\n\nThe seal can be _affixed to armor,_ and moved between armors. It can carry a single upgrade with it.
+items.brokenseal.sealknight_change=Overwrite the Glyph
+items.brokenseal.sealknight_sure_change=갑옷과 인장의 상형문자가 서로 다릅니다. 둘 중 어느 쪽의 상형문자로 덮어씌우시겠습니까?\n\n선택하지 않고 창을 닫을 경우, 기본적으로 _%s_의 것을 따릅니다.
+items.brokenseal.sealknight_seal_glyph=%s
+items.brokenseal.sealknight_armor_glyph=%s
+items.brokenseal.ac_erase=ERASE
+items.brokenseal.sealknight_glyph=The Glyph Erased
+items.brokenseal.sealknight_sure_erase=Are you sure remove glyph from _%s_?
+items.brokenseal.sealknight_yes=Erase
+items.brokenseal.sealknight_no=Preserve
 
 items.dewdrop.name=dewdrop
 items.dewdrop.value=%+dHP
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/items/items_ko.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/items/items_ko.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/items/items_ko.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -30,6 +30,8 @@
 
 items.armor.glyphs.antimagic.name=항마의 %s
 items.armor.glyphs.antimagic.desc=이 강력한 상형문자가 부여된 갑옷은 착용자를 물리 공격뿐만 아니라 마법 공격으로부터도 보호합니다. 마법 방어는 갑옷의 등급에 영향을 받지 않습니다.
+items.armor.glyphs.antimagic$sealmagic.name=흡수된 마법
+items.armor.glyphs.antimagic$sealmagic.desc=인장기사는 상형문자에 함축된 의미를 일깨울 수 있습니다.\n\n항마의 상형문자가 막아낸 마법 피해는 잠시동안 갑옷에 흡수되어, 당신을 공격한 적을 향해 자동으로 방출됩니다.\n\n흡수된 마법은 정확히 적을 쓰러뜨릴 수 있는 만큼 방출되며, 시간이 지날수록 빠르게 소멸합니다.\n현재 _%d_만큼의 마법이 흡수되었습니다.
 
 items.armor.glyphs.brimstone.name=유황불의 %s
 items.armor.glyphs.brimstone.desc=이 상형문자는 착용자와 그의 소지품을 불로부터 보호하여, 화상 피해와 부정적 효과를 완전히 막습니다.
@@ -45,10 +47,14 @@
 
 items.armor.glyphs.obfuscation.name=흐릿함의 %s
 items.armor.glyphs.obfuscation.desc=이 상형문자는 착용자를 눈에 잘 띄지 않게 합니다.
+items.armor.glyphs.obfuscation$sealcooldown.name=연막 소진됨
+items.armor.glyphs.obfuscation$sealcooldown.desc=인장기사는 상형문자에 함축된 의미를 일깨울 수 있습니다.\n\n흐릿함의 상형문자는 연막을 뿜어내어, 당신을 제외한 모두의 시야를 차단합니다.\n\n다시 연막을 뿜어내려면 _%d_턴의 시간이 필요합니다.
 
 items.armor.glyphs.potential.name=전위의 %s
 items.armor.glyphs.potential.rankings_desc=사망 원인: 전위의 상형문자
 items.armor.glyphs.potential.desc=이 상형문자는 공격받을 때 전기 에너지를 충전하며, 발동할 때 착용자의 마법 막대에 충전량을 제공합니다.
+items.armor.glyphs.potential$sealcharge.name=전위 충전
+items.armor.glyphs.potential$sealcharge.desc=인장기사는 상형문자에 함축된 의미를 일깨울 수 있습니다.\n\n전위의 상형문자는 받은 피해를 전위 에너지로 전환하여 당신의 공격을 충전합니다. 전위 에너지로 충전된 공격은 방어력을 관통하고 더욱 정확해집니다.\n\n전위 에너지는 방어력을 관통한 만큼 소모되며, 시간이 지날수록 방전됩니다. 현재 _%d_만큼의 에너지가 충전되었습니다.
 
 items.armor.glyphs.repulsion.name=반발의 %s
 items.armor.glyphs.repulsion.desc=이 상형문자는 공격자를 튕겨내며, 뒤로 날려 보냅니다.
@@ -90,6 +96,8 @@
 items.armor.armor.cursed=당신은 악의로 가득 찬 마법이 이 갑옷에 깃든 것을 느낍니다.
 items.armor.armor.not_cursed=이 갑옷에는 악의적인 마법이 없습니다.
 items.armor.armor.seal_attached=전사의 부러진 인장이 이 갑옷에 붙어 있습니다.
+items.armor.armor.enlightened_name=축성된
+items.armor.armor.enlightened_info=이 갑옷으로부터 당신을 지켜주는 빛이 느껴집니다. 이 갑옷에 깃든 빛은 당신을 공격한 적의 힘을 약화시킵니다. 또한 이 갑옷은 저주나 마법 부여, 폭발, 함정의 영향을 받지 않습니다.
 items.armor.armor$glyph.glyph=상형문자
 items.armor.armor$glyph.killed=%s에 의해 죽었습니다...
 
@@ -102,14 +110,15 @@
 items.armor.huntressarmor.name=사냥꾼의 망토
 items.armor.huntressarmor.ac_special=유령 칼날
 items.armor.huntressarmor.no_enemies=시야 내에 적이 없습니다.
-items.armor.huntressarmor.desc=이 망토를 두른 사냥꾼은 유령 칼날을 만들어 날릴 수 있습니다. 각각의 칼날들은 사냥꾼의 시야 안에 들어온 적 하나를 추적하여, 그녀가 현재 장비한 무기에 비례한 피해량을 줍니다.
+items.armor.huntressarmor.desc=이 망토를 두른 사냥꾼은 _유령 칼날_ 을 만들어 날릴 수 있습니다. 각각의 칼날들은 사냥꾼의 시야 안에 들어온 적을 하나씩 추적하여, 현재 장비한 무기에 비례한 피해량을 줍니다.
 
 items.armor.leatherarmor.name=가죽 갑옷
 items.armor.leatherarmor.desc=그을려진 몬스터의 가죽으로 만든 갑옷입니다. 천 갑옷 만큼 가볍지는 않지만 훨씬 더 나은 보호 효과를 제공해 줍니다.
 
 items.armor.magearmor.name=마법사의 로브
 items.armor.magearmor.ac_special=대지 융해
-items.armor.magearmor.desc=마법사는 이 진귀한 로브를 입으므로써, 대지 융해 주문을 사용할 수 있습니다. 시야 내에 들어온 모든 적들은 불이 붙으며 움직일 수 없게 됩니다.
+items.armor.magearmor.no_enemies=시야 내에 적이 없습니다.
+items.armor.magearmor.desc=마법사는 이 진귀한 로브를 입으므로써, 대지 융해 주문을 사용할 수 있습니다. 시야 내에 들어온 모든 적들은 불이 붙으며 움직일 수 없게 됩니다.\n\n또한, 전투 마법사는 대지 융해로 영향받은 적의 수만큼 마법 막대를 충전하고, 흑마법사는 대지 융해로 영향받은 적 모두에게 영혼의 낙인을 찍습니다.
 
 items.armor.mailarmor.name=사슬 갑옷
 items.armor.mailarmor.desc=금속 고리를 서로 엮어 만든 갑옷으로 단단하지만 유연한 갑옷입니다.
@@ -121,7 +130,7 @@
 items.armor.roguearmor.ac_special=연막 폭탄
 items.armor.roguearmor.fov=당신의 시야 안의 빈 공간으로만 이동할 수 있습니다.
 items.armor.roguearmor.prompt=이동할 지역을 선택하세요
-items.armor.roguearmor.desc=이 어두운 의복을 입은 도적은 "연막탄"이라는 비술을 사용할 수 있습니다. 그를 볼 수 있는 모든 적의 눈을 가리고 원하는 지역으로 이동할 수 있습니다.
+items.armor.roguearmor.desc=이 어두운 의복을 입은 도적은 _연막탄_ 이라는 비술을 사용할 수 있습니다. 시야 내에 들어온 모든 적의 눈을 가리고 원하는 지역으로 이동할 수 있습니다.
 
 items.armor.scalearmor.name=미늘 갑옷
 items.armor.scalearmor.desc=강철 미늘들이 가죽 조끼에 엮여져 유연하지만 견고한 갑옷을 만들었습니다.
@@ -129,7 +138,19 @@
 items.armor.warriorarmor.name=전사의 강철 갑옷
 items.armor.warriorarmor.ac_special=영웅의 도약
 items.armor.warriorarmor.prompt=도약할 지역을 선택하세요
-items.armor.warriorarmor.desc=이 갑옷은 매우 무거워 보이지만, 이 갑옷을 입은 전사는 원하는 방향으로 영웅의 도약을 사용할 수 있습니다. 전사가 착지한 곳 주변의 모든 적을 강타하여 기절시킵니다.
+items.armor.warriorarmor.desc=이 갑옷은 매우 무거워 보이지만, 이 갑옷을 입은 전사는 원하는 방향으로 _영웅의 도약_ 을 사용할 수 있습니다. 전사가 착지한 곳 주변의 모든 적을 강타하여 기절시킵니다.
+
+####AddedPD
+items.armor.clericarmor.name="빛의  대변자"
+items.armor.clericarmor.ac_special=광휘
+items.armor.clericarmor.desc=이제 당신은 빛의 _광휘_를 내뿜어, 시야 안의 모든 적을 밀쳐내며 실명시킬 수 있습니다.\n\n"당신은 빛의 대변자입니다. 당신은 빛이 보낸 특사입니다. 당신은 빛의 의지를 전합니다. 저들에게 진정으로 이 세계를 다스리는 자가 누구인지 알려주십시오."
+
+items.armor.dwarfarmor.name=드워프제 동력 갑옷
+items.armor.dwarfarmor.ac_special=동력 과열
+items.armor.dwarfarmor.activated=당신의 갑옷이 엄청난 에너지로 요동친다!
+items.armor.dwarfarmor.already_activated=당신의 갑옷은 이미 과열되어 있다!
+items.armor.dwarfarmor.deactivated=갑옷의 과열이 끝났다.
+items.armor.dwarfarmor.desc=드워프 기술로 만들어진 이 갑옷은 엄청난 수의 펌프와 피스톤이 장착되었습니다. _동력을 과열_시키면, 짧은 시간동안 공격, 이동, 아이템 사용을 비롯한 모든 행동이 2배로 빨라집니다.
 
 
 
@@ -826,6 +847,7 @@
 items.rings.ringofforce.stats=현재 힘에 따라 맨손인 상태에서 이 반지는 _%1$d-%2$d 의 피해_ 를 입힐 수 있습니다. 무기를 장착한 상태에서는 이 반지가 _%3$d_ 의 피해를 증가시킬 것입니다.
 items.rings.ringofforce.typical_stats=현재 힘에 따라 맨손인 상태에서 이 반지는 일반적으로 _%1$d-%2$d 의 피해_ 를 입힐 수 있습니다. 무기를 장착한 상태에서는 이 반지가 일반적으로 _%3$d_ 의 피해를 증가시킬 것입니다.
 items.rings.ringofforce.desc=이 반지는 착용자의 근접 공격을 강화시킵니다. 이 반지가 주는 완력은 무기를 들때 비교적 덜하지만, 무기를 들지 않고 공격하면 더 강한 피해를 줄 수 있습니다. 저주받은 반지는 착용자의 공격력을 약화시킵니다.
+items.rings.ringofforce.dwarf_desc=당신의 기계화된 팔은 드워프 기술로 만들어진 덕분에, 맨손인 상태의 절반에 해당하는 추가 공격력을 받습니다.
 
 items.rings.ringoffuror.name=분노의 반지
 items.rings.ringoffuror.stats=이 반지를 장착했을 때, 당신의 공격 속도가 _%s%%_ 만큼 증가합니다.
@@ -1035,6 +1057,7 @@
 
 items.spells.spell.ac_cast=시전
 items.spells.spell.no_magic=당신은 마법 면역 도중 마법을 시전할 수 없다.
+items.spells.spell.cleric_no_magic=당신은 주문 결정을 사용하지 않기로 맹세했다.
 
 items.spells.magicalinfusion.name=마법 융합
 items.spells.magicalinfusion.inv_title=융합할 아이템을 선택하세요
@@ -1135,6 +1158,7 @@
 items.wands.wand.ac_zap=발사한다
 items.wands.wand.fizzles=당신의 마법 막대는 움찔할 뿐이었다. 충전 횟수가 남아 있지 않은 것 같다.
 items.wands.wand.no_magic=당신의 마법 막대는 움찔할 뿐이었다. 마법 면역 상태에선 사용할 수 없다.
+items.wands.wand.cleric_no_magic=당신은 마법 막대를 사용하지 않기로 맹세했다.
 items.wands.wand.self_target=당신은 스스로를 겨냥할 수 없다.
 items.wands.wand.identify=당신은 이제 당신의 마법 막대를 식별할 만큼 충분히 익숙해졌습니다.
 items.wands.wand.cursed=이 마법 막대는 저주받았습니다. 사용하면 혼란스러운 무작위 주문이 발사됩니다.
@@ -1204,21 +1228,22 @@
 items.wands.wandofregrowth.desc=이 막대는 전문적인 솜씨로 조각된 얇은 나무 줄기로 만들어졌습니다. 어떤 방법인지 모르겠지만 이 막대는 살아 있으며 어린 나무처럼 푸르고 생기 있습니다.
 items.wands.wandofregrowth.stats_desc=이 막대를 사용하면 남은 충전량을 모두 소모해 원뿔 모양으로 마법의 재성장 에너지를 발사합니다. 이 마법은 잔디, 뿌리들, 그리고 희귀한 식물들을 자라나게 합니다. "한 생명이 죽으면 또 다른 생명이 태어나는 법... 그리고 영원한 순환은 언제나 계속될지니!"
 items.wands.wandofregrowth$dewcatcher.name=이슬잡이풀
-items.wands.wandofregrowth$dewcatcher.desc=이슬잡이풀은 평소에는 잘 보이지 않기 위해 주변의 잡초로 위장하지만,  이슬을 머금은 주머니로 구분이 가능하다.
+items.wands.wandofregrowth$dewcatcher.desc=이슬잡이풀은 평소에는 잘 보이지 않기 위해 주변의 잡초로 위장하지만, 이슬을 머금은 주머니로 구분이 가능하다.
 items.wands.wandofregrowth$seedpod.name=씨앗주머니풀
 items.wands.wandofregrowth$seedpod.desc=씨앗주머니풀은 예쁘게 보이지만, 그들이 가지고 있는 씨앗은 다른 식물을 뿌리 채 죽이고 난 뒤 가져온 것이다.
 
-items.wands.wandoftransfusion.name=이식의 마법 막대
-items.wands.wandoftransfusion.staff_name=이식의 지팡이
-items.wands.wandoftransfusion.ondeath=당신은 당신이 가진 이식의 마법 막대 때문에 죽었다...
+items.wands.wandoftransfusion.name=수혈의 마법 막대
+items.wands.wandoftransfusion.staff_name=수혈의 지팡이
+items.wands.wandoftransfusion.ondeath=나눠줄 체력이 더이상 없었다...
 items.wands.wandoftransfusion.charged=당신의 지팡이는 적들의 생명력으로 충전되었다!
 items.wands.wandoftransfusion.desc=꽤나 평범하게 생긴 막대로써, 자주색 몸통 끝에 달린 칠흑색 보석이 돋보입니다.
-items.wands.wandoftransfusion.stats_desc=아군에게 사용할 경우, 이 마법 막대는 당신의 체력을 조금 빨아들여 대상의 체력을 회복하거나 보호막을 씌웁니다. 적에게 사용할 경우 대상을 잠깐 동안 매혹시키고 당신에게 약간의 보호막을 씌웁니다. 언데드 적들은 매혹되는 대신 피해를 입을 것입니다.
+items.wands.wandoftransfusion.stats_desc=아군에게 사용할 경우, 이 마법 막대는 당신의 체력을 _%1$d_ 만큼 빨아들여 대상에게 전해줍니다. 대상은 _%2$d_의 체력을 회복하고, 남은 수치만큼 방어막을 얻습니다.\n\n적에게 사용할 경우, 대상을 잠깐 동안 매혹시키고 당신에게 _%3$d의 방어막_을 씌웁니다. 언데드 적들은 매혹되는 대신 _%4$d-%5$d_의 피해를 입을 것입니다.
 
 items.wands.wandofwarding.name=수호의 마법 막대
 items.wands.wandofwarding.staff_name=수호의 지팡이
 items.wands.wandofwarding.no_more_wards=당신의 마법 막대는 더 이상의 수호석을 유지할 수 없다.
 items.wands.wandofwarding.bad_location=그곳에는 수호석을 배치하기에 충분한 공간이 없다.
+items.wands.wandofwarding.healed=당신의 지팡이가 수호석과 감시탑의 체력을 회복시켰다!
 items.wands.wandofwarding.desc=이 짧은 금속질의 마법 막대의 끝 부분 위에는 밝은 보라색 보석이 떠 있습니다.
 items.wands.wandofwarding.stats_desc=적을 직접 공격하는 대신, 이 마법 막대는 움직이지 않는 수호석과 감시탑을 소환해냅니다. 수호석은 다른 수호석과 인접한 공간에 설치할 수 없으며, 이 마법 막대가 동시에 유지할 수 있는 총 수호석 에너지의 양은 _%d_ 로 한정되어 있습니다.
 items.wands.wandofwarding$ward.name_1=하급 수호석
@@ -1326,6 +1351,10 @@
 items.weapon.melee.battleaxe.stats_desc=이 무기는 다른 무기보다 정확합니다.
 items.weapon.melee.battleaxe.desc=이 전투 도끼의 거대한 강철 도끼날은 매 공격마다 상당한 무게감을 줍니다.
 
+items.weapon.melee.cudgel.name=곤봉
+items.weapon.melee.cudgel.stats_desc=이 무기는 다른 무기보다 정확합니다.
+items.weapon.melee.cudgel.desc=오래되었지만 믿을만한 무기. 순례자나 전도사의 호신용으로 자주 쓰입니다.
+
 items.weapon.melee.crossbow.name=쇠뇌
 items.weapon.melee.crossbow.stats_desc=이 무기는 투척용 다트의 피해를 증가시키며, 이 무기에 깃든 마법을 투척용 다트에 실어보낼 수도 있습니다.
 items.weapon.melee.crossbow.desc=이 복잡한 구조의 무기는 화살을 매우 빠른 속도로 발사할 수 있습니다. 그리 권장되지는 않지만, 쇠뇌의 무겁고 단단한 부분 덕분에 근접 무기로도 그럭저럭 활용할 수 있습니다.
@@ -1338,6 +1367,12 @@
 items.weapon.melee.dirk.stats_desc=이 무기는 무방비 상태의 적에게 더 강합니다.
 items.weapon.melee.dirk.desc=더 기다란 찌르기용 단검이다. 칼날을 적에게 더 깊숙히 박아넣을 수 있게 되어 있다.
 
+items.weapon.melee.dwarfarm.name=기계화된 팔
+items.weapon.melee.dwarfarm.typical_stats_desc=일반적으로 이 무기는 0-%d의 데미지를 감소시킵니다. 이 감소율은 강화를 하면 더 확장됩니다.
+items.weapon.melee.dwarfarm.stats_desc=이 무기는 0-%d의 피해를 감소시킵니다. 이 감소율은 강화를 하면 더 확장됩니다.\n이 무기는 매우 빠르게 공격할 수 있습니다.
+items.weapon.melee.dwarfarm.desc=한 쌍의 기계화된 팔. 경이로운 드워프 기술의 일부이자, 한때 드워프 군대의 표준 무장이었습니다. 비록 다른 무기를 들기엔 적합하지 않지만 그 자체로 이미 훌륭한 무기입니다.
+items.weapon.melee.dwarfarm.artificer=기술자는 드워프 기술을 마법과 마법을 절묘하게 어울리도록 합니다. 이제 기계화된 팔은 강화 수치에 상관없이, 강화할 때마다 기존에 부여된 마법을 _보존_ 하거나 _새로운 마법_ 을 부여할 수 있습니다!
+
 items.weapon.melee.flail.name=철퇴
 items.weapon.melee.flail.stats_desc=이 무기는 정확성이 조금 떨어집니다.\n기습 공격을 할 수 없습니다.
 items.weapon.melee.flail.desc=가시 박힌 공이 손잡이에 달린 사슬 끝에 달려 있습니다. 다루기 까다롭지만, 제대로 맞으면 파괴적입니다.
@@ -1386,6 +1421,7 @@
 items.weapon.melee.magesstaff.ac_zap=발사한다
 items.weapon.melee.magesstaff.prompt=마법 막대를 선택하세요
 items.weapon.melee.magesstaff.imbue=당신은 당신의 지팡이와 %s를 합쳤다.
+items.weapon.melee.magesstaff.transmute=당신의 지팡이는 %s로 변환되었다!
 items.weapon.melee.magesstaff.conflict=상반되는 마법이 당신의 지팡이에 깃든 마법을 지워 버렸다.
 items.weapon.melee.magesstaff.id_first=먼저 마법 막대를 감정해야 합니다.
 items.weapon.melee.magesstaff.cursed=저주받은 마법 막대를 사용할 수 없습니다.
@@ -1576,7 +1612,8 @@
 items.weapon.weapon.stronger=그것은 _공격_ 을 강화하기 위해 증강되었습니다.
 items.weapon.weapon.enchanted=_%s_ 이/가 깃들어 있습니다.
 items.weapon.weapon$enchantment.enchant=마법
-
+items.weapon.weapon.enlightened_name=축성된
+items.weapon.weapon.enlightened_info=이 무기로부터 진노에 찬 빛이 느껴집니다. 공격할 때마다 착용자와 아군을 축복할 확률이 있으며, 악령을 쉽게 성불시켜줍니다. 또한 이 무기는 저주나 마법 부여, 폭발, 함정의 영향을 받지 않습니다.
 
 ###misc items
 items.amulet.name=옌더의 부적
@@ -1603,6 +1640,15 @@
 items.brokenseal.degraded_armor=이 갑옷은 너무 열악해서 인장을 붙일 수 없다.
 items.brokenseal.affix=갑옷에 인장을 붙였다!
 items.brokenseal.desc=갑옷에 붙여 용맹함을 자랑할 수 있는 밀랍 인장입니다. 세월이 지나 인장의 무늬는 닳아 버렸고 중간 부분은 부러졌습니다.\n\n고향의 보물인 이 인장은 전사의 인내력을 돕습니다. 인장을 붙임으로써 최대 체력에 더하여 갑옷의 품질에 비례하는 추가 방어막을 얻을 수 있습니다.\n\n이 인장은 _갑옷에 붙일 수 있으며, 여러 갑옷에 옮겨 붙일 수 있습니다._ 또한 1만큼의 강화 수치를 이전시킬 수 있습니다.
+items.brokenseal.sealknight_change=상형문자 충돌
+items.brokenseal.sealknight_sure_change=갑옷과 인장의 상형문자가 서로 다릅니다. 둘 중 어느 쪽의 상형문자로 덮어씌우시겠습니까?\n\n선택하지 않고 창을 닫을 경우, 기본적으로 _%s_의 것을 따릅니다.
+items.brokenseal.sealknight_seal_glyph=%s
+items.brokenseal.sealknight_armor_glyph=%s
+items.brokenseal.ac_erase=상형문자 지우기
+items.brokenseal.sealknight_glyph=상형문자 지우기
+items.brokenseal.sealknight_sure_erase=당신의 인장에서 _%s_를 지우시겠습니까?
+items.brokenseal.sealknight_yes=지운다
+items.brokenseal.sealknight_no=보존한다
 
 items.dewdrop.name=이슬
 items.dewdrop.value=%+dHP
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/misc/misc_ko.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/misc/misc_ko.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/misc/misc_ko.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -68,6 +68,8 @@
 badges$badge.unlock_mage=마법사 해금
 badges$badge.unlock_rogue=도적 해금
 badges$badge.unlock_huntress=사냥꾼 해금
+badges$badge.unlock_cleric=사제 해금
+badges$badge.unlock_dwarf=드워프 생존자 해금
 
 challenges.no_food=다이어트 중
 challenges.no_food_desc=음식이 귀중해졌습니다. 아껴서 드십시오!\n\n- 비상 식량과 파스티가 작은 비상 식량으로 바뀝니다.\n- 수상한 고기와 단백과가 생성되지 않습니다.\n- 풍요의 뿔이 생성되지 않습니다.
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/scenes/scenes.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>x-windows-949
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/scenes/scenes.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/scenes/scenes.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -62,19 +62,20 @@
 scenes.titlescene.changes=Changes
 scenes.titlescene.about=About
 scenes.titlescene.support=Support the Game
-scenes.titlescene.patreon_body=Shattered Pixel Dungeon is a completely free game, which means that I depend on support from generous players in order to keep making it.\n\nIf you're interested in supporting me, the best way to do so is through Patreon. Patreon gives me a consistent income source, and allows me to give something back to those who support me!\n\nPatrons get exclusive blog posts every week which let them know about what I'm working on before anyone else!\n\nYou can take a look at my Patreon page for the most up to date information about benefits, Thank you for your consideration!\n\n(Patreon rewards are only available in English)
-scenes.titlescene.patreon_button=Patreon Page
+scenes.titlescene.patreon_body=Added Pixel Dungeon is a _unofficial fork_ of Shattered Pixel Dungeon, focus on apply every update from ShatterdPD and add uniques content. Likewise, this means that I also depend on support(include feedback, opinion, etc.) in order to keep making this fork.\n\nIf you're interested in supporting me (or _00-Evan_, brilliant developer and author of ShatteredPD) the best way to do so is through Patreon. Patreon allows me to give something back to those who support, and gives me a consistent income source!\n(This is very GRATEFUL because I'm not a full-developer nor programming major, and tuition fees of Korean universities are extremely murderous!)\n\nYou can take a look at my Patreon page for the most up to date information about benefits, and don't forget check 00-Evan's updates on ShatteredPD! Thank you for your consideration!\n\n(Patreon rewards are only available in English and Korean)
+scenes.titlescene.patreon_button_shattered=Patreon Page for _ShatteredPD_
+scenes.titlescene.patreon_button_added=Patreon Page for _AddedPD_
 
-scenes.welcomescene.welcome_msg=Shattered Pixel Dungeon is a roguelike RPG, with randomly generated enemies, levels, items, and traps!\n\nEach run is a new challenging experience, but be careful, death is permanent!\n\nHappy Dungeoneering!
-scenes.welcomescene.update_intro=Shattered Pixel Dungeon has been updated!
-scenes.welcomescene.update_msg=This update significantly improves and expands on enemies in the first two regions of the game!\n\nThere are three new enemies, and the first two bosses have both received major improvements.\n\nBe sure to check out the changes list for full details.
-scenes.welcomescene.patch_intro=Shattered Pixel Dungeon has been patched!
+scenes.welcomescene.welcome_msg=Welcome to Added Pixel Dungeon, which is unofficial extended version of Shattered Pixel Dungeon!\n\nThe goal of this fork is applying updates from SPD (as quickly as possible) and adding a variety of contents!\n\nHappy Dungeoneering!
+scenes.welcomescene.update_intro=Added Pixel Dungeon has been updated!
+scenes.welcomescene.update_msg=This update includes one unlockable class, third subclass for all basic classes, and little buff for warriors!.\n\nBe sure to check out the changes list for full details.
+scenes.welcomescene.patch_intro=Added Pixel Dungeon has been patched!
 scenes.welcomescene.patch_bugfixes=This patch contains bugfixes.
 scenes.welcomescene.patch_translations=This patch contains translation updates.
 scenes.welcomescene.patch_balance=This patch contains tweaks to game balance.
 scenes.welcomescene.patch_msg=This patch also contains some small tweaks and performance improvements.
-scenes.welcomescene.what_msg=It seems that your current saves are from a future version of Shattered Pixel Dungeon!\n\nTread with caution! Your saves may contain things which don't exist in this version, this could cause some very weird errors to occur.
+scenes.welcomescene.what_msg=It seems that your current saves are from a future version of Added Pixel Dungeon!\n\nTread with caution! Your saves may contain things which don't exist in this version, this could cause some very weird errors to occur.
 scenes.welcomescene.lang_warning_title=Incomplete Translation
-scenes.welcomescene.lang_warning_msg=Some of the new content from this update has not yet been translated.\n\nSome phrases may be written in English.\n\nThe translation teams are working to resolve this and a full translation should be patched in soon.\n\nThank you for your patience.
+scenes.welcomescene.lang_warning_msg=Some of the new content from this update has not yet been translated.\n\nSome phrases may be written in Korean.\n\nThe developer is working to resolve this, but only Korean and English can be translated.\n\nThank you for your patience.
 scenes.welcomescene.continue=Continue
 scenes.welcomescene.changelist=Changelist
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/scenes/scenes_ko.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/scenes/scenes_ko.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/scenes/scenes_ko.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -62,19 +62,20 @@
 scenes.titlescene.changes=변경
 scenes.titlescene.about=소개
 scenes.titlescene.support=게임을 지원하기
-scenes.titlescene.patreon_body=Shattered Pixel Dungeon은 완전히 무료인 게임으로, 이는 제가 너그러운 플레이어들의 후원에 의지하여 게임을 계속 만들어감을 의미합니다.\n\n만약 저를 후원하는 데에 관심이 있으시다면, 가장 좋은 방법은 Patreon을 이용하는 것입니다. Patreon은 제게 지속적인 수입을 제공하며, 또한 저를 지원해 주시는 분들에게 무언가 보답할 수 있게 합니다.\n\n후원자분들은 매 주마다 누구보다도 빠르게 제가 현재 하고 있는 작업에 대한 전용 블로그 게시물을 받아보실 수 있습니다!\n\n제 Patreon 페이지를 둘러보시면 후원을 통해 얻을 수 있는 혜택에 대한 가장 최신 정보를 얻으실 수 있습니다. 후원을 고려해 주셔서 감사합니다!\n\n(Patreon 혜택은 영어로만 제공됩니다.)
-scenes.titlescene.patreon_button=Patreon 페이지로 이동
+scenes.titlescene.patreon_body=Added Pixel Dungeon _"추가픽던"_ 은 Shattered Pixel Dungeon _"녹픽던"_ 의 비공식 확장판으로, 녹픽던의 업데이트를 지속적으로 반영하면서 다양한 콘텐츠를 추가하는 것이 목표입니다. 이는 저 또한 마찬가지로 후원에 의지하여 이 확장판을 계속 만들어감을 의미합니다.\n\n만약 저를 후원하는 데에 관심이 있으시다면 (또는 뛰어난 개발자이자 녹픽던을 만든 _00-Evan_ 을 후원하시려면), 가장 좋은 방법은 Patreon을 이용하는 것입니다. Patreon은 후원자 분들께 무언가 보답할 수 있게 해주고, 무엇보다 제게 지속적인 수입을 제공해줍니다!\n\n(이는 굉장히 감사한 일입니다. 저는 전업 개발자도 프로그래밍 전공자도 아닌데다... 대학교 등록금이 어디 조금 비싼 편입니까)\n\n후원자께선 개발이 진척되는 상황을 가장 먼저 보고받을 수 있습니다!\n\n아래에 저와 00-Evan의 Patreon 페이지로 가는 링크를 마련해두었습니다. 후원을 고려해 주셔서 감사합니다!\n\n(Patreon 혜택은 영어와 한국어로만 제공됩니다.)
+scenes.titlescene.patreon_button_shattered=_녹픽던_ Patreon 페이지
+scenes.titlescene.patreon_button_added=_추가픽던_ Patreon 페이지
 
-scenes.welcomescene.welcome_msg=Shattered Pixel Dungeon은 무작위로 출현하는 적들과 아이템, 그리고함정이 도사리고 있는 던전을 돌파하는 로그라이크 RPG입니다!\n\n매 플레이마다 새로운 도전이 기다리고 있습니다. 하지만 조심하세요. 한번 죽으면 그걸로 끝이니까요!\n\n즐거운 플레이 되십시오!
-scenes.welcomescene.update_intro=Shattered Pixel Dungeon이 업데이트되었습니다!
-scenes.welcomescene.update_msg=이번 업데이트에서는 게임의 첫 두 지역을 크게 개선하고 또한 적들의 종류를 늘렸습니다!\n\n세 종류의 새로운 적이 등장하며, 첫 두 마리의 보스에 대해 대규모 개선이 이루어졌습니다.\n\n변경사항을 열어 모든 세부 내용을 꼭 확인해 보시기 바랍니다.
-scenes.welcomescene.patch_intro=Shattered Pixel Dungeon이 패치되었습니다!
+scenes.welcomescene.welcome_msg=Added Pixel Dungeon은 Shattered Pixel Dungeon의 비공식 확장판입니다!\n\nShattered Pixel Dungeon의 업데이트를 반영하면서 다양한 콘텐츠를 추가하는 것이 목표입니다.\n\n즐거운 플레이 되십시오!
+scenes.welcomescene.update_intro=Added Pixel Dungeon이 업데이트되었습니다!
+scenes.welcomescene.update_msg=이번 업데이트에서는 새로이 해금 가능한 직업과, 기존 직업의 3번째 세부 전직, 그리고 약간의 전사 상향이 이루어졌습니다!
+scenes.welcomescene.patch_intro=Added Pixel Dungeon이 패치되었습니다!
 scenes.welcomescene.patch_bugfixes=버그 수정이 있습니다.
 scenes.welcomescene.patch_translations=번역 업데이트가 있습니다.
 scenes.welcomescene.patch_balance=게임 밸런스의 수정이 있습니다.
 scenes.welcomescene.patch_msg=이 업데이트는 몇가지 자잘한 수정과 성능 향상을 포함합니다.
-scenes.welcomescene.what_msg=현재 저장된 게임은 Shattered Pixel Dungeon의 나중 버전에서 나온 것입니다!\n\n현재 버전에 등장하지 않는 요소들이 충돌을 일으킬 수 있으니, 조심하십시오!
+scenes.welcomescene.what_msg=현재 저장된 게임은 Added Pixel Dungeon의 나중 버전에서 나온 것입니다!\n\n현재 버전에 등장하지 않는 요소들이 충돌을 일으킬 수 있으니, 조심하십시오!
 scenes.welcomescene.lang_warning_title=미완성된 번역
-scenes.welcomescene.lang_warning_msg=이 업데이트로 추가된 몇 가지 항목이 번역되지 않았습니다.\n\n몇몇 문장이 영어로 나타날 수 있습니다.\n\n번역팀이 이를 해결하기 위해 작업 중이며 조만간 완전한 번역을 볼 수 있을 것입니다.\n\n기다려 주셔서 감사합니다.
+scenes.welcomescene.lang_warning_msg=이 업데이트로 추가된 몇 가지 항목이 번역되지 않았습니다.\n\n몇몇 문장이 한국어로 나타날 수 있습니다.\n\n개발자가 이를 해결하기 위해 작업 중이나, 오직 한국어와 영어만 지원될 것입니다.\n\n기다려 주셔서 감사합니다.
 scenes.welcomescene.continue=계속
 scenes.welcomescene.changelist=변경사항
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/windows/windows.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>x-windows-949
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/windows/windows.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/windows/windows.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -149,4 +149,9 @@
 windows.wndwandmaker.dust=Oh, I see you have the dust! Don't worry about the wraiths, I can deal with them. As I promised, you can choose one of my high quality wands.
 windows.wndwandmaker.ember=Oh, I see you have the embers! I do hope the fire elemental wasn't too much trouble. As I promised, you can choose one of my high quality wands.
 windows.wndwandmaker.berry=Oh, I see you have the berry! I do hope the rotberry plant didn't trouble you too much. As I promised, you can choose one of my high quality wands.
+windows.wndwandmaker.cleric=오오, 약속한 물건을 가져왔군! 이걸 얻는 일이 악행이나 본격적인 흑마법은 아니었으니 안심하기나. 약속한대로 내 별꽃으로 끓인 물약을 주지.
 windows.wndwandmaker.farewell=Good luck in your quest, %s!
+
+windows.woundeddwarf.potion=믿을 수가 없군... 내가 환각을 보는건가? 
+windows.woundeddwarf.end=자네로군! 이 지옥통에서 혼자 살아남기도 힘들텐데, 자네가 보여준 친절과 강인함은 잊지 않겠네. 자네라면 저 아래 움튼 혼돈을 뿌리채 뽑아버릴지도 모르겠군! 우리가 그러한 것처럼 바보짓은 하지 말게나- 녀석이 뭐라 지껄이건 말이야.\n\n덕분에 나도 마음을 다잡기로 결심했네. 자네가 활약하는 걸 보니 아직 내게도 기회가 있는 것 같군. _다시 모험을 떠날 준비를 해야겠어..._
+windows.woundeddwarf.farewell=부디 승리하기를 바라네, %s(이)여!
Index: core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/windows/windows_ko.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/windows/windows_ko.properties	(revision 4aa6b1788cc23c9a6eed6bfe52d4a82986b6b0ac)
+++ core/src/main/resources/com/shatteredpixel/shatteredpixeldungeon/messages/windows/windows_ko.properties	(revision dd57759228828419c136c0f8c8f07cc21c9a2ed2)
@@ -7,7 +7,7 @@
 windows.wndchooseway.message=어느 길을 선택하시겠습니까?
 windows.wndchooseway.cancel=나중에 결정
 
-windows.wndclass.mastery=마스터리
+windows.wndclass.mastery=세부 전직
 
 windows.wnddocument.missing=해당 페이지 없음
 
@@ -149,4 +149,9 @@
 windows.wndwandmaker.dust=오오, 가루를 가져왔군! 유령들은 걱정하지 말게나, 내가 상대할 수 있으니. 약속한대로 내 질 좋은 마법 막대 중 하나를 주지.
 windows.wndwandmaker.ember=오오, 잉걸불을 가져왔군! 불정령들이 상대하기에 너무 까다롭진 않았나 모르겠군. 약속한대로 내 질 좋은 마법 막대 중 하나를 주지.
 windows.wndwandmaker.berry=오오, 열매를 가져왔군! 썩은열매 나무 때문에 위험에 처하지는 않았나 모르겠군. 약속한대로 내 질 좋은 마법 막대 중 하나를 주지.
+windows.wndwandmaker.cleric=오오, 약속한 물건을 가져왔군! 이걸 얻는 일이 악행이나 본격적인 흑마법은 아니었으니 안심하기나. 약속한대로 내 별꽃으로 끓인 물약을 주지.
 windows.wndwandmaker.farewell=당신의 모험에 행운이 함께하기를, %s(이)여!
+
+windows.woundeddwarf.potion=믿을 수가 없군... 내가 환각을 보는건가? 
+windows.woundeddwarf.end=자네로군! 이 지옥통에서 혼자 살아남기도 힘들텐데, 자네가 보여준 친절과 강인함은 잊지 않겠네. 자네라면 저 아래 움튼 혼돈을 뿌리채 뽑아버릴지도 모르겠군! 우리가 그러한 것처럼 바보짓은 하지 말게나- 녀석이 뭐라 지껄이건 말이야.\n\n덕분에 나도 마음을 다잡기로 결심했네. 자네가 활약하는 걸 보니 아직 내게도 기회가 있는 것 같군. _다시 모험을 떠날 준비를 해야겠어..._
+windows.woundeddwarf.farewell=부디 승리하기를 바라네, %s(이)여!
\ No newline at end of file
diff --git android/src/main/assets/avatars.png android/src/main/assets/avatars.png
index b267f9bd2b909891f7040aa610478e8978db15b1..b9a990376124478c8073b714d949a3437ea04e28
GIT binary patch
literal 5510
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
IM6N<$f`(kJ82|tP

diff --git android/src/main/assets/badges.png android/src/main/assets/badges.png
index b6525046233965369387cbd40f27f9c6dff30d3d..5cc9473393c4acbf0f1b4fb627c0040b064ef95a
GIT binary patch
literal 9143
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
MsyZrFN;cvD2kr>j!T<mO

diff --git android/src/main/assets/banners.png android/src/main/assets/banners.png
index 49b1f6f053a9d3c5524cfd26bccdf6be9e2f4edb..bef3420aa4c615f91a90880a77fd20dca3a16363
GIT binary patch
literal 17715
zc$_qQWl&sAxbz~yoj`CWBsjs{Eogw??(U1j0>Nc*2<{f#mf$YI-4>VN?z&&zd++yS
z>eTaNrcU+rGu=I>PNb@`EG8NW8UO&ml$VoI0|4Lv{|ywRe-C}vGRyxeH#J!aK=lOK
z;lBdWN?b`C0H}*Ye=&LYuSRv2({Td;uzLR+a0H*e1_A(5!}3z%8eWE{*{E6M-?PtE
zS_S2;-brXnh~elUhLgWTjfRdTP3vTRBg(>cxoO!%DhSM@V$Ul>I2wNVS=!4kPzdhy
z?wjp-CnJG}ml}dtj|)%797IP)EnlM}a1Il0ertx^yMJFReqKM@%{kw{R{5UY!MJ}f
zy05WVMRGg3@s{bkNcolm#V4XasOGRp<7ieeMsNCCks`DBA<}$0(LS62F+nzwIgO5d
z;UkZ(y?qp}vR~bp?)CiF!sBSED<U4`K%5Xl4uRGTj~Bcou0r{=qM@%L31k&zgAq#a
zGnpZAOUdS=99#WK)qnk(W)7Zc5?r}f;i%w)d~l!nI0T;8P2B^S5M!L}**FN0Xw8{I
zhZklTOA2Vt;Y?>^T@;rYS&J9`Z=xcJ4>lDp%eHKP1m(AeCUrxD>lGG=q<yA#sdl(_
z+>!^!_HelN#|WjCV}=bqYAD=T`g360D-`CDeBy`)rP6fhjIF2Jh~M`6in4h6(O>D7
zK!P?QzjPW4aM>J9{qkAu9<R5;WM@!oEfjPcNo(%eKm;}}CF<=hS3QHHseFw1WWF$l
zyfzbBp_01RWP02`NBlkM+=5cOjME+Qs8XysBdqmT`MK1x0TY(kKX}5j!uSKt-<ucZ
z(#h-_B`!RUa_o#-Jy-Ds6<YMktsf(xfkXFtgVgTE$V{^7+t?zhnM-!&cYVcU+OyD2
zA<AL{8)-j*fTH4R+ao~(52N?UV%Z5K4=47XU+a%M{Yx@)Pg4I69cK42nQ!g@%@=$I
zrLv_!zm3PU<|ScOdl1LMw9kgvIl(T6AqIn#?v+N8N^E0<_H_lW44Dm%K*?c66}DCW
z1ihMI+()QwIk!<2SF4DMB$?QkC-t=ThwHL3mg9wLH_r3iJ(hj}cyXs3avBfkdQl~N
zqdFm+!vIs{$nQzm(}|wHh=6thM~gf-Vd@3UGo~l_nhyT@4F>=kU@^5qU_YF55;m?<
z8gX~8bTsmWI}WVgLZ!72TVRWf-)}F3m$KD-2g&lWc$17G`*pXpI13~fj1<q=^j5Un
z#)3*BrrfDA%zBT>^Yv}xIReAnTjIG5UAEd_2Ai3Sy0nwi;{Kfud?jnhnfILU5osD=
z&!z~$_{K`AAC6hh4N#$3<x!y}ybtDkC_0?EY$gLe*+DG%11J5C5;ZP&gKDeWuSPPi
zs<f|q_XHv5`t%MkotBr?QXGbhwE8xM8Cb6FksS?k_uTzlJ2;mi9&KA~wB~=1>ilZ6
zD-5_$2y)qpt_al7)zyXE-rl-23*nETq#_RNuqzUa)^+^#GaG~`z1_E+lTp2~v*~4J
z7QKd&Dc3Z04g;<hhP_=%KSH^FO@wRDC+5+3yP!5f8XUP+;C6ctKubYG<bob2OW@0$
zAt&Ffx~8F=w~t7@ei9r(nCLsnwpXv$UF&bf-q@3@gB8oq1U$kvD#F(XiS$u_>y~QS
zS-;TjMzY4~k}C@zRglKI1GYAX)QNc=SKT~UU1TSV<dX#Yf4$-VBq%D*`fWRotfl`p
zU|!>jq;8ay$SbiR;B&_McqCJ31$cAX+gX{ly2t<6*tW2sc}_JLLp(dPzCIx-@?AZe
zD*u03DDx>L%9Jj))%)>k!b)4_Q7CKx?!CwCa;Lu__Vn*gk*=*vqse~M7k=S-h8|3|
zCb}}sD=DqG-$J%PtfmFtPbAv_4^;d96MR>S5Ql*^DD+tN)d32*JzZ^?wHPNv!M?7a
zWH#M4tglwywij}dOi{VN&u;aU&l>DAK8nVmQlauLsF2kc&XP3LU$edu1_0qHpob|{
zdd*L{-BAxi!_0v<!WqiVHt_OH6@?9>PP5y|x>tKC$dU#|4V)pIq4}oT{kqs;4yf_-
z%SJwj#jmXG7ri{`T$=!_q`bt>V!EA`^&_ai7W`6GjQr&5wMJASZYssWqM5N8GOHS$
znqg*0o8)3BG!MNNTCJI#j|21juj4IH*iDDi+SP<;cHMTuqg(i{%aX3NCTnivBvf@e
zWFl|9(55O_aXgKe^v^#QnYfVA9(~M<`lD+eSGrE#rHP!BQ3GyB6@H@t><R>~B|M+!
zrrRV$eS%&x;jG1juLx8tw8JfuCky`_WM9a;YXWXF;lko`{5`%Wnwo#P=8blI-zIZn
zTUU|DGQ|5)p5_OGio3VVKcxPb!u1%V7<oYZOw!qPkW-w$u*lygC!Zny(hlEM=)^<A
z&VZ$}(Pm`>IvZS_dCIg%^~DEx(o!7WpMH6V1lwonkLOy^25cUMOG<z4o=BZud*_=L
z7NzFeb`}M6<LLHPdBcFH@e7ZhCrdqg&R$OIrggC*s&WeGjAdM50uy1OHiXPxUV*~w
z4X|)Y9SaFVeSB4$p-Fs$zU?EgLN>N)M~r8@ZV$h=PByH(^He>@Wt#9+to=PwX<GvM
z!hbr1FBtSy4)~q`#Z~TlFTt~>fZ`VOUEdbq>(WAD%?%S(A#6~AwZ%Nyo+0AV+tW_Z
z<Oy>cm5ZhCi^M{AElP`~%p3;59ErWSrp76G$+GTN-g!XZ^>9C_<EZQ(J{sCaf0|Y#
z%Qcpo&?+>C>e_Zm-}n8Kp^!`?LC>>Y3o3hP|KQO$ufn?07Xy%%Le--!kc?n1&9~}~
zijlyh3ch^aMI*Z=*d~CY?~5A|7IOSE{zfD|!<Vb(5k=#)B|vewLYR!p8UMLp-};<-
zeTd@9#>+-Hs}h!7(D57wR$gT-^5;r9tbeWRZW(~mzv%xZo!tap^39s~6*}M*3PIk&
zPJ6(|!V&Lc7)K4E+ZHwQcnlM(a<1p@z&7#B7w=s+DB10+N3^~P7suh<Xotc;FON2(
zsM!2Z+@)(&4S~0bS!}SZ*Mme~QT>R|dnaxa9<ZlLQO_!eca%J*n~9=C=3o3*@*S7!
zivvJc>nR=nR<mJMXInZ7q95DZD?s^;ui}&my<xYRYlUv9AWaYX=Zo0p027alS?#X7
z@4SvL+Uwj0E4uXMT|#YSqJj2yb^}5EDnF!;CY=39V%h>?PM)e?Tv%9Gs?<vqZ9vzV
z8-7cTHnU*w4WnE=;E%V9tb0ELo(RXWbIZ4(Qh(#_U}@|YCXwr=$zj$SlE1va8$&IS
zoR}AuRmCGir_-FU9hG97aMeV-z1r#mW>v2_8n(V~`nAPRXS!m?LsnU#aC8oj@h3FS
zSMj+5%U4#amFi@GT+wK$BZ)$Cz_x@`MEF)3wk=h`-NM2`su`Hyas*eF%w>du?R9ex
zrHG`2+^e?jqFu#b+CxvueX(dS_p$r+tSdm|TxfZ(20cR8iavs9hiDG2R(g(T0$|NH
z`RSq-&%3Hm?BS_L%~AkaUhj>zlm+y$&Ce-*8Oz%n0dJHp3v&qC54X#jey35N^Srnh
z92<9!WGgFM6GoM-6DomRIxEU{7qf(>b6%rQFLW~{IlBAX*3jqio#*0YXEeem1|pdS
zt%0)KX)V!*KR*7k9K9~@Ya(oXAVS&0$Py6@aRFBGW;1vy<a|F}3wbY-6(}s}iGVoO
zSo!I7o`bVziP)pr*Sf>La@Kq{We9=&s8e+=@F?-h=gkHN1~rbWzw7?SnQSAzJ#>`9
z$Z1(=?X6K`YGYOfg3ZRhx)TPvR5ri~N~+RgHJI$yS>PJ^J%2-b`s1c3>kk>DiP+KQ
z=DZtRs$HccHI>QgD=6e4%K{8nS2xs&<ZFom(h*ISr56?!hi{%3>zD?raoQA5)J-c}
z9zT@^)Wl)OTxEB0(Sn^&5>w;ij*x|KeL?--!b+@+W|Nf9ad&$jX>SVtSS){D*k_BU
zG8tEFArACJqXoLJky{@K2Xc-1!#QS9H%gkX3F$448)O?ewtFjJZFk+wYCU9H+gSUN
z?D9W`%qAA9jSNJpZ=utpBxc66Y#_b#xvgKz{yC$Qe~xa1%qY9ay<Hobjs-gVMRYAo
zpUd~h8~}IkpL>J@#~u>G9M0uzcWTD~zj~s&NN^0S1>DLwz%@_GvM)9^m20;R=Wm)b
zUucaX?1A$YvUkszGM{V|0@oaL*tb^%X~+Q;0GT&jB+naASodhcYWz#W$(O><aF<;k
zgO}B>)|%)EjK((@^5{$jqrv7kEcw$es4b`DSTZjdRMGpoJgpyepS#HPox-WNySSBJ
z#<1M)jO88W0%-YfsNQHN1(vG}8%Bg5ACly)izG(I0rfJALety=j{O`3<bVP!O!u&<
z>17?f35c6rbKIht9W{^g^)mZdB7x_ntoH?5wlhzI)}r;sS?Vt8pd72_9DT1Tc~vUn
zJWac9>2B<V7O#vSn|{+T*!6>*jMJTj0jF)D9VO?264_(}&!P78=lo$N@!4|qx}`7n
z>8&dMBQx})tEfYN4!WLnJgql6tDR(9x^QGdY^Ad4tA(cL1$6iKDrEhEW>Nxy+-x12
zp>f%le~IPG+}3D%;{p!d93`Hm7MtzTjt^G+a}tG5Y9-ey^mv{!GnVEYUQ*cAkeEso
zO^U~mm}3doBJjN_XnWu=toy`gvF>_@oRLP3b+Me8EGO?5nky!Op7(LJxBcK<YLl#N
zf{=qTDmEp$Bp(zer^agTf4=E@J~m+!ptj$OvJoY^o9B?UHf{DWs&8@e+JTx>FT2*<
zzL)h&RLV4sVg5pKL!h}jWdkNP!v4PCpMV)YHVy85!)D<5B=aI1_;o7I?utApy-Vlj
z9VouHHI28$6E^)$t6Fy+=IM218?d%$w%LZL_BZ8^39doT#foe6IB9`Pc=O4*OdQL7
zyfIzg!ZfFfdlUHTHiDE;rU>Cc+3*E73YTk)gz8P!O7szKnWgiqJ~igXszN8@>g8nf
z#_OK}g;av;;IkyG9X^*&xpXVCXd$9auNL<uyg6r9pSBprxN3S^oGVRK9E^@r@2g#e
z*FxQ5c1_=@A0MPMwzfYb-9{)xa0Y&@qfvu1`IiAwY-s{0y7oSJzhqR?#Zh>AJPAGu
zxplpM5Pe!JcJkXH<!3F}9w6E(Rx~^;79IPX%B_@2Ia%q`>Sa$I<4RRt6Ox+xt^IuJ
z^x#rj=871t2c!Ie(QC=7*|b?7K7ySM?^(UBIVzjgBN6esL0<-@oGotN&2}dPdtUQg
ze;THZdoO`knb%?mI=-*&`tFfl(QJ`Yp3AP@M|>DSf_$UsUML&q(U$QR9?-@uDL_iB
zjC2Zk;81Cz(?Ldv16*bL1vJN9EL-g^Hec>?eCr26+rzCG!Vz>@g0<fB-S<XMZXr4*
zt(_oaA-ah1Mj6n0G%bDqle)9r3?~S=+qn4`QHp57B-m-?-F+wUsHW>*4TQQ5n5>Fu
z^`a-4hh13mKKhFz503Jl*fk0LmpHI;-ZFN}0wZ8{I@_`jOM2^1sdPn~h|2#gdJTPe
zj@6n^vn9s)%O@%eLl%#YrC3v5dgw9R^Neh@a^mmEq^}#Izt6!d0lRbN+C6iOyFL-s
z3y>3H&OoW(KXa9%FLQ+ay9`rpNDTY)C-P|SmhFD&wR*KsO1BBTv}OSLX*)8|D48az
zu!T>!4ZBm%svV8M<Ou{JaiQK49=E4g$6n~l(x>as0XwHTMsE{~AIgcDe&TYRR&UA}
zF*g0J;QcNbDE1POe#qgbYj_iRiT-<v3!FQojEBBat`$sxDdGPXI`23b!@1^G;r-)h
zxE1mYhDT_DdJn@y;qX=UhiI3Gl;z+kqdtOTzE(lsqRL(u?UHeXoxwP!zvw$O7Q|80
zZAV{hJEpblI=6~Shy%M(s<&mA+Hu26UA_KTWpH4NYR5DKl2V0so0P@I@zG?myMOk*
zs+<6mttyZPrn~T_$=e%l_MdDT5bh)s-0+>AunciDs918<$~mKoOl8kyRNCx-BDdPE
zbFsh30*PP$47mqf8Hhfvt2b|4-lJOxs@Q{<PB1c=?jn}(6P+@MI1#b{dz-2nFVYM+
zR|ik@j%&7WGg^r}jlaCT?SWmN`K+JK?@dXYsebK0rYb>19GvRb{&3$xZ7<UAsnklw
zzN0f0$Jkmo_7M}>ro&Aw<1pL7F4xu!9D90Y*Roo$HSBo<uD^;@=5xZGfnDMP)5Xp@
zg6{4-7I_wAud!u(xG}F$llNsD8WqCfDm_T`)3SclTiy^hLpnfo&AiXdjqj@4UArZN
zTN<01F0cA_%ZkQ{772xqMWB^#jeoB%u!mhF>(q_x<Zo1!Vo6ylWdyTKf+o~iI+LQP
zmx9qSvdNd#9Yfi!_5IhZEJs*t#%J~b_wRmU7KzY4`yGF5_J8(R{6a!*zV0<gA8M72
z;=TIY<!s7rJw7CPdw|8q<m*P0r+9MA8S>5hv!$*t`LajMLbYyNM*iDT^A$O4IUAki
z8mCdpEdT$agiQfUc#Onrj}l1dOwp(lYqk>SQn_zE$&Jw`SAkW)7j4b1$!@b<?rkfi
z*t=3CbER8802e3#S0f{pZy9&mDI7LGS>-yE<5eaA*LggU7#P~5wSivs79=v+Ah^&{
zU1e}Kuf^NO!uEK`X(JbXJ(U^b^TUO#0q-FBbb?&)CDW_XFc#sBLKJwc&1-Q@#A}NQ
z(mt?~z9(tkn`d!coY=PRcwB_>KNn6`1#s{)3#)|gY^-1V_Jb10QvKGmo{?l;0%vIf
zg{N5`y0mG?O06fSb4s~qmPjjJaxq2~yKD8Lt$vbC)T++w1tlp<Bb(6`NK()o!<HK?
z3wMIX(!W30p2ak*?>1BSi?(g=-H)<@hOEkpS35-SmeJ21MDJf0;!>aEa&{N)9D!yZ
z8y|<PyptwYLTfI3oM3agKN-_JsB=1CfBQgBW>wGg2EvU{a=w82<Flh%hw0z(?2e;l
zhP=NVlAV5_JpI6vB4vo!d1Bc99C!YFDB{d)1Jm^I*0u@H8in;y7g6tnlcuoaHkW^!
z4L>?(f7Ui)IU}#i1D$?aKY9P)OPAut(ue`}Z<T4c;Ipuuw5IIr@dS)h)h0|BlL5}V
zM3)2t*K-VcAstjGVv1S;m*}jM;yAfT-V*}XS-WM)?R*bQ;jC@CE8qRlob=9l?hoTY
zm!tI+&FfJ5w=nY!TJKI;6F**Oz}$Ty<*I=@AaOzvFhb6mD&GA5GrGz3FQ<^<cP6_z
zjE|1g*yg*w74~xMUuP^uetkNeNPEcr7*2sIXu$InN}UC__i&Cr45_Arzc09lJH(>m
z6#3$ZQI3Ej?*`yQ?f$k3+W2ucx){JQFCKsImit`kYpl5ynt7x>3_GBW{z8s^dG0kt
ziCK1CRtWasHGC$A^#E+H$4v}@pL84&rk{4|p$y)zNG=}=v{Txc)BGC#nAQg&zGKXV
zYhU?J!Sjx^=Ft1n?>DQ7etvB@$QSBWvO5GTzfR{K5U_v#?ev~K<%4@u493rMgc)me
zWQ&Dj83U%_FhrZy5kB=s5JrhFcUCzg#Cmbp!cXCHRA3DJEnTfOj4ibfDH+PJ9Ef6A
z>j_utc%*z=)N+DccBisqV#`k;;QC&cig!9dAuUyUkf&$T+^!?Dm?^$L{y1IZ9~OEz
zWJqf|&p1Vs@_yXBoHW7T&8|%PWAS%+yOvFA9n_l?1*)r_bRsk4ry>$Wy37xKA2B8q
z`%_jxK0{L0O&}$aMLy3}HC{168}dS^RKs5JQ?T?ZNcuW4oX4iEQ9t$ruJ2G#w}by~
zpM6`z{W(nZs9TVJ1ACS%`Y(D9s+>qb=)tt#T=aOxV{J3p&uo{CKp0eJ9i@@?ZDb8`
zEQ)fI2!n$)yZv`Ph7VHw5SUzW?e4TVn4Ghu_HG_bKFGAo5*`JvB6+O-UB6r7M8Tx0
zMCy7KS^7Q{iH96q`8zk{_;R21xlxpjJCyWCHu)ho@wD>Qvg><b0Lg^rsH2@7FwMwC
zo+EcWQ=hZLCgOqg5MVE>c$}<x^W&(ojbo3@jL`ehmSvXH8rk@ry<qX_Pa6|LQX^LK
z5b)l>2gAEmY0b{|r<vXvIVmkQO{<Fn9KF;M@nJ$tWT<j)rTX*}Gfzz(Er@mi8$w$G
z{L1ts4qSO}OE9e3jBqtlIe)pgN1Dt@-j1+DeSA5Cr44^cs1#icv_z+=Jxs|Ke2&_~
z3mA-<?f7Sg8$K~G7wZc$Q457vesQ75%I*Cj7ZUo2x)`1;g94#VJx<oS{2rY`8fh!9
zDkt2pUNKxD(uG#Wom*P10FV~6(+nSv!p@e}((;riS+nZsaNQe8<deb&_Y=<GO=@0$
zqkKjtcXyWO(=Js5PZvUw_$XK=Q|%^I`u<c{w{ppaTNK&c9AN)Aia`Ay4UFgQwIwjG
z0v8@#R|M)_d;c>`GR?Q15~uyP9(3xx530K)rAs$ELvcwChxooGPqm7%W)&_x{v_9b
zMNY7UZ)*QFeyxaH#bhF(jNZ-4ve(*VE9)Iul#S9VyQ!clzg0YeQ3XD++NB12MOjm}
z_il<#+>?-GJ)&6h3NefS9|cad%Xgy^J6z=1-r@2_C{`h4r=yrV%>6d}c@DF8fw9=>
z9#e1940*lVLg_(b)K22=X@+;@boO~vL2+qIJ_~WDxhWx(JkvbO9>HNy*O}g4zdkvB
zam#^!A>upYEsl!tO1hS%@X<BK3Y<2z#1coJSEv_(tEcA{oG>)q^Zme_QR-Uwh4yk?
z!v--fOzl{+%faTf>oSZMj>YU5a$4>{KOsN{21bu(d3UwluWt~<v3N)=Jah=kJhNDI
zK5R#WHwcYQ)+>)Kp#|2<v=NQUI`XpP3P}vXLL`4Rj`-ZlnmX$-mW2UQ`tl5l3TEdK
zZf=#SnU47=jajifzN^(D>5dG+*rAn&PfuuZ+}8ZaWPJ0J@b!5@EVFnJghnhocK;`L
z&y~Z{)<aIPGh5YGM@ex}O7SUK(2}w)O=~hZgFZx8I)|aM{rB7x<L??(JHhL+)@(^}
zNk@3ygBO!hB&HZHE(&yM;~n?Ec{lD(ZqM$qKs|{2`<<C1?5%8&`aP7PNkr8}<Yv>%
zv4=JqnP_Wn$i82I?~Y@H?yO}$$E`xE+O@_XS|=h>S<}|my!#?yzsfF%43)nY;4}vw
zP!n8H*=VPK#`;pUdRv(u#s`4PpVmc*^#M;SkF8?+xD=;tI{%KF!cIds?tXOD7>_i1
zw|SmAuL%n~&i41NJ+o8Ti-bhFV395WS3h~gF3p>2(L?QcI%W<*@#dpCysbC;ef>(%
zrZiv6M^49Eo&eD~Y?otQLA6N(C`WK@c4L-Ty@0!6XZvp-zHpxi)}}F&3>U9|T*kp9
zPf-4qt)}#jqJTW3X1BJ6&~)b{x82=Ai9D*L;n>k)y!vg?(?)<r;a<<2XR@LdVt;he
z3$Y2jM(GQD61lp?HhTTzWaRg1WOV;V%Jwkwj`wxa$!~WMd(D0NmZ5$Bp#rM=e16ka
z>y`vv9~F*UhdW&b4I#Erunb(4JFOjnw@;`m_2L|soWJ#;5UMGJD-)=^1MZ`?P=IMu
z&{lMK6ZSdiI02_2Po6&90*?hOlMfdudWIfs&GxJ%EJbzj>u1u{@rx8pJYA;uDH4zG
zpep?-VdI{|sNvq>Avi1<B^4FU_aaqF9sh)3nbWFeo-?gwpHllQb&Ydl{PC6Se)oi-
z<A+Ac4dnWHb+@cBc4_XkeYVi~jO=`N{tQxcc4PEejZ4`Z=+~noexMPS;1iS6ght10
z^e(t^h=2E6MIp(1$z8zH;#@1wI(rHGd^Vp+!SSkZnjNL+!YNdbk+sdzzqsi_Rhh7#
zT7*fg7frLZWRlG)Q-$*HvPysRP0m}V=}uK`qcS?!Ed22j&->LSQR#T6#Kegqm<5C_
zv1Mt#ZZ&*=#`xlOD9t%atjvg`NpXuKUiElIrYwxu;yVGjL2bEpAa^{iuA)iJUiWEh
zZn-ylg^Nr(JOiJe1sWvz2}n!l1(R_GH2TU5)I}BJXfbku)0H;)=5TLHS$1hz&&xY9
zogRj^7k#e8Ds>?OjKWA&*a8BAuhy6(5F^To>YEZWms#2KozVpkTmB3-%<Tnw&`8Kx
zPOrVWfnF)}-wvTzv9^(VgK62S;g6^*WuluLZ!wpZx*dcge#4fZK0}9EHehG>j$3_k
zEq}<(R<A3J5~pJpVJT>lO=l%89sj(hL3PtbuZl{B82c*?wz{jHvfNK>g^<<jsmg&|
zgR6(H_YY>HYrT)7Q9NdYnF=${{g!ChJXoKuBT^BNLL`qN-wZ2PEFm_B?_&$c{=4?U
zG!tA~`KD){5hrPP2{zjYiwyaPHnHd#*g-!nHk*|e9eQG+7Ux*)erx{hfOcC}F>SGM
z>N9@?I51w1;(e5fbrt^7;o#uFLNcq~54+0HS}iZl-t3w$4VJ+0Gey5Uq&RLB^m);I
z>`e(}I7x0|bGq>U^npkD1ju$zV7OcbKiW694_&Kk*>BL}0UCXTG7VJYwsD+>(cdQ2
zG&gsxwGN0p5*xx6LG7JQl4QEg8?wU@-*=i$^B$RtzLnf6-z<WUkJ2!OJKk1e6Zeo5
zS7)|YjF$I4dV)RFAq19`e8}Q3CmFgQWaAa4@xbCJ$9Rj9L@i6hRaMn!gsF*vg?nv*
zmjez5$FU`zW@Q=L=+ikg6TxwEKkz-2yT@s<+2iRH^txEH_Im%puz4KCYlJk84R>mH
zysEmmsaQJ|*3qd=6D;wYV=s!$$S-=yleO)raD(vq`MUF^vnJ9&)Ut*nz$QNBT+ax$
zwZBlcm*QKzFGYIZRs$=}Rfoi0_ZoEW>MX9coW9oYdcmHW+Vd;A?5F%7%-Zc2pBW|&
z)Upy(*hVQj@oLW}dNC!ka9!HfaeRRiuxJ^)eX$_g71WcD7^4~O(-@XW-Oh);MvJKw
z8{eRV!^0a3M?5jCioP5IUEsG=f>F)3iK>ndFRw~4_nsB*FRjrL9FAoU>5Xf`cMnMc
zT*Z~A!q8RPNmiEBNR*sIz5R1id$QS6p6Ac5qBgWGKt7bX^9QrZ)#jz~wsY#mnJ%Bt
zJ?+!hYYj{bFDX$v`NGE8vx(9wwA-E|tVVR+0k^YkT}gf`NW$2{R>FpN{ha#v>-576
zlful!+PXHn($|VBGk>AOLrRInSTKfZRE(Tfr8Zf-ruO&mcZjvug?abpIKevNLu>0R
z`!eVDE`lphs}l}wbmGw;IA=Fsv9q=pI@+fxnP#RpK9U+3$C2}z#8ApuygQMJOocct
zySyF9JBZGIb{akSR^8Mr3d^^m{HrPQfWc|L2<ebsyw6$e+G0O9{?`d_aiFIkh7YMq
zX1;5=?R6LO7t0O%Pb_7dcviPq%hLLV#Z|CVT0~#v#uVa+m>167_}j?0tD!C!Xxs4A
zEn-m!Vn79azk$ZQ2;^Dhjx_@dt_q@~TYLj2yCjo+`M&jCYL%$$SwWn(jqN)>KrRb_
zu19#X>ht$bM31ll<Hu_h5z4ij0KJ67i$MFAH#G`NEBfRCj#Mp2{zkGRV$i`c*30B8
z)~3?hJED$pxpR|`KM=G#%?X14ru0Na@u*|%f7RiWaQLu4IQN6=1@rwS^tuoA0J!~h
z=xr;~@$p3c<6>{X2dd*2T;80h_PNNN{D6^b_51?>jn3Q=fL)*tEsZ6cOQp<R;<VCT
zkt}G!=1&EA_Ls&!TZ08#>0_~w=Lr1Yo+F(}YhV$b*2edab2=zSEhp~?M2#M{uumh<
zK1D0qH!0n%;)qyI#@U7J?e#gM^xOC@r?yq^=3^Wc#oB*n0>35b|MCDBX9apFpHAsy
zYvgm<h7UBlCC0hd;;=O6FMC@<ao!g)Hl+HSGm2Vi&4hd_@xnYlTnz}bCwhEz#V)MK
zRf|s0mM$ko9ny$t#m-oW;%CWqjGR3-nYGNfP<5(%`}8KqZ|e$(=Y#9AtHf(;2zGSP
zvC+`=phynNBMNnaA49w<*;Oppk%b<%N4@{VX0Nr<@;L*dFQTBk!rX{qr2HOKgx5H$
z6-#M|=rQ0vSKi+qfe2gvg-AdM<x*fO)s>u!*<`eL+`p!M;WqWVybkSOVu;~;waiuC
zw^3N<fA*Rf%KiR1qgh|XiHu>(WQBS5i%>mfWOA`3avt4lm2KjQbmC^K1h*+4{KB7@
zlT~)fUB&Av+!Ef|uM4v&R5t4J1)TDU-idj?<m+W=2so^fYXwaZ3ur6Wx%z$*8~fPH
z`e*XuEt^?0A_GwPshu*aW)HVD48gPs!r&4&K&lipo$e1!f^cey2OvSN0iV2^y*pPm
zl(3Gc&ZAD=RJ|YTy`a=dlc{V3`R6-<I>~{ONF@TOf_?iEQJrSpSC}GEBnFj0;1<G`
z>#H}PT<)*kbVLf`zn+9bl_7PL*JvTva~AX}$TBnpxa8dz!GXA(1q)U%T*2O4p=;#*
zYf|Ues&_6=q=^2`kuTGzQnn@eSYnnHioQdU9BXTAeRl+AUlkc@nABuj?xs@znBos`
zDLFpV2{Cgrb!5YpA$*zuNWI*%dD~~V9R<%?xnzaltLPpBXc98YAHQwl9Bz7Nf7>A%
zFk~3iVn3L(xtPLK*=E7l%OqPwK;+Unk*lNax7I@eUiVW?A}bQmVyfU@>Fo@d3UR&1
z%Q4gSsYdQ?j-x+L1|>$o7TLO%ws<O;UNRm+G1tyYK$%15Dc*dMyww-(GzmgAVx+GP
zXknGG=xrmOZ6kgfc8#ugQ&l7fgzliICFptkPAcd#nWfuwxX8W8@))iH{<3P|#X6M-
zxN!*7O^a?bx*?yzMjw6_$w1)-0*!XX-ycfIp(0Fh&<igjAm_~nkiDCTuz_`Gz62t8
znW)FL9WSD9Fo(Y|;xcrrNAZ1p4Z;gq%&8iz`~KshbV3e@MTOJBoei#^_vfBsDLiPQ
z0iRPv2@x`D?*@QiJ1->X799Nr>??=(ej&7Zy4&f>UD7L8T}(Ek$f8~eAL=O-pkCg{
zw7%Lrg%5hgt9n0f_D9aXQci)Y+y&w|&{Y{OXiH!t?J1c!u-sABxKBHPpQ!BU-Ea>>
z$pa@%3;wFpvpkCT{$B3z<CxjC%qWyg1hm-MIm&j6)hJ3vK0Og7nprC!hl;9_X9w0<
z?kLPa9|zqZ`08f+Z6ihXVr*cYrcJJi+M3JH)Bz!J^jV)v4skf|SUF^F7b8yT2XD8Y
zTKw<#)l$1}$G_kmH#N%;UFy4~lD>d0LE+_vU@i^|D}c-cW56+BX3T^A)O=;y3lqEW
zOzWg9T25KyF=V$)?2GLioBZ=7T^V9}>IP%xG@jAZ(`E?Tc1_YaVkFFu-a$ScZnvq5
z4(vBX9^NGvP9J7}Qyj@Ra`^@Qx40GDAB@eu`ijD?H`PdDKpg9jH&~#dlZ?-HI(@B%
z>dunr9Wy>)oYF?Zm0T?9q3VM8n}k`&v`rPcMWf^yi$_?*j$8ggWj7T|WkbWL(oa<)
zV(x(TcK(4{_P6%y2~Q?1*83sq$cXb~h<*_;9@Jx|@;h4e@^TfTu>xtoNiAYo9AQNV
z$((4q02a3ac$aRlAYj)zV*ky@JhUYN{i$-1V5>j)Z&QB+;avcHKje}MXl3~4;Hd1g
z?`FTHTh=>DFRi|q#!fDZV#%F|)!7W9nEg6_XV$zYMrTuYU^yO8_PZvAR2CoK1o=_0
zZAvnq1?`a`X3{7><aF<6D{w<E|HM=m+}75H{*3o8gxVmc((0>_S)nXurNf=h+r=h?
z+jSa6;VP3@8oW@}wQmMrfJzmDzQSO%zMoRu0fJ9v3vg5A2m0<`1PY@lw<zg&)|Prq
z`GPvCh;Xve`lDr8aB<7zltukzIMxe>WXUd{wmS*PofX?R(zqh0aKGakL5j>YgUWD!
zMUnQ_`}0T6@^6JCy=vA0nKCG~@vPr=^<An3d`f$OT2>W{qzM%Wn=2LG3>UM<8@HLD
zmpMIeX#Kj8DsmoYWBU`0l2{1>N(t<zK+r02pyFqk{7IW>bCkd2iDg|)q(5-26=?MI
zcHad{ORSFgAU;@DL8D$TRZPoE+li(&{Q|)vSaWDzyTf8ppUnpTwJ{t6U48%^cY4k9
zu8s3<oV`65P|8(7(~@>)mt`Uxx<aq)-v**T7%?v%=*Ap&VJrT=$Ywa=Sfr%h0i0k^
zWxZ1*xZL0eu6Thszh!kh(Z#@+NXiws-$a>+0W`ksDINeIAcl-68$~)Ff;wXZ`;M`-
zK{NE-?PgjiI!WcrSHkIUOXtxMd<zLs@Cw>xG$G5UNYHHN`tDt}&u-wi9Cu%(^+QAd
z+waZy>%MJ&k}h3}t#wv81G$hBLUR;S-2gf70)O0p=Bq~E2-t2~@&%{gq*SnZL1XJ-
zO3Sd+6Oi7WQ_8E;@Y{GjjC&a-Fp1lKrIrTD3EW3PWC|cdh2_3<$z=TeN*4I<kjBr$
zk0tEcpuNLiu0a#|xt#9jWYmoERa|2~$5-4{LvD6<R&T6yh$KAQZ^mUH;rXbdYm2q>
zfswLi>7gdz*7s~*v}=*vZH(hAhI7I>7xuD25L!8vgIOcA_je-un8%6Y;qcT3nf&~1
zS4CtK8hQA^*G7TlF3SNb9=8=lN$5BXhT6qE_qT_y_B?;&L~q&FTNFCY+2C0h?s7C+
z_Lr)`#{U*JMst>G@OFL!t4oAE4^t>BWpCEObADjeKlsIw{<n2M7qlL0XEidx)jlOo
zne}Y#lFMS+v7ZBCiVAByJvH+encA@!U2J8@JpmD^$etA|q_sjIJoiU`3EAvNx+$^*
zp|Qjb^W(Xq8>Kpp)(LubrlH5j$8P6dL%s?#@Q1Q3N@s_q&&N~0x$PE)-**m?dvy~v
zFB%H2Mlqy)*byU#r*ih4XcRVoyxNn#?927L6V39~7<q7nc_I@?Rhyqme!2S4jOsBL
z#~JvslmuDTFXN;rNm;<~L{VnQ_GDU?^43(%g$jk>TAqQxv7lUznGE_(ZAVa0aBV9*
zms!G47o!g~h8((e)^;w^9Ps*NDx`X67RQ3KU%UKzVkPR<^)SG;8V7nY^Sod4Y_k|m
zZF#*DoDqCK^EsK<^Q=Yz5mS~@cs`nfK|I|gGpLq5tNvF1q-8rM_2vpQ5q{%&PH*kr
zT<|=bfe`*zh-~;Pk9Q1T4-6LhSPH<8=Hf`<3oN)8c*tycGibTrj%EvJBT|8UkBvfT
zP&XwAA!x?~|03nFckbxuIE$Bj%R4}1N8|^+f!gLPw6G(Pw<-N^MD9--CR=&ix5PXb
z(w&^GvVoPp&rp^3CS4Qcz?<V}8=zg?sdWF5adIUj$#4{%JgPvsTNL$^ve-Esv;Psj
zXcMyN8e0Q4iqQaQvF5{7o!Z;R4K)=IG2vs08gk$x!%+Vm9DB{KO=HzI;+y_S&A?kJ
zSz2+MU7lE8MZ=U1Ff%Mx@cATQi^98q>+Dwc+BY-6a?H!0<1GXq%rfyM*#XLjxqsGi
zZ+QOx?^u9y;LrThwu?%|49=<A+LK1NIf$M2@uC%M;;{R0_2iuL52e4)DbUmiw@vp%
ztxhGvU+Tmu>2xTuHku>1{5{E6lOx0ega~uNKm+*9-h_=6Vn7Eea(9(&j`9ve18M(4
zG(MloiBmr--ZQ(h_(`EDW!uZus3@$E^7WwFW#@UZ+s2eqH2-EYm`8~y+#2^>ohjEv
zm-X<wdA|wvxbG^ZUchaI(JNlQ+DGptTahUr=unflcxlso!KH4PQq65(s@3FP7^&lf
zY>UjI$-du1sZfc&l#CPjQFJro`Uh3VdJWxRGkR53k`RbmFYY9lp7gC|coIeq3l~6-
z;NqAc0~|2l*dGIa!X@(oI4F$wKlu6W<ZRqlTn>=;8a0_pAjYh>I!Q|jsG6+!<*Paf
z9pa`JcnA8swSUhJi@N;117<8A`a6HO3^}YTIIK!S07o|L9l9h^2Dv)SZa#4aU+<$l
zQ{w~Seb(mr0;EGkB~O&<RYZ;fWjM%UE&nz()feDSaSZTc&Bn5nr6-S^5%`GJR|qer
z9ka`bwH90={xfQ@0%falHcsUZ?UM1Ul0tilRvr34*SU>wt#QwbDG5Y#lWa#{V~VUa
zg<Jpy%sr86rRw5l5Z${=(H(j&bjegd3Y_K2$5)*t4x+dQN$C2602U315uAY$42y8J
z7yyrfN(2-uxYqYmSYL-`v3_N1G)qr^W^8w52D!?AlcG)zawZ`ELqIwi@a0%rKBMu8
zJEn?2s4P#sZ_cJD<vX=LZ}nDcx+ouvX#hFshCi^Edw~-E(S7iyRS&sG#BxBTu<Bt4
zBkxc7UMN-mmXyS-GbB&%%%1!{4RpECmg{9IO-=WMK&4}tH0Vy?X!vl0EhPC1;^nHN
zEYZ-{j5a@Gq{KV7nZJ7WnW#yA=_(@If%Z?XL-M}33^j<)X)zyyLkb3=oAJ2yZ=k?4
zz5Q&<qfJ_+uSzwD3S>bW<LtH1Xeu~Y2xK{C`*m|%2U7ww2_F>&H7>{0h)}OrBz0w!
zAwmi&8I85JTdfD@jK6jAX|J?#VgCFzh&%5XVjjkjoB=Thjgr##H64!gs2H{X;+hgx
zw`msKl0Qlu?YrNsM*!{FO*wW;Ied`MYulMRvT?ttB$kUlV?g#yDL(+ErlaH%`sodY
zU5WC20MTLTga32?3#nB>N`^j9M_TaV>-&=HvVh~q#g`*8e|l}2fc03ptm>^l`=uAA
zcd%}wdpiBn$8|2S6qQNB@FuyKxhj=%R!~RzFXhcf^Hb0-GR`A>aMC7grvPq<kl0w{
zpn_ZhO#)s40+EPDdp?4(Puym6#KR*bQ2DV6;Zr)C6ipM}zldclV-7(f7N@m8Mx4V9
zDHOGFA(@7gLQ--E^o2(mm0sT&2C}|mzeA;+5CB{a9r~NAN+Gi=()Bhe157ILRb}%m
z2jT{%MZeH-&B0wT^x4YQbB7d-M9J4<Ms=eaGdh#O1rIF^p)8hnc>?6$<cchhjsSR7
z0Hd*D)|f7knGhh!a^QZR{!z$PsEBT$w-&-OfO?SFoiRudiv2HrVxS4Q8OVhM>9|nS
zPy}op@&~XENwV9L;a95+nPhlQNi@VXLg;-UOI^^kmsg5J`-I`Vd<1NM8DqvTh?WBb
zZ2Dd^?`BIkml()sW22O04Mf${@2D;d=D!TsI*<}V96qh=Cw!qzXqDWr`k-kp&`Lwm
z-%nd3^kecFGXLQ9PH!8B+!S4QgPG}rlM*zz{GeR+ok|<~N}&T9RA!}dS)8SW6D=!J
z;Ju&Nbo#Iho!SSaSG_>4qRC$uhf|s_j64LGE-O9hD@T~@9mft%0f)ML4rq$RHd{Kg
zdyRKCq~FK-ZJ_QBj!t8B^O+tVv4)>lcpyH8I(i*iIFT5iZ`}bXa-qeA#o1~VOLEau
z2PcdHube-D@QjULL-P)MZ{|YFA2<Z@yXW|)dBk4kRD4fz_hzyH8Z$C8#u+NvS=_PF
zb}%^uB3I;iMIBr)fhOOnRfTe(`vM#lJ4Hax95GIHf$CN~13H1i@9z@G#oMJy9@#1+
zD9}Mo@*sgv1oqlmBt_p`l2o!$EObiMgsg%Z6Ncl}*pTzK>$hbe-ZDKrUmo;C6C6HL
zJ{>DOKsx>5S>LB8?jho6e+pnyJO<3kQ@=#cK%nNCk&UOb_0zI$b<Tvw$8}2{#+nbw
z`4h@YlP%hgS?{F6GJFI8A$!vFCEK}-@XrG~(H}+}dC>o|xpRWrE?k$t2Nm-J2tWsj
z68WJ+MT<N~7=hEEtj5!00!ZxnZG~I?sXB5VFw8nD$|zJthfm1=M$1a{NdMC!?6WH5
z-#h2qt>z;I9ex^pZzQX|085e3U7zdQuRh%$d>s3|LfzwH-5+jq<F=P9+u}Eo<%86S
zS!WeEYfRj?=>3NhqIBF;;!-r<%FjEpc|78wBlV~+SZ#8!Ns~ZbXvhf=U?(U3cFDkn
zIA~RYo&4?2LvVzqK1t>C>&y2qBZdq%3L;5W!(2j~te7(m<4kcZmnKlwr%h>A7Dei_
z2hjs3(V^ym+lh>ooZY?K!S=^+BZL)tnJhS|u&jTel*}u_h}YbUvOZ?R1oQK%1&*BW
zkL4@z(27te)mTM}60hdALL5e20VJAdd~`8G-nF2I*M_y=QX^N-%Hv&p$@T|)<UEC-
z|NceEH&g&jSp*uOIU995EcdFcJ~yM$$RSLJ*syS(=VqP|P<14xvMCyUHqjw-T3b04
z5YTSDr_?KBs>1ZC)_l?PZQ)kUx;uUimMe0c>w}x}t}4gB0E-RO!`RM&Nen7C!8+{M
zCigF*Z~f!?Pr(~!_fxL9NE$*`IW8p|*aJmF;glX4F1cU$H6;?1Gq@(=+VlIUF)tf2
zD}OpHXMpdRNU%w2vb<jYye);X2({GO=dn)c$-H$vKK{*tQHwMB*(Jysl!YV6Ns`0q
zO^!6E+y{%r82N379v5Aw{fs(@K>nM8vLqoyQxp@4Ka_@or{UcHqeRPuR-*Uj=NB<3
zQvOdCovo-r%B#)SfC|-*r&Mnn49d=~ooV#n7`;G?qICy|G{C}dSX2ZugZFQH-e;7K
zU5C1MlyAGfH3kn4@Xe31UGCSpz60c)?!d&tKp;xQFnGkKKqKhKU@3ocBl|nqWZB}&
zmDFSp-D$lo-^-y}P!R=}E7E4OL3Vbv8Tx%Q8r97dh2BNTbB}{4TRLvYV=_BNJ}`6A
ztr+#XC@Jn*@2VsvU7A0kH08DvETL`1aDSy==a6w1IFxHqSg`*wP~;d#AXv_P*d`g_
zlgH*IJ{rhT7QlF9b3eu$rsLSTceGt8cKvx*$!sg~or|4NucZ4zQ0>5UNQezHGkR}5
zJ3%8FnLX5cvi_aIn!<k0&TQQE1~xN`-X?2T1`z(+OG4|+Fn!?p805Of>q)-(`fQ`^
z(eAM#t+Izf<r5nAC7YLhP^PeNDlb7LL5TnsfklMUa|ZGol$?M68|B?YLGf9SPTa%k
zKO6Tsipcth^Z=I1INv-vk-fkSjumy>0&uZx!PI{)l#{j#VkGvkH47df7R!2*J(3nC
z3k2&f*oU(Qi=~qJ1h!pZt9(X7s-%M3vL>T}T#_+ml;EWbcRmT&_pCC!@}N%G%MuON
zRq3HZv2@cifQ+b5wJN_6Bevt_QhX)>8ZRq#&7K}58`j6kO<#gdq0lwaY)xg6Lvu<i
zS=}{;j#SdWi(Hf0uRLAff0`ICt~wt!?SnQ~$4b#0TH-Z5<h;PT*ig@|eS4#{9EE%3
zbNthru1^7Vaz)j1vvAs%vn|AXkdC{zji-qkB*uyA9EY=h>Cx3C7qi!7axTn*4E8$E
z%6MHA%16adFQ{yo1gE|D;7dI!Sfx(Gi{~q4`n@)X;<QiDYaxa1ZgZnjA2XTRT=9OH
z>RA#~s$eRYifBh`Q4XRYg6gF#GETYRtt)`>Z3^xNCd|48tP$i|c5@uCVem?zDafhP
zi=t73(@XfAAwwQqK+|v;K)Q=ez>QPmZQpu%`bI57DWk(jJF|Spbo#f>GPH5_+}BwQ
znk#6|*oL^``)}F*XkWa}31A8!95M`zDIt{E=Hgnb15Lp+a>F=A!j@e7zG+j(vS4c@
z>ssn|j43A{cljLyBXnkMp3_(jw{pCX_Kuwm`$Mtdk<;K7Wvt+i_zE9rfu;Y}Bm>Zr
zqDj8IjEw&f(-1ShH@bdd`eO*<Q@_Q@M3x8&z4RGNy$beX<I6-6=)9Ng!aQiR7`N<7
zWguU0nfwuvTU+4V^iSrIogJLvw|w8xB($oXYXx&O|2?;4UiVf`%SAeWO}&G_7@+!R
z=gTg!MQtMdbLFnn{8>U4!FsiI?7jFy*5fFZFWy$3^6e4VqiXAzBHi)*m#LK2DO?+0
z?~vn*USm!Or5O*M7?f9@IhLK*UoIkDJC*pXq2gCYS7-NGuPkI?VG2v67C+o}FU3;j
z`4lY?1w99}f~1e+I>-QF2%A<t%sIFIzDFoaSAim1{Yivd2lzicZkR-*iR>Gu+P5@i
zzjsU%l9UAkEu{<~WCk<FWOi8+KCgR)EDBIX;oW(9T+<;1YClUj&6lD+xDcQejpSgw
zAOMF_taJzmzC;<IzIB}GG_xLHCfGsXx6o;N9r|n=!R~;bTz)!r#SLb`5>v_!3l;KV
zZT*gLRfaFV8$mw3gK;Aw_U*;=k{s|4wtu=U(L0A)wuIXWej<|S(Qu|V@zNBCCWs|)
z&VjS2(BZ;_*Tl7>K!2<};Ls~c%~uZO?uyFse@+9;<ii?${>fc_4wl$BID*lK$&V?K
zx%YQvW4`uD-B|<X{jE0CWVG349xmkZ{ng=P$o3FdoB$jUk<o{sGb-1CPL20y8$jg@
z&xl0Oo-qjb?42BqjXHozlG-#cU~d4)61qfqoEbB{u2`xf*x5OtEawHf{m=K1OtU<w
zEy}e9O)9&RZcZb_y45*Ty2XvQi)EBV>Qa^@7~Bc$xi<|m;E>@JJZ(DO(2XIrUYMCl
z<}~os8&xQsy%lQMPt!8|ITZIM(SG^Ch6o4*ppmbLA!EmidUE&9990io$tmPo(bJ_d
z<Jq93D*)0vt}mnN<#G*@POzvdV%mjL;<X%$Pazl(VI2)<s!tOw-XEHIIP0O;p8Kx1
z0_@?<KFXG?nk{n={gFD0O6|J2wU=ALQtVKKVMgAVA43$G=bgS#mD2Dn$@v`S`W4q1
z`BFOBcSmbrIlAaEdH{La#Mk|P_YKF5+aaqI_cLa$*DU@xI%>%u5c(>8=tL;`2ZsFD
zEuF`spoMT7J^N>p`F}Hu3VZ?C*`Y?4VbJkR-X|7XgN#Qx@mVGtn~J)kpKwJ3N<US-
z=zkXsL6l4$B`xGHJ6X9$RgKb^6{6y#km6eqjgi=`CdhaLgj7xiL|wDJwkaR{Lu;4a
zQXk5JvO}7@E;Jj>C*kzL6LiLB?T?OcFDVEm+fl5axkQ-NN6m77m*yP7F0p5AkEY8z
z7f>PDI$QFps1OmVn(R)_U`pUzU4W>4g#-Gb#>w1cKDPhV{(SA%YIGNy#h<R)B7V<$
zMgbf#2puIZ-njC#Zb)KQ>X(w9D(8VsOj8_(C((q$XM!C~oL22Up1KzL&)TxGn6u^C
zt|Pc?w%$bW&6mlt{3KS?7%s))(1zMu6F%X!=35ipP6|%o{>#$hU5Jf%==%J?&fB|_
zgGnGN)I<rIzevOd=80c4WHQh-&fvw9r=5j6u$CwtI4IH_i^6QkHWc(-DJzO!kAkls
zQ9qb7;Ttmf$&v=y&$nrcsa3)WD=zNw7BkcfbepSfbnSgX!%Dw_<V>~ThPlZz@#3NW
z$%dPXJYf#}7Iw&(J?5bXT?PwXl_i=%mkE4@%m!n&>(IDsg#H;iD7XF&O5c(eL&2pc
zU4~(wgD&3|V&}vfsPd99w!xZck-maOXUXG}%_8mtth<pS6{|miu#ov`1=jqJF!j7}
zP52bRIovlS5^`n1-yW{?WU(_LrPfwT_(ax12g6$6O5hplP*;yi5^xuBgqfFf>Z$3h
zw!`G5U?|P&TYc_4;W)x>gTx-6kP6sAm`Itg{VobvV4{;CCs%^-a6-?kXjErv;i_T$
z`lNJrUJcWbwi^M1X9QP`1wnF}Ru*dt;j;SPk1Qron`i=1MueQY&EwZpgg<RtVVr7Z
z>XU*F<x+ktK#lF#j$vbYAYi2q2c@?m`{I&8^EVS~SJ?p~#Bn+Kg#W&^51WlbB}@Bh
zzqt{t_#}k0gnj;?B0BzEq2Oz6FD4YrL=Odfbi}qsxC`fKJX+<4>;9Pc@cIASZL7Cu
znr@0c73!Zldu4=^df3|FZWHmD#tfoDPL;oArq>)l`eMR)yWPiXUrl~qt!|L{$u6g>
z>7ZkST=QLaU2cJ9xz!6y{H*nJH$Gz)Hd%Xg+usk@<$`qNy@l;>6uq%~zP$1>$9a3+
zv;Bp-p+BV3E+$vY9)2CfnVIUYq_~n#p{BuQE<?uhsO@=^|8JiAc80%B+%xMRcPhF6
zh<$SNxRfF18{fHL!5jrA_eA&T3qP`2m%cRh-}xu=`Fg*TNv98b7TT6@S6)|L>pRgy
zHRT*b#OvtfU3Gs7m%hLJ{*{!)-XoDZ(cfyGO|gA5$4ocv@z$DBkA=yrME>baQ=233
ziu?9;55t@3%x_E&PI?eyvfrxPV~Na6K89!KqMs~ZlvAp5%E?;(TvIhm&iU&5@>A~^
z@W`?qf0a<-py6X*_veO?yU4NZxtV<@4#n$#x|AjJRkP*hmTxm^ZSUPW$X)yU^a{4K
zi=Sp$TVBgv^t@Mj)7NDS`z=>rUbWPB;xnb|j0|%-`b5j>d{~9cOx_7TFqv`BSSqv1
z!Qh)jfzkfIZ~wZgFD{HyPYr$4@@a#g!Vxb18{vkIVRkc23X=?Lrx|pHZ_eBjw{EeO
z5chZYFILl(b>`Qe$O=|rn#p&d%){#P!}Yd0mao*;7Oy-owScQP!ReCKYF+1zA2XHn
zZwV=$eb}<(Xlvp%#U&HN>!h~%&Y5l{q`If?YQq2bN)v5Ponz4HaZ}v3d8uWmjmP}!
zk=nZbB|cLx*Ug*rtU%}Kt@R%}HpWzIFO8AB61?tiWJuLnCBYS^7()&{I_j@p{jz1Q
zy^lPw4L{e!<NKM-t0yh4TLtX?#%mlYddutC?Jr!u^YglAHmCl|yC`|RlWy#@d^Ukm
zc~z_RkDSey1kbO?Y4wbVtJ?PT(bO#^OD@`fER;+9yCCz_+;r8qp4R(|z8ZTi-@0;I
zm6k1gZm>#{<QHp3>0Z(4{2qxbE?x1mJ-sa?s()Fxi<6P8gNo42&yt_2876w9d{?w;
z@L1B>$)_NcnY4(x!)4YCU@vZ>n%b!Fpb^e2eD|MO(}V5bU)|n*1|aZs^>bP0l+XkK
D!x~4Z

diff --git android/src/main/assets/buffs.png android/src/main/assets/buffs.png
index 6bf21aa6fd3c5fee5c660abde96d525aa3f7f0bf..fd23577533c7947b001d3bb587dd91bf6e10d7df
GIT binary patch
literal 2414
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
Hk(T*i80REi

diff --git android/src/main/assets/cleric.png android/src/main/assets/cleric.png
new file mode 100644
index 0000000000000000000000000000000000000000..01113c0a721a114c152750f278c453fa96582882
GIT binary patch
literal 5277
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
OPBG9m(fOcd7x^zJ8n!<G

diff --git android/src/main/assets/cleric_miracle.png android/src/main/assets/cleric_miracle.png
new file mode 100644
index 0000000000000000000000000000000000000000..e6fa3f03cadc2a6f5e68333518fb13d5ecb41d56
GIT binary patch
literal 1508
zc$@*`1snQ_P)<h;3K|Lk000e1NJLTq004jh000mO1^@s6-dJ~t00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!2kdb!2!6DYwZ941$jwCK~!i%&6zn%
zWlIpp+oz(qfC%CSf?{f9uFgl$@8A~@13^T^)Ieh+6Ei=9OK7C1$s{u(;)?sePXFtk
z|Fv$}=S*LpGw=PNrkAR&)2FMt`&_5Q<#<cVVkvohdvhfv;wI>0Vq&784DeeY7VFEm
z#Ru?yKJ_ksJlEoX=i~bN+ErIqyPKOE=?~RwYHFmd$H#()1Z8PyNhGABczogB_V)Hf
zv<~v}@*-mUwLN{rh!3`iCTV+hcucHh`AC$hZPo9KkNw4n_2Cl$eNv{?wY>-bM9DvX
zKoIP*o}L~N)MJUUEykaQ<HpCwrM$YjlJZaDH-Icuazf>??GTtR#kNCzF-%WSyUEE(
zDZh$>?4kGx<##XYAsYx5hjrNLogMN)z4obnqzUXH<nr=T{A_M+vfrD1923(=3Hi{V
z9eW}s^*pu>LN-aCFW!A}r|UJ)^?!2$fP%pkI4?E<AUeP(=|lHH^cd^I3dTW*4Su5Y
zrs44v*qxo7Ng2|o`2Y+&uzD>ybwOKTo!2U`dNsxu?`@p`faBTz@+-hQPHOLj`a-m}
zwz|2wIX5^snDo4ZKImW*3!kfxeaPwQsasrJl)l)x!ESbTw!r?!j~_`b9US-HzJ1Hr
zeE_5mbUg&G3M{sTeKFU`pCX?CSQH8v8yk}nux@QE)G_!?O-)h))}hPtp`p!Zg0BOs
zZLIzL{CrZ213~NS>q}ZLpBN$VtWe-But|H5zkwVnJgT*jkPc%o)`Q6hZ6GA1gJ7&j
ze1wFAj(t3z;_=0Mn*zJ6V_!>}4~T{DAF%U9ZcS;Yg@pQ1Y9Expeg*tj3=Ivrk&zKM
zIyx$+&S!SMeL?uBtE-dJ>a=7L((6+oix|6*jSp&G^zVKP`k~kM#emC4-p($lz5>A1
z)KpT-L3_VA{tC<e!Ge9ED*zlE97u`p0APKvjYQDI1fM=;W@cP}f4^&MYjYbL8*;y5
z9#vIUvRH?Qht8iouBD~LH8wUnf1<dCh6dN%++6T3#P7D$Ai}rBt_PEtEH5uhX?^0S
zon8+V((o|&_~{3K@PY9dGdw&jIwXN2`lF)YL4*@w5-|8#3!gLv*x4k|!MA>_4?W%=
z-|qPM*sZLrNINtKKp*hm+1cs3y1Lx?`MG;|co4nUNube(1i(&dZ*O<|`}^+u_wR0C
zU?BJ|zAveL3?AC{8-PBLIMC_&GI)RiB-#!>e9#N#!QcHh0RWSL_+*GqfG__Q;O}V(
z9(TD0ebB)s4LpazN9H2{rKP3Pj+p}je1CuMe*XOFUSD6`<Kv?%D=QNpcXxMEM_E}}
z>FVq2#fHh51p}wCyI8}-z?`$@t@TJ6f*s9Wt%DEvT(+s#V`BNzZvg$GsOu!KJ73oc
z`WSp1`3nmRQZI&ziVE4?x3{+vY#j64#Rxq5pP!$lj^iK6f@fJU2J^AIUIQI$=s$!G
zY6z{@rwNjuM?ZHsc06~zu2Zka#FCi+I5uO^J3s4pzWzIbJ_&5_dEc{)1!K3jx82dv
zk-NCKkh}fq=}Arod`sY+%FD|oQP97(wk8RoK|ry%n3E0)l7NYT;PZ%wtxW>-13eyS
zA3&cJ8t!K9Xaw0F^}5g6$C8==m=NyW)z#GxlgmQe#?&<k9)k}X+VOw7V&Isqtu42^
zyX)51*X26^Qd?UqCjbJEZwp)#CnqPV^C3tYeFZT1S-_{>-Do3GFc!iDBfY)7Ni7GS
zNwI<D&Ii<K`(mJV`WcqZm;QIKw-F!KHr9t!l8-pr;_JV=yIXcSz5_ZsI^=}d+1V)w
zz8{}oIrxA-8>A4><1WVht&gNy6lp#%A0F=rxUS>bM34VH&iw+dcD>ANQ2`eK0000<
KMNUMnLSTY~f9Em)

diff --git android/src/main/assets/decoyshadow.png android/src/main/assets/decoyshadow.png
new file mode 100644
index 0000000000000000000000000000000000000000..ae606321f8d96304fdff1d0b0c2bcd7161edbf37
GIT binary patch
literal 489
zc$@+00T%v=P)<h;3K|Lk000e1NJLTq00961000mO1^@s6`O~3E00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!vFvd!vV){sAK>D0e(qDK~#8N?b%^&
z!ypU=;AE%T{eSgVnUJvNSWtK_Py+9hrbOzqLpv{NvV(~Bb;hmsid*Y9ZZ#w;&>GJ%
z5Hqc3#OE3G{!Hm1><J(@7(x#Sk`-u8%VW&Go|e5us~TF=Pu#BJ-Efx%zlYh@Lv)ip
z0bJJ=_wM^zO(qAe{p46RW?GM@_oy0Li#`F|u1M$ke|MnwwL->T;n4o@dbEn+o@qUv
z-lJ-0VfqBn`rgm>L;It7bhu|)58B&n)N$w`kY@mPcv=q=+Ha@zczTVhp$E&}0wmbi
zXUmt^;qJMfuwTmS^&q`#d1`1g@?ErcSY&8t%Lg?zz1K5>_dN%tyw1`FkXwLV&Gg4l
z)Rde6&@+FJyw3E#5+VI-vmuAR2PAL%mw58D8RWkJ_H|FbRHJ$NBar@KUw%?j*>`lN
zCQsBw?jc~!P@;KD=S#J=f6cLMO$yo*mFk&0PVdkE)87{@=-bZ#&_OKa<@J_5El*w`
fbwor&y&T6MYJQO-331wD00000NkvXXu0mjf^c&*^

diff --git android/src/main/assets/dwarf_npc.png android/src/main/assets/dwarf_npc.png
new file mode 100644
index 0000000000000000000000000000000000000000..50d9eaff66c3ae4fe52916c1a859ecdcd8a9d7d0
GIT binary patch
literal 676
zc$@*G0$crwP)<h;3K|Lk000e1NJLTq001Na000aK1^@s63jZI&00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGizW@LZzX3P}QzQTY0y#-UK~y+T&67_^
z6j2<<zq6&}Os5WAJVa2kD9fUwi=n09#mIkD1ht1iIt0O9%BZM4?x|A<)uBWtB9cV5
zA_~Jg1hLKpfmWnT2Q52D;4(Wc9eVBW`Q9{>v$K2b3y<G>zxR1xe(#^c7{mXhz=AYQ
z^CgSLq9VFmq$mnhRrT?X<AiQB%s(QcD}u)y2Q#g$m`bIv@_h~YwXYT3m%pttVu+<R
zwD#Wuy(0gMVg9reYWjYaQKQt;&Q7+py2AT1N-l`^vb5IA&*iKw{O!iZivIkB+M6^M
zZRvyFF-SvvSXkh(4D&c^=6IBn{Ml1K-8sq1wZ!mFS&~0G5a;8<#s-f;{@X=_rmEPp
z>mls~V@oz343CHzz_K=X=~Zw12@bX?h_)x7>$=F6S=&Z(WDuVgUy978n)j}wJNCA!
zzx#%)`Nx=k-hkty10oZyTlX7q{f@gIpQsq~v;QM}$y+dH>X0~bS!60m-ko6>Z0<#d
zQ528TZ8VmgkIz|wtb8}rWdG6RInGz}_kB-!??+BvK$Cue=Saz+{=jcv3;$~V9eO+3
zc)uopS(*F=Zw!U?v_zO`n!FVX1=bbY&C=;~8T)%elAp{Vl$R%TW~ja<fA^Qs-R`U}
z0eK*EiQ)X|1TXk-*FHp>4`FutCLfc0{10F>`MWA#7rVy!<@YSqpBE$_V9&9uxH6?+
z{N6U$zjh#-&7xGY@p17r;=?IIxV-$`XA#_(P;2A+yE$LkANT|6hUVoQHdlxM0000<
KMNUMnLSTY+SVgY@

diff --git android/src/main/assets/dwarfhero.png android/src/main/assets/dwarfhero.png
new file mode 100644
index 0000000000000000000000000000000000000000..d1d50dec68b90c38c6f583b534858c22ebce6c48
GIT binary patch
literal 13705
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

diff --git android/src/main/assets/effects.png android/src/main/assets/effects.png
index 872c2307391f416353a3b518d1b1d6a3b3a84fb8..b423cc6a9fdb3b26cecff9ff23c96ff86a91b222
GIT binary patch
literal 610
zc%17D@N?(olHy`uVBq!ia0vp^3P9|@!3HF&`%2dVDaPU;cPEB*=VV?2IV|apzK#qG
z8~eHcB(eheoCO|{#S9F52SJ!|$HeTnKn>qLT^vI)oZn76=y%wFr!DtL^#`fjtc8wy
z4(!OE{*l9jBh!aT<=h+xkH`1+G4daXYrQPD@JQsHU2&V!Qgmib@jo@kEc4Itvdf8~
zp%)I$-8?Hj{d=3(gW@$eBTqc#-m`Pv)7N5oC%hPM?JT=wevi}IjBok3w!?So)lV}$
zc~r~2{n@LznOl;3#RR0HEcb8jFxivb);h5vw(R_g^m%jMw#XKrlkA%#BJgU?#`7~<
z&%K$-{x(8b_rQkN#kziTe2*<;Ipec9>25|)gU%Yen&QkrH>=tO(p<aRRTR|Pe?^vT
zJH4`0<JO%my&^3xiMM6$8E$@fA@Kae=8g;8ukYqcU-xUC$kZ``L*SNWYxuhWr(`Qx
z(<p|=!a~9NcPBKIJ<eloUL<i?G$dvA$G>Kxj7#`iY!|nu8b<Dm(|^#uj)ATJ=#y%b
zUor8fX9V?PzWdLyI{jgJX>FbK^CuOR`7ISQ7~MDp9yVm&HMKYU^ZfOP&AHFEMTvZp
z$#_4{Kro`tB=ZNq3-5y0Az!O)bWR(#-k)C2z396r_rdQ{Y{JnkZVdC2&Yt7<T+iUL
z<><5Itx-qa6!ci#9BxS&xabzFsCS9$vu8coZ7{8Z(ZXMb@yq|)oQd+99Z?T{#2@~m
u=@Hj5QDuFjjso`yrcDi~)Db3zI>yg)dYF0cMdbn01%s!npUXO@geCxD9S0Kt

diff --git android/src/main/assets/fireball.png android/src/main/assets/fireball.png
index 624406dfa1cc376a0e18f09b6df922f90d32bffa..edd583626bc2069c17da8bfc284ef4162bef2ba1
GIT binary patch
literal 4894
zc$@(q6XEQMP)<h;3K|Lk000e1NJLTq004jh001Be1^@s6+9Gfz00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!T<mc!T}X1N`L?W60=D}K~#8N?OIEZ
z9M^R|b?e#H-P1kO^Wt+xq%=)aQX)iflvoI4gn(lp2n@u40WS<Mf-C|AMiw#PO=4%0
zO@2U@N{|Ewya?bd4JZ#lA>c@kEjXq*G%1oAlEZoQ^t-CNp8mdK7d0GC&-9E&kp%Dn
zr*GA*TXk>U^PTUUd#klK-+WV^$<gKQ-}~}%s%vj(ar#4?wpe%O$BXAstnv7>BHCa7
zOFBAyCI`v=*B(|;WQK-RVf?SK1OWaKWsAnw6Zu-K<Oewae+9v4Y?OR_6N~mIH`hmp
zpH2C8)Ye9a9~+YY&ZtylLwiGy(*MFKCz$~FW~}SF5k&ur^E+(!NiYD7&#|dA17kkE
ziGlE$0zhu;fBH#XS-Pl&DM@(#U`JGvN?LXwoqy%URf6Hf0098xbk7N<v6myu_+!6N
zI9Krf{{sl#8r6SNl8p~##!^QC!m$9*T#jgne1dtbM#|%Oq$ehSd$Z5y=EgUSM2a}E
z(21w%lIU^v;u34p#HiAuD<MF@F??hY(ECaEiRP?`4E_f!@E#{SG|jqKaLcamb<Hqb
z9pwU)iM{WblGFWOAt--ekK;0qGvklObl`Z71OOObM`1!OXaMCTv%><E2I7P_p@Y#e
z<=93T8J?1rSJ&$5)}}ZBz%0-<1$Xbl=$;`mqov~Dd?VFln5GhxT=7RBpd5P)8U3r;
zpNC@BbWQ%=j2{N{{$8>4T&g(*Egkrd@2xq5;76e1rCnj-q=kkj7~eqXsXeOtP$H#_
z(6&#3k-7i@-<tr)@{_E=7&#OGBX7qXiwiA59cU5ShKA5f&_!qm%7@*B4xzlyhepsN
z8(@#|GX(&QdkrZ>ku1RAoP-z#@ADdCAUf&cxUHczz|dY^kk%GP)fr^{=U_OJy#Kn)
zt3<wwC$x1X|6s_*@6!8yXS${jwQ5+9ZVm!F42P3U`Z44&#iQ>9GEa*9<I$xLMT6l>
z{a$kffIE{g0BL&?nS#Cy{T(O`ei}LlorNw#UxmH~W&JetJaisvLvuq;EPIXrzw33K
z#z)-OPfts1S<($PX#tvpM3WT8PI2sm4g6F`9RLe}%#tlUPby}b0r#m1n^;o0f#2_&
z@cv<L0MRVe>slf@nP5<G&oL=PyKxkKT*-`&XJ5>XuW4pMCCb8kX77ZuB}vjC2x0sN
zs%ZR)m}p-H7<oOFo<oo<Kxt%p`XJT{My%POTX$QMv?@wl(NfRR)8Q}m)aL{9IK*R*
z_dv-6he~dI#Co$}h_;C7-0X<s2U0eW_?fzxgAnwefB{mO!6-v`d_%$bO3AR~$WE&-
z77SCvlI#w`MHw$J43unr<JDC%){)uhZ=CwP8$EPE{Z~N!uSn{Yi~+_oL?~1eN2bKF
zlQxQ8V*>`bHJbdBND3L(uOv!cq~Y~cw_tqB89oA;Z-txYpnD7TZ*|J<o!WL|H_J`L
zLi%rg>n}%#AIhMbFwWD6EGeY_D!}fBYOX3#dCnYKn&oMc-B*bbXo;3sD%M;pHXIw2
zScPNq9_9)RA2|RHo%}01q4v-3*5Tw*ixMg9cu4jlISr3qi4pt5SZc`l3CI~3{tTW-
zw&8JP8xjBrhznwa78oLY7#{>6eyJe-rTNB@jZb+;A`@Qt2eDzikV?6#0;$mWc$kj<
zbsdQ(xL}|V3iKo?!y&2|FGC^U`?ykt@&Ay33mnH)VmM}O%+UCij?7x2sDYDq^mrJX
zQJ}khkIu&aX!xvOue>-P+NC~J#;HOhHhe-MG#u%jlS^7Z1>>I%^@Y=>XU(`R(TY1_
zxI3~~Xv%XaXK`La{SvM(qaDG*`!4fdC_@36B=hcZLht|KFY0V#z{sSw1RQq?H@<?(
z72G|Ix>;O0i#AI*w@p*F5Svr9zX)(FqpU@-ETSFzETV0hZc$;HdVHxe@funcfM2Tm
zFiU!EEs|*}2I{h&*H1VMR2b_?_3(1th{T%e$}~y|9BG9H=+7!vW5d48#1#5f+{2KZ
z86Wpu!68HOSfNp#kYVi}4M3&$GoD|BelAkA^HyJ#3N2|mZP_t<@PfXaH9e`JbaAdw
zALDuf?F_Uhh^X{BmYlRh<1jLJxv(I^sgiW?0t%jV5#GIwWKTz_O*!J#O0qsxkZs4v
zjJ#}{V&d2U0A50PVEd|NN)sVL$D5RqCuj&C`Fl|(meDfs4bbqcmgtrVBV>jTgkEk@
zVf-@d(ME@o@lHzGOzezA=~(I_?-<P=`gHm-U-I-*R%D+w)9S^rFnxLGlwTdV&X>@l
z>UJM)!noX@*v#%3Bl^qV{@&>Dkr@7z#BPT#!NjQoJ&&0GJZQh@bfs<gWC!$DQIVX(
z%d=e%Wu#(3Vv;3ak}7c`OP>`zgbgAt3-dgHN<cg%yA!`#jaj~^@`f^pmw1832N=5W
z^a6}q!E&sqDVavDyM!?D651BwcQHJlY!jiKSF&X*h(Z5}m<3BV7b`MYEM*~J-~PwR
zRpmIbX}mtLtEaV4)l?`h0N?^fy5++&BT=BK6z<XwEiDL5MCmAMt2p^7ZXb9CXjp-U
z6)5*;I<Uh|6E0dtS96*eMf8~>(M|18YyiS8wxm?-BFE9h#Y-EBZrGt|#Hmu(BhzYX
zY0!ttL8?>?*WIHK%y+hwqqs=;u*ekO97+d<*R?nU2V**yV7#FVO;E4nx`uYsXkWv9
zGpK(KN?PLb@i1Zhcd*ps8sA`C2YqkhcnctK5Zjl6NM1y{m*DZQR*O=fDaj%j-~}Xw
z7cdcJOwv4%R7F`r9U06f696cOvd<W)a*dsPKfRsCciUnu+>t63@2aOTNR}9eP9AKk
zG(H^TP#PX5xc`ph4Su9Y{?8&6HUNfhY(BD!-4x4RlX+@!Q%a-I07goY`$Sh9ueS`v
zGU#B{fBVnA1?~(UYxj)Dut4R6alJnmsTmUqpJ5@pM*J&gwD-vH1OeM}q8amnPXJ3t
z%(TT13&xg_b{T@%j!cl>^OR)C-#c~KQl3M{XM#jJCTSg6JPdjYZaWP<KkZ6+rYuV+
zS1OiNijG(|dIjqURthEL01OKujPElSK(z?~+y@JIAGBxXeD!f6cqkK){+Wmk?doNE
zzZQxGfS0U+m~(4VaeCQ2$N&x-TB4B&K~<Wj#SxgVXvMv2fl>MZO%9~tg9J>_GGO!2
zb}p(!TYz)9QyVg+wPbFkB=a-2l(sOdNJN9)jC2AM@2#sDBZ*wF5a;~J`vCNA8k8lk
zx3Sb~<HZelcm*`iJ%K#7b6LgnB`5(fh3gjDg=mkpY04Mp0LUoJ%K6-}0uN??1f7AH
zjioJ~1?IrSo&xQgt|i8FN%Wbbocqm%Rqe&a)r4ggDHn2rDHxfFE7by9R58LD1{oG?
z330C08dA8rmL-{#ygW=QjP3OD(YY9b=u{wCmq4uA1LOc$72tse`m_d)Th4duuzcKv
zvOKOL*9c$HlDJ9_uQsIWY)S2NuFSr6cGaTt*xW&K%8-O)akNRaly4q!9OGm^0C0nc
zO96Tk)qrK<#E=d=dndtK8+D{}0)#mLLBJh9db)$_DcZHz9{2GY4N6*MQc2^Cm102x
z#JJnI=?2#OF_Jp=Lx6EfDn(m{MS$Sa%qpKrCLyEvm#V8ez+nRbeRz8l_p%<TpLj?B
zn?ADk`%NTK0Pj{O8}qS*1||?_aP;o3oRMiN##}%?kc9_?Ehd7G!SYdL`D*rck-}Uo
z6U6>~pREl*0tj_X76Fur``-@$Ow>4m-0J17lCPznh1k<cOxaA0%;20vdJqRjq~`|N
z!SzkHLwh739zCD+e9ksB-&fdIumVU<gT^i_N(&yJVlrcRzl)CSG(|#)i8j)VO}OpM
z{yE0?p?6^P_iaP&T86A6bPxm`-2V{w1XvkV5u+FJEE}NWeMc4=mIg*l*D(Xu$|)&-
z{`9IveR)czOIuPU3yhk7WEmO%YjZargCLWjBtck{*7c?|e|)bVP<af-<hL2b-^a$!
zz6v&GYdTcMsoGls*@E7O5(s>lrl-SU1OSA#kO>laI47Rh>6zRspqFl<{yMJr(5`^?
zfaH*EXdrHikR^D2pnUPdYVw71t4S3v3Xkt*)?#J>@F45=xaEuEYfyrU045l20v5kQ
z`2fJ#i4%+y3J`FI5I{ui##r%?fXsq+CoZ-(xz|l1cfRnD|10>x*7I4(`Ig9#pzBI^
zP!=C~kAHJVwr_Q011aWa`+_u(ck$au{(kL&TjH4h2$~soKY5A)lHNi9%_*JnV^L2*
z0%l+aMOg@4DMq%mV@ukgdwO?*a)9%@sNcqQ7wrmY@8LcghdBVl2K$<1dy>XZ0RrS-
zGQ<gAp7*U`K-c;KUV5WW09=JWgjTP&>I+@0%lkvou}U!D@zd~h1NS!p9zJ7;9N>eZ
zD_h6;OstY54l()Qy)Kq~SX@f*^NuwC!>@bqJg5gZ*0Bl#;6cGB3a$|dT9M)WXQYzN
zSeNdwAl;pLX>HbJ)4L$+-Z|Oq&r7cbR)`Jp*@kU-Pv5mUZ#4eo0N5qFW4mP}jk%zh
z%=%Ta2Nf~Hl0;Ea8Zh{Mlp8p2qdvrSAMF}wPj4qc_#Dy`GtwRCVUhs=)TY6p93R8c
z7AiMz<$cusq8ZD^FSqO0pzpo6QSUW6Qf_p`!8P{TFqGUaIr1yV!lVEQU;(C=-80kK
zSaRb}1Ok3sv4eIC#&2o5kO||BWod0M$@<#>{ZBpFh+G-A&WaH`;vrPU1PpG?y!Ipn
z%e6*f;IBn8=!q7$u;S=;W@TgRv^>~6BM({?*(NY}jcp2Ezsq|@x6}AzSwO$^oxd6#
zJ}H{jCw(wxbD|iMXH@D*WZ8OT=`QFdg?cRM@k6A9!=m(KC+M2VRtRUvmx>$+OYRlq
zdkas=TQe4yf;=SaYgn?WMo$W$Z?5T?3}Ot~hEk79Jb3gVN~PKI#78@~<%@x}K0Un)
zBeaH*#9#}hko^Ni2@<uP3Ji6wGWqv_*OTGks%E!Sr7eY~T~U!L!W~?0{2<2>O-YFN
z?qm7Y8x)ZvA^Am}Z$<tMGaURI9zljW2^kn+1gDDJGzt7fS7v0SeXKcqxk?)KjGzm!
z4m~r9)-Z3YHNSG!ceGcK9TpQU{ck*n4*i521c0o7GK1%ajsp;M^|YUe9;T6%Y-63@
z3Z0}J6|ht?`$JuIJ7(HOn11{rh#pDJ*@TQRR=5{{A`AN){aJxWV_AS?kj77CHcX@d
zYL8*jKFXlgmjc%QA=dkw@cJ7_)Yg&dhiHqjVo92km4zD{31HlGZ5b?2A8j}As&X)(
z^t>ivDYOa-Y=V_OV8C5al!*hDfk&dFKKDM505{E~b0gmg%pP(w(!w)u8&P~qrIBNX
z!ydGes}Th|Mig~bnyxeXvt)4*OY%QWl=i$zwfjb_ziY;NABtq^L)E^%F@7$FwR=qN
zxbw!HJOY6pOmAjMildSF!H25=CXb|gt_=9l4JZvxCSfeQ2_*}R?QpamoB@C({|C_M
zi@n`J7N5v(z_82U);_$fy-<-4U<|d>m&IWy6@r2ZAJ`$laVtr|5^?q|f#V&NTxlcz
zb38`^0EPbvL_+e!r{HW?5JJjl$<Tl|Z5V0mC)~Y5)yMfC!2{R!UU|_1`2PX`IEDOd
z-ALs7sQ&q*t51sd%?IP>qC0<&`vCm(N+2+XaE~DW=MN{A*SP`2$>8#gKw#WvtY;g7
zhARbvfgm7-kCi=t1flR*>fHx*<HkdoMGyQl3IS&0%I%d!Swq5SY;<HAAaGnun$@B-
zOYlV0C%3mUCJ1Mz#QXBf6aNJ`5&$R!0Y9|(PT`zNto^ojnJZ*lw>bVJ{~(%w3H-Vf
z%fAPDHuqz9A`fE#8iF27LvZ400Dg+)nw}m_FmOYNAR+A&1WfiA_ZdU74ID`RL1?0h
z-@^p#TSHQ4+}V~XWcd|bC}FMdot>7QGNSTE3oOx<GO~W}{EW0ee<m|_^7h?2KPIGD
zTIQZlIkNF{;npygRy89Ud=aOQH)kMiX5FL2Ym$}D$1Vf`ibJ=c4+Ow&0T{UXLqk6g
zCGFjY@`YK?&IkZbJVOJ4!DA+o1O-FJ#1lV;3FK!F>pJoR0|}lEW6MlI;>+`^at&*u
zZBG=k#N_p*$Hr#AEOVtyJcfgWKo}kFmQRJ@k19v~S1=7qTBkvn;N)37LqTRF2n}$o
zSi4vD<^&_9<bCmccOQA5yZhc-K9gOdUB7;Pboi;1-Nw&lzdFi(hJI%JLnQa4Ppj-U
z;9e!g@7Dd=<oZm;$fq3ul)Z-BeZHSkb{{{J1LU&+fZej&&<E)=nMg!_4HIYV$SDFw
Qb^rhX07*qoM6N<$f?M<+`2YX_

diff --git android/src/main/assets/golem2.png android/src/main/assets/golem2.png
new file mode 100644
index 0000000000000000000000000000000000000000..4cb6e94d38d7f1068d8c60bcca43790f8072c6eb
GIT binary patch
literal 3191
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

diff --git android/src/main/assets/icons.png android/src/main/assets/icons.png
index eca3d78f798469be31d3a9feb6b35418fc0f81b5..bb4f66533e280f933236559a7b2a6efe47c53e72
GIT binary patch
literal 5560
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

diff --git android/src/main/assets/items.png android/src/main/assets/items.png
index 9e40d686f9cda5540017f9752adcda5bbd974a90..b2ceaee4da7c6603bb36f1837c64fc191bb3429d
GIT binary patch
literal 35236
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

diff --git android/src/main/assets/large_buffs.png android/src/main/assets/large_buffs.png
index d45054de5191df363cee53ae466a1216799b09e3..94ea540fff021cc9bbd827dda1080c01a7f04e57
GIT binary patch
literal 8220
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
G;(q`y9q}6g

diff --git android/src/main/assets/spell_icons.png android/src/main/assets/spell_icons.png
index f67c8d12b7f132e037244f7c236843965b930f48..27d1934928859db52c14df860b0a19617282860c
GIT binary patch
literal 1372
zc$@)T1*7_jP)<h;3K|Lk000e1NJLTq004jh000mO1^@s6-dJ~t00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!2kdb!2!6DYwZ941o25kK~!i%?O9D|
zR96(fqof**W34}AG7>SN?Lt9=v4TcH?WSw7#kJ51B5t~CAp`_BE-GDAq054sLP2Pu
z;tyzl&}M2&ThT%zF`0>o5}k=@%tYh&-S^JSefQm$nRzoZQT*VWd)~Qs-c06v_ndQI
z60@_j>NOgSO!or3E&|^G{|Ad|%YU=*Cj#R<KtlwOQR=#H)`Tre_4ww?3kFju2An^n
z{Fn^>dhiDLHh32-f?P)|1g9W^8Sk=rXqW&POc{N*hRa7p`R4-$l1Zna`}6tm_sw)K
z!|N(=8hi{+f{Vc&;18f+6SxwjU@m|Z#xOY3%xoY6;2&)MaVNoDo>{_W@Th01L*OUi
zY4DUO08SF-wLK@8PXb`j`<F46l`&8#l*N$g-hkJ?!H>Xk@Eo`t+%rBj{@seM6`#U>
z2o@&pP8@7&Z{z$4@BnxTybl39#TXxTloX~U2GaxsWe1<2FBC)*45%4Y^V+sK2GNUq
zS4$`Mft)i**gmccBAu=}_=H}I_xP8q{jn45_DuB*)Io&^PJmy-%ofH9)BZK5)_^IH
z<)B`~zK7H#0e8MeE|*i8Oh%Kofzlci+~M{v7oTg+jX?;b5}n|^KL?Llq~G>&UFf@T
zSF3Echt#%(Ip!BJpxE6XVEk(M%J3KPvEDx@<O&KI;1Jl0>l>+_)G^ox`6jGAIeK+e
zGHShGS&0Q(0D9*$;A3NB+Ck7ZM8GwtJhL=9ceU(#q3^DMYIeKRFToX>F#TK?f?40S
z&0q^)hvv)ByRSG|+%x%L^31xO>-ZV$2X4(w=^pP2_%HYfWU0933*$&Kon)qn9lS=s
z7J!Bse1XenLxL=$odK%L0(F6(D>M=1FQc5&HOxjZ)D#BSPB8;8py{n?*7hmSt@2&(
zckvj=;IlDgjpkg|7sl=6+9bu;hz2lr58)I*97F}$%m6}v>P3K`D>M=14}yX9Y4!xA
znlB83ojma;c-u2|ecuSO>u&>D>)9AC0T)0R?HC6^rqxCq1!Ied0w|?%K`O=X8-&Ye
z!WCe#qr~w7AiLZaS(INxYI;<iclnL^Q3RC7z&}7916#rOz~4dE{&&F<a2uEh`#^av
zK-QlD>NrN)8GuJU)zQ%r2smx}eCRbUn8CG!ZHi-V5meLk&DjhJO+@)Mq^3Lj0MJ$c
z4Ik@01G{|W*O4zVa_4t}1b4cm5(<HM#~;^%iA3*EBT7JQxSj(ze<TCuI&Cwc46cmy
zRYG`eRKw>&NC14VtGSD6`sfed1F4<6S^{g=ebcW?0>wdiPXgZr`_K!VrK@F0%SASY
z=nMF4;IG_ZZlLw8*8Q9#p5&kW*uJ@a0OlYBP;BPo__z;(2&VveZNlZRRV-D2_m@*Z
zCCIwqXNPP1+$alxS(G(@F9h&S%hHxh#mB|noRZ@on1Tq7Lj)fp_~#J(Z{hm|ya@q3
zoeu)23#I@n1+|v7H9&%A?{-%P5RrsFyPBtgW|q+KG60*qO+)90envm=8SI(tZ`mH4
z3J$~OQ^2L*&O1Nd`M$HS^JCcmfIJcwSOQ)N0r+N3XrKU^3r_?|2;d<Ez*NsieGKwF
zG-%H-&*R`m%x5sa-JjFJ$EaR<0lWs_l>!EurvRS!`QJY8$Mpol;~<ZMd>}NzxkSQy
e2GqP5DD@mF8hLH7tL@JK0000<MNUMnLSTa6q=G~M

diff --git android/src/main/ic_launcher-web.png android/src/main/ic_launcher-web.png
new file mode 100644
index 0000000000000000000000000000000000000000..af7b46803dafa9d70cd67661821d3d65eb5d2009
GIT binary patch
literal 14627
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

diff --git android/src/main/res/mipmap-hdpi/ic_launcher.png android/src/main/res/mipmap-hdpi/ic_launcher.png
index eee78d29912f5dd64b18c4723c53171a295e9b69..df8c84e445dfdf24e06fe81fd1ed5627965b7948
GIT binary patch
literal 3497
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
XjbyDX+yMxx00000NkvXXu0mjft<<w}

diff --git android/src/main/res/mipmap-hdpi/ic_launcher_background.png android/src/main/res/mipmap-hdpi/ic_launcher_background.png
index 72cfcaf4fb01dcde0f10b15fb3ddad95f254ea12..59b0660136be0ec69d8a861b461774b39df2efcf
GIT binary patch
literal 1145
zc%17D@N?(olHy`uVBq!ia0vp^i$Iuz4M-mPBqq(kz~bQP;uunK>+Ri*eOC<xSTFol
zRawx`#WaE8t=EVD_nAa5iEXS{d?&E&hse8tN9DEK5{$OZkDIsu@4xFmzJC5$Q1j=*
zzXF?2XRarIoufbBUbgRQab3;-DvPks@wVw-@0I7@m+8CudG-6dmjBfq8#t6Y6yzLZ
zY**|uSg8=iJ*Vni*1VPW4Rb%U3%Uq6vcQQsoFBh-hug2QT4ldr*MX}GRwsYGchx4`
za?QWmua?$N_<_bWali=+;YY7hWw|GCS#ABWGH~v5<(coN*`ui7c;wU3Uo&SN+pJ$2
z`+nV+pOx!hd&S>W_01e~b$=DY#5e6uwZA&+zU_IDBi2vR?UGL_U$D~XR90fx)8>%V
zzq9PFrnO#S`+=!Y_|eR3pRXMIdZq2dJF%aux5>Pjfa$1oKHl~J8bY$Gw}#r9o)0-)
z_v*qoEOtJ6b@ZyjF7qwR&DJfC`WEafWc?hAb(>tvcP_D-f8|h!_yVi{Ava(6{cPqy
zQFgB7Mj_+3P~ES01$IaOFFz-b66!34YDe7vRmbn;dcErLy&&lm!N)f)y|>%>ABwA$
zI*b+P&AhP1$m{#mgmBqa`>@ED>6}@0CxCZR)V3AV0>eJ<Totpa7>lYLi~X-dQ^IB2
zw_}*`Suu>+YpQWjYR47P_`Bf~m!7gMKZWjGyCYXxuR#)$UsiHusbcvFOds|2KUz8M
z`zzMlD+6u&bg#;6z~U0SqQH{xqVfMvi#1(&zbfv^UMzmH`&76~D&y7SidPX^-lcVf
z1Rpww9=!MXlfF+)UU}^sFwU>o1Pi>Mf*#{F9d{d-ozhs{8ab6eNca8K?!CMFdv^z8
z3E@mz|J)e=T#o&(uV!OQ@iUzdueMjXdMhqB)c>sU)lKuQw*1A6@Ae&4g{B?vc;Bw<
zeZ6wp-;l{iFdTiZrD9pm#aO+S=hU|vTxDHx&OX#^7Zw+l#Wd80de@pCd3WtUEW>_$
b|ARU5+?t?S{~5%AMGAwbtDnm{r-UW|A=Ktn

diff --git android/src/main/res/mipmap-hdpi/ic_launcher_foreground.png android/src/main/res/mipmap-hdpi/ic_launcher_foreground.png
index bc9f6b7dad83df301005e523583155f90d09b0cf..3afd2612a541e8c78e1ad9105a3fbb42d6a7ae45
GIT binary patch
literal 1157
zc%17D@N?(olHy`uVBq!ia0vp^i$Iuz4M-mPBqq(kz~bZS;uunK>+PNM-BU_s4t#tr
zaK-*YD*xPF8t=GXas5@`cNDm&I>F&c@p8VaiW&vlH?R0f<?L45A~u&ral4q6NSxB@
zyG?prsX@~h1y6TPJedExvLs>N@{gI%W~LuYzjIyMuD!IZ?fvJu(`#m?rfu?>q~eJW
zE!iV)cOuCC^W)z)uh_;ucPiU;f2&y9>$>kncQ@w$T_@@y;K(8fA~xm<*jsK?udPXX
zU;pgWA?BZN`Ooj0v}vyUd%NoMOLEF~{yQ^gP0gR{aku8ba_IT}wdTys?`_ff>5q14
zUz7bU_PV3?&DQ-J-zzk6Bt<LQ{dm+nMb;;?@E=2ma)ZQgso&DSd6YVUk|5&7wM+N&
zm(KY5b?KIEWoou18OHZlc;DA~ZlC|}t6$ykE5Yuo7481ko|^Y}>Ay2|AwPdC7k?g<
zzP8!t&id!c=jKW0?Va2CdR;{Mo9H#l-weMQe>44N{>`$kulD^KkbiQdk9=ylp#vm<
zw)LgCZ(c0vA|QKK!D<%JmsbVy<2(&thp%70Rr~t(zMkmq{m<stov*)lXUDAjcBKz0
zOpiSOf98F7wVZW4Z{g3)S0Z042!DV5b4Gu>1jOE^9b5A^_T4ys<NS^5x7|Ol{qy|B
z_j6IeP&~5DQHQ_dtP_w>XnK)RW?~Jr@Zv?DMM(AwLc&`=%;8HCtBZj8&)kIn=J(jl
z?%Y1`OA;tmc-yJw(IW@>4f!%jKbgPzuWR6d2V2GRy8UNXtkh48+WRGUt^MJi>ZG~8
zb)1ve>#+&KqVdhFm*w31xBt3&eKKQV_T1Lj-LDzok}QP=9ku7~D#ZQ%v@<IHT3mVE
z@1*jl^3%h^pGobE6M(x8LTqO~vh3OX`TXB&9<8sni>=&0J^sX{K6keHJK|+KHl8bd
z&kJ)HjL6M?c~z(Md^z{oym!m<#pM6@pPtNUc<tuicRTvjzN>!Qx#v5Q;#P}SE4e=&
zx_$Jx<tLx~ijVK_?ic@_&Gg8E4Ur~~)<3u>@$&Y8uxC+>8*TQ--LZVPy)pL!8_d>w
z<^td6>ed~oxxVod``hWO>=W(>bv(8Fdd%me)i)in^~Kj~UN(P|2dm}dH0(Q4mjDh>
zzXRP<E10+po_B9QE_~y!>)h4q*^V;b=T!Z@_)0&q>wf|3jN@I~kJm?lTyn&#qwvXA
zK{=qED?aXz=v1#zQmER<q|_m0d8BjZ%g11+DA#SAWPebY^K!Q+JPeNn?lmmi4GN|T
udnc1#P_p1y#0Ziz0kQCBT$RkAU*ao54qmC^aIXgzFAScpelF{r5}E*yz7(YZ

diff --git android/src/main/res/mipmap-hdpi/ic_launcher_round.png android/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..56f1f35f827ed0d811a3ba898313c534b445cef6
GIT binary patch
literal 4423
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
N002ovPDHLkV1h`Sg7*Lb

diff --git android/src/main/res/mipmap-ldpi/ic_launcher.png android/src/main/res/mipmap-ldpi/ic_launcher.png
index b4d043d44dbf94829833a23ad44b43148bbe7c60..5191d848277c972a14a606960424d2d1c7271f7b
GIT binary patch
literal 816
zc$@(+1JC@4P)<h;3K|Lk000e1NJLTq001Na001Ni1^@s6;Q*MJ00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!vFvd!vV){sAK>D0>w#0K~z{r?U+kz
z6hRb)dlF5eViF>{5fvdQnU#bLxDn%T5Eml26tWQ9x-ldhw}K17jUa?9#NVJIh%h0z
zN{9&Yfg2@0B8F&^Y0s&u+tXcEb@fb`$08pbZgo%J+jnlgrlu6t=`mKQ8Jh?F(=kYF
z6vFmZ?~|LoP(QQ}B3ni~>dFoM_CtM;d>ID)3(+?(DZY=s6xoLUKsyY|BnGPwqBYor
z%2ae5W&`q7iiwQCZ$)2f;CB}08^pw1F!_V<`>ZcD@H+yt&V&v?r|`fsKM*SS@94&%
z)7sknUR9=gb5>cQX}_sx4CVu~W%-7Av%@flUM56IUv?7a(8DepgwDlZW?t~FP?|L3
z`Q$ZiZ9dK^6F+Bx>oo0mZ2BV18<`zlL%l+q%h?Kz&+A5cT3ef?8D-+dtI7&Z`wfhB
zXNC3>3b8lKLNuPx+AFOPMW3@sx(s_+rpsJ=QvC9~X*EXa!fVq4{=KZhE;E6eq5<D<
zg;L03w(y7>bC`+CdJ#+pdWzjws7-h)<U+pj!qfV;aQ&`n7#`m?4d8m-N7q)UD-+_6
z@!H}$b?qhec^(C0^S65}32pKYKk&)Ntt+Mh(rp`8Op$>(#2nN-{+xg=VPHRmRXC@;
z*?-c5lmYKO(QPI)KC0US2X<)MV?f`4c?NxAg?J|V4!wu6$SUnSK@>nGACAL!Gly;I
zG9J>_p)6cs8AL3wr!XtRsZQC|NpQrm;JcYaGKM&y{;z8~2yBt{#EBKh0pHC$)EJ_8
zSS(`<RbdsG%{4z*F|0V&7^=YVpt`{d<s(V#CK*yNj<-VX#8)BTp9<|jEsAVNLdoLT
zA=IMC2D^*!TzwQOLuVj$@P}FnXVwqsEwluEg|;LiR*Eb35Of$)2Y;xQu$%bD)-UKM
u#C5192@xj1s?f?{ZzXEofn*JYjiP^SA|KPuZOg3y0000<MNUMnLSTZ`HErGi

diff --git android/src/main/res/mipmap-mdpi/ic_launcher.png android/src/main/res/mipmap-mdpi/ic_launcher.png
index f7a374b06d7c1e87a11d1930fdba3664cbcb0136..a082d5aa54d54e8b71d7df38201933297b3324e7
GIT binary patch
literal 2979
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
Z{|8QzG@5;7!xI1i002ovPDHLkV1gK)kCXra

diff --git android/src/main/res/mipmap-mdpi/ic_launcher_background.png android/src/main/res/mipmap-mdpi/ic_launcher_background.png
index 825d3118fb21e3e22d3773cc4b3a66f216209a6b..f9d577e9cbf98a22b4d6357e8137c77b8a2ba6da
GIT binary patch
literal 668
zc%17D@N?(olHy`uVBq!ia0vp^IUvlz1|<8_!p|}=FeQ7sIEGZ*dVBYv*AW8|)_{7?
z0P$T#3!A!{{{7$nB1@yTv?4B8v32u_Q+~ImEBj0~E7revf8PGOtoic!tINu(H)lP!
zE6@7+<9Pe;(ACHH@3UDOWm|8%?^}6o>CUXLpJVIYSN><Z;dt;B`z}ULeGAzGUw%~W
z`y&59<0~^W8;`^W);CuY_bymhDt>`CA-v#vR{htSuT`(_?|z)VR$js&;Xs3K!q&z6
z`5dAOtQKUxK3Bf(-ObnRK#c|o+&6Z1MujI>eOxVkv82#sZpAX;`-`vegQN}=ZOA*|
zCZ2uy=*^3tmnLk6if&6-%(~2+v((|$^t@dWQNQ1-9eT-pBJvf)yuZw6wjB7fEa5$S
zSGB&_`6zpk?Tpa}>V7{;DQA57C}aDNne+5x*Z9WE%w1Xsl4IV+x>~kO+~!w<VeNt$
zde@c-zlJ$LY{UJ!&i;EMC4ZMQU*dHr|Mx{LZQ8F!MxdV~_8+f&f0py^qh}g7UOaji
z2(|w9?7lBg|L%?N@|0&-roVN`-?LB`y#C()_q&Vv-;Zm)ES+}o=#xmO|Nr{Bn=8Cj
z`&1HKw(Dihmu2uEecQJ03**C_+2Y^oR;FKrSb9UuC!()J8D!pMc{LsPU4kI9Px1>-
zQ@+aqa`2OOPje=axjz#R6)lkl>6!7zAkp$tFVLTCK6NwjYvw#XF^>i0s!xYeHM4%L
aXWn(GwfyI2&NyJIWAJqKb6Mw<&;$T*FD{q>

diff --git android/src/main/res/mipmap-mdpi/ic_launcher_foreground.png android/src/main/res/mipmap-mdpi/ic_launcher_foreground.png
index 90f15806d9961a792575a8ebb49d60b0d52c0306..e52f110291c54fa35e792d1b1c836bd37f01a5f9
GIT binary patch
literal 1864
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
VY{-%}=FA~EEN|JtYfX_U{{@W@kHG){

diff --git android/src/main/res/mipmap-mdpi/ic_launcher_round.png android/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..e4138f0b59b207c5c0fc88ea53ff1c93f25c1799
GIT binary patch
literal 3287
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
V?z-Rt>1qG~002ovPDHLkV1gD$J(d6f

diff --git android/src/main/res/mipmap-xhdpi/ic_launcher.png android/src/main/res/mipmap-xhdpi/ic_launcher.png
index 9166cab1d8df182154bce9674256f1cefaa69e1b..31cb8f19c18478ad4f6e1d4fbca207dba772f301
GIT binary patch
literal 4584
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

diff --git android/src/main/res/mipmap-xhdpi/ic_launcher_background.png android/src/main/res/mipmap-xhdpi/ic_launcher_background.png
index 3414a79f2fc1e0c6b58f7e6033466805074d8aa2..89ed04142d393a2634776e61b7732db6cc64d833
GIT binary patch
literal 1595
zc$|$@Z)_TM7(Td`b1M|GWs}HSy2SWJTbNGG)^><u299=rT&u2CFmY~~4JEc^O&LAt
zxx{^#nVFGxZnY*W-CzS!qYxU(@j+v@m^Gs<NIck*#qMAnT?)fc?#^q)hNMgJ!@c(;
z_df6Mect!^<<1>y-Ot<n+-3j(cq*mh2=k7tJkM~Lc&@HK1ppkjN+CbmA5CGqzS_1+
zP%-1*vPJNQ0#KT_ZzACBU!ER{Pexx&edtGb!YAwn<x9CHa*%r5eVinh3VIWjd3^sE
zX$-fKl*gs1btZB!S)lZ7X$?7;JtK|<j9z;nZrVqtQ?v>-<6<cafNBN=fOgVCa8%Ic
zm>G||ViHnprgBgCLTw)6GD%ydMF29Pf;&vHK(2d_HVoZhC!9I}<3;MdQ}zW%%yr9?
z&tdT}9c6Q+B*+nJ&6|Wpz+wWMqox@U+2KxDh!}tmg+#mkzO*Omp^Q~hG{axXdqG<S
zrSu-OUGhy|m0Hv9XsED3@7W}UaY<7G?q=%Q;MLApU=b8mt;jPrqCQdAfcwONej&3w
zZo%o}@eK)$P^8y_BY&PkjzZ`0;J0&2rzHxT%sfHgzIS+y@HD0f{Mo4gBoFrCd~XZ?
z*CvzuIu*`Wl$k@asu$`ofJ(meQT3=gpkZ3grn3PLQ$8eHNgg({{spC@xdPr8Ky_$H
z>^=aGH8e+FF@5|lZCr-R9EL$ZgrJ|Wg@fG}2+qT4IA7OETai!8%36GYCwsLa<gIM!
zg4TJ%?O}Ii$6R}rYIy9XQSd>tCJ*YdDl3k3GL{pU*{>mhekS{^rF-U7-|Hv$YS#5H
zES<)aV`j`Rw<EW7D2B`sa$UACA)YO3hwnf`4tn52c1|TTLF?S5eJAJ3S#=NUtGvp8
zCj^aP!HXF37jgC%VhJyIP$Tqy7V?Rnuh9=MUuC4lOK?JP&!p?WZ8AdElGnf#FM>TA
zyNlF2cz0KCRPrO`<!OPPzAgW;gt*=h=UI;0hXn6J!{3?URs2l*@;uzLc&!Yj!+&VL
zUTV63(<d0N?Hrk2v`#Nxqy5YXRxkM4O_!Fce3Sx`IyW91#e-KuX)DJ@TTL4ic4$MD
zHvZ=h-jSN!HmIZhPTVgTp@30Jg6yy4Zour~Mu_0oIDd9rcJH-j;Zi1O%WINb%h<>%
znW^degICw=oowuXnH*$VoePBN7*oDzqo?`FQ0-2zrdS7Iw1KqvGTJ+tvn~I}v*IsW
z#j}R*Wq!F&G`39Ph@R9`Un(!_;)E+?Y2jDTl`aUEMQPaDw=LJ^d+~SXrvRwlZdEwn
H)DHavfvBM|

diff --git android/src/main/res/mipmap-xhdpi/ic_launcher_foreground.png android/src/main/res/mipmap-xhdpi/ic_launcher_foreground.png
index 8bfebeec519da948ceb7e47f8a5a1be125fdf843..271f5b951c6e3b80e36b2ea17d40843b941c04ae
GIT binary patch
literal 2640
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
P?CRDQ4(8RSFvPzB^R~Zv

diff --git android/src/main/res/mipmap-xhdpi/ic_launcher_round.png android/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..aa18c576b0c56b210a6e054d7f9fb49d35a35aec
GIT binary patch
literal 6143
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
R2-*Mu002ovPDHLkV1h}+kF5Xz

diff --git android/src/main/res/mipmap-xxhdpi/ic_launcher.png android/src/main/res/mipmap-xxhdpi/ic_launcher.png
index 9fc9f004a87084eddd3934bd74fb4ecbf9fd556a..bbe5bdc1522113e43eeac830ffc24c2ffbece8f4
GIT binary patch
literal 5723
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
Y-@9Slf*jH{01ua<teQ-<)XU)i0++_m!T<mO

diff --git android/src/main/res/mipmap-xxhdpi/ic_launcher_background.png android/src/main/res/mipmap-xxhdpi/ic_launcher_background.png
index 2443a53045dddeb11f9401dab47d403b6ac486a1..4d53a01c353a33a70b4eba3f6b3fc3d452934ca4
GIT binary patch
literal 2917
zc$~FXe@q*76u$zc3`Dv_R|C>DZt4=}IvfF0y!JXv7zu(HqX}8*CPwIH$KvWrO1lH5
zv$HWQnKAogv;>eNc9bBuRw-?X%<Uhvl%sUEvWn=ibZ6PRc3Zpad2NV460)e={<wUT
z%lmxZ`@HXa@B2=_T3eN$TbK&~Kz{W;$!h?>kfgqxZ0e6}rRp*O<n64Mh+l8>;R_|^
zx!q5E=(aw+y|?4zj57eZ{VLgTfGHmTMs;1K$+h-hy{8#`@BXbw)Ng!z>CT9^MRR{u
zSZFdt4h^^>zebQ2>R3v6TLwZ#VVxkLY7I!XX_GNc6n=-~cd@hB(Gi%Jo1uf|L~JHQ
z!duy@>jIu)M++okV6!ex7O*kaq1JP9agBcxGdwGG$zdQa8cSp1-gPmoK3+$TgvhLC
zLs@;v&K)_tjCvA!EQ{Saw5}`XmP@8h2>$};<M-M-{bFmCAfN;>?rfk{)SV2w)7C_2
zV@}p!vb?thqtdcTv=>p_mG|2XCV`i<CsJ%f@PB4oH;BXH{qNsARxu;zND<Cig#Qdd
zEbuMH<8E8hbt8rEOKwoa8Z3}`DR%0-Wf9}~T-dcU*!;0VUEKHso#}!f(b-r6yonV&
zRb603CWqBw)BKpWMAPnwJFC(J53Zko?H7Jt_a=X5&m;;V+6kW2s2m8JKwqTCVt5FS
z@;>F74ae(M6}s3WsU(o$X5Y&R?dQ%Bau2Pg(9J06Ia;BUb6Tz5<~#an<U5t8@_O8<
zqFInjFzrlS$@7KwD5lVIsGUHx(|c*wa#%buzC+LhsW(UEOQmdNco_}+)&JRP%0kMX
zA<5K1r5!C4Q8wGI<Yl;lG~Fi;h=Sb2GYg(HaNnrol=iHmdKY%jB5IuB+Ta@y*&IuS
zRZniPTh?ISuDchQw?<FG-SQ$~F`h3PW)XpYn#Y;6tVZ4DD3&C4!wIT);^$*GGYEP+
zQ<nGh*rV;pM}Ca?3hV@DmyKn<&{*P1@ol&}&9Wl<zc>BQt7(GXWtHNqBsvufe!Gkb
zf1h#a?4XQhIn<yDW?n3xMtOsZpX9Ey=4Dg_(4Vqh9H~_XwP#vS9_dy(aJ|RR`7A_E
z)0(gbHg+2Sk}=2x6;pLZcyzz#>tuL=W+7kbjsDJB+iwE<xtFvh!EpG*D1qv)rCxO!
zM+?d2S;~Jw^Nrc=6Nc1VW56hZ^rou``VpLwZ>`u@UZegBWFGOf%Ptyl{h~kOA;CD!
z6HI+Dm^H{0;7iP4d|;bahPw@6G&)DWqlVtwN292I+%HB8NF*duQ2UH8{2ZZu2z~Q`
zUtD8rv)P3<+1o;e!?f!K`d1pw{K4b`HIf^R@}faI!xs|aO<QPQHmI`pRJwy%v-+XB
vBBb+01&9!iKjEcmN;hSn|F?I>f|LB1WwdGH^7oC@`V3T8)=JEK4|M$joEK|x

diff --git android/src/main/res/mipmap-xxhdpi/ic_launcher_foreground.png android/src/main/res/mipmap-xxhdpi/ic_launcher_foreground.png
index 1d43b18c47b8d43379a7bd3c6a615a57d0e6e572..6c5ccf8e855e8e4f10f3fb87de4bc9553837cfe7
GIT binary patch
literal 3462
zc$~FYX;f3!7WTD7C=>}*nS9WQZBeYCfXEbVYy?3Kf=EyV3KSv*#gsw_QKE@Yg9NC8
zK!Ctf1hg{6P#MCY5<oBzAu=QisZ22?gAnGB<RxHzV4rLGr+1yZ);(w6bN08tJ>8pl
z1m>!(X{5Pk%^GdD15mFuYyJgQ-5P6^D}jHywkX#RyFnq|aU9`GKVojE;lqg<n{U4Q
z!m{o@9NKg<J!Ah7`$~@9UEt$KXT7fKeggF&HeYyEQCawWNB=&45ahcf?hv(RTqW?~
ziBnqX?S_|t_IlwX-tJoNleHdh8Bs1{Ib>NFuR<#Qn%Ofpeuyh3VfDje4}QJoAGlnu
zyJlo~ZQ<Q)@aj9|%yiYyj18Y6^=8L0y3UPJqLZDEh616G4J!r|2=D{~beCspo~oJd
z3c<CT03^E($-j&qRtM`?$WOATX&w$}zwj!ps&(iVOU?-nueP`2(${`TPKsSzyAVGr
z-XQgOpM=;LvYlD|^H83?out1;fTqKGsZA6K?g?V;F1?YedW=rI$sLWMvh^Nrg#+=I
zorm=c<@#>pVUMrxV=A6<U&A`q1v`cLGov4O_vRr->0ryVN(0yu0=WcnC4{#cvEe>o
z<CF~E%}X7y+Nl-hu^tK$+yS+8hN0|YPXG<QfG7u%(0d`kC~KaovvHMB_oG<AIme@2
z+B=&fc*WB?76w_Cxz(kSBzaul?$AK2xH-DLj4OR3Ndh1hjz{@_6#MN_AM}4cFSeRr
z^hOsofhV$Jz)ZX-LTCtwy_9@{FmcQTr}noAQkGFTNT>Vf+pUjX_B218N4ig)=-SS@
ztPR&@bh4^4cd)KvqP~?b%=Gcn{kbtv4+_Yn+Wf{k^vxLS33)Iiw>!<8`AfB#3AK!8
zAAUGuHR)j}n^;>~6NSYtZ|#KV-L=xV1=3tGtO%e%BsZDQoVEBe>xxOk2_S${fHQE+
z8F<wn4*Br_q+~a4D?w;NKe2_dyw#MTT);g6;_YS_dstaVxyD&EdF`Q9`{*<V?zMlI
z*lNqt%Y-Fmrpa1EU;4<L2kIs>E*=+06L9@O5F)ulbXHIa8uAZ=Oj%G-q*b&#;N~9H
zrjwJIPI<OYGWtV7bnn<ykF^}Ub9>)j|Cwo_xXhB)Fn(vg8E1$7-rRUPXguuCv}Rn~
z*{I)~Sg-Qp7`1skRNh<OO(6pA|0jjm3rd)aZ0~I0$w{_OQoi6^ck8IwsvPsXVEhFa
zTP9d2E3mZGqi;*S0S;i91$%BKWEQns8;cTKOUBVK4CQykNqZzSNsWT#-RJ2#k_Ni^
z+4oT-De5oRu3eRM8=z}->6=6tus@brbn*D?^Mgv7j5pHz*@AVgFfG&XHG@l)L`2Sl
zdW}}c=4Au=r=2e{X0j(<JuHbI*$CM{Ptgn(M8;kTDF*0@t+Z~TNcB&N%Y>`A-%7Bt
zAi&Gxw@k}MS;wWfnVU6(5rAFG_TvaB5}=F57z}k;sl-U1-ez4@Buk*2{y{WjugsT<
zclk15K?TKUvT2N!(Lh+KZ>8WsG%k)URJdopoEdxQ^yX52s2;uZ9o}o30bL%yY23>9
zhOAT{YETL}$K#}vs{&~aW%F~TTvgzY<SJvm+Tq4JOhJsKG)C$1nArb0c|^MuJlvj$
z3HXX2TTZU{+3LwdH-akHA|;IHPxubEihY4PCvUi4se4vSio;SsFuq%|GwZ~9Rkg~k
zEc(lZ6NHxhn!lxq5#B(dh*UV<V>Uc>NdV6J=V8|#wN;vIXO6SuU-VX1!9T5o+MehP
zT`HVM0HePB>@6Gb#s~QtL5ClM|1=^%zwt-{OhhyuEd12RHu4*CjqUV+Jk^8ups~0i
z2M*8A5gk7N)aP?_hJv4x{=fz`v}-&*Zvw?|#J@1vzL$D6(fafVn1f_$2@VNP7R>q@
zy4+oA28h1I;tg6ubNlDH_0R1G>bK{}Um#o-=p@@o6Ja$E5c^GRSr?|{b0w7JDCp8q
z;dD{?!)6J%t|}pum4LT^2@{)#k&=6`*<8Q<C0!7~URIrT`TV0O<qKD~5r*|f<mdrv
zMxt*4-tJzDWmhuB^uva~6P!}hg+%@YY@JD%#2E>Q<QLCCXRwmaDGrC_I(4p^|6BSX
zE%XU%fLhT4&h_Jg1skDi6vLxYKrT7~*%WwEXe$Qqu74JlCUO=(eo))`;duNw0r3q;
zE_g2M{><#q>6{vQAEK~wbOyq7Waj$47B|L2wspvZqLl@g1gUF?iuW5B?ze~B-huBw
zBbfwCd#8i3yoq5g@Sw5&EH=}rsAhdCn*nMerA*a(zF!9Z-fBMBgWd`>ec68QXvwqd
zGXXDqGDr6+5I!2g1$YBQHfjv%!9gQ}iz9^fRzxp&=hniy<5hR+Go>^3^GwB~O#n(4
zglOI2D5*9R)>%_nzt031F6((WK8R$S0i70qkS{vOL7fqWmxIc(;qF(k)P;Y~OfTT|
z`$lA>i7ep;`rDInPkzPq^H~CrbHz@@{I`p4G6*qZQqG8D#A*&5F!<<iklU9V3=21+
zsf&x<u6z8CxZ}yuFq5=|MSOW>$IG94f^fdOa^y3@DbcW*H(614&PQa}OnSfqr;zU<
zTtk+KctctU{4Qr4O%Xawq<eEpi%%Cx>$CurPV{(JK{Rt~XC+yL6r3buTRQ^SA6L_8
z>c~|4yEd_BrrGCx<d4Nj&*X80Rxlnv$C0TQ?(oR>j)6(%+5Zu>rC{<<=LJNNl_}ot
zrsa*9nz99fy(RWlYv47ktQvr;uBd55E@bh|M!0G97Ec?CF#*|F*<AB`%7e%8b6hwR
zCf+M8xQGtv*r4RbfD9p`yf+zY{ViD3H_<gXgK(exIHUlHoMw+tE{<;@*!Q6V&w3uk
z&;7Bn@Rz2V9v+8!kWZ8L>_HwL%r{JBKL_Q-9g>3+L1P0fq(oAlN^YY$JLi}ae)$m?
zaroSxU!}$)h4X!_NtV0?5gTr^n@|vxVlVo25%Y!Oz-WSc-2P-Sh&LMerJ`r^dzq!D
zJ;dk9tj@n#3_pfoWw)7{5q3J@48(-1S?>|todO|pll2?9WgNj=?$EIwGiPcB>b%-6
z-a-h>$%k%aOdr<iXf)HM*I|tEcXZI4<+==7!lEhU_V@Vyp?vQ|aTt`LY$@-#O|gfS
z;$%ADFq>3#(OTG_ri?WK9h4oERj;=Mz(qx#4NfC@?mR*EbRZ^Xnk~8R;e5~c^iXrA
zO22qv0HNtyVAkm*&VvFaqPFTlrK$PWjQV1#+O>7s!AV%JP}d{-OXeR<rI{<$F1770
zjTMKhT&k;bRk9LL(<ZuH-?eYI(!k;@=}=BS_I#<%XE{L{!KIj=(emjKjHEoj0tz&|
z39%{qLwU?8qH<S@hN<xv^s>7w7HpVlTNJ+D(Tq?T3QXo-P#)Z6peoWI|Dg6y{C`}y
aC094NUh<vU$mCC|x!Zmiv~1rGxc>s;!Ubyp

diff --git android/src/main/res/mipmap-xxhdpi/ic_launcher_round.png android/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..064ecd0273bf17f7891d4789e2bafc5de561014d
GIT binary patch
literal 9078
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

diff --git android/src/main/res/mipmap-xxxhdpi/ic_launcher.png android/src/main/res/mipmap-xxxhdpi/ic_launcher.png
index b5787b4b0d3a156054822f6213bac96614ed81c1..87ed85d301ec9ea9e2169b9134b15d6f2802054d
GIT binary patch
literal 6778
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
H^W^^kfB0yt

diff --git android/src/main/res/mipmap-xxxhdpi/ic_launcher_background.png android/src/main/res/mipmap-xxxhdpi/ic_launcher_background.png
index 45532c373d9861e39bcc9e0b634eed53a8fa5b48..a3e9400d9e58b00fded5490139859b03e6d68c3b
GIT binary patch
literal 4768
zc%02waZD3e7=PypT_{jzh($LzUAB-dGCEDROvNH$Dsuz2x!|^Fo4M#vM%}=<#kKD=
z@`s6YM3O;Vq&RJBvN<|KD3Q^-#F)6m1*FSB3f3%(aD%f3j%(=g?)J_&6xN1TWoeTp
z&AqSp{l4%0e!us<qh%$V(o&YC007d8Hy6DP0O3}@PbA|fS4s>o0I+y>anXjYU-a{X
z8>%wi%P4xQ?f1p}q5Ls+<DNyE1-bXbXP1;6&G_o_!FPAxaq-Wru4-yRrADt3`gCkc
z89!LFqsjh#bvSTfe@{S>#bu|25R}5tt>L6n2*Xn{nkud7fl!*{OiI0^e8eWF8fg3*
ztTvO$nXJ$P>7{OhOf`pljcjVB8IX-Ku`5!Pfd$D1M2@x~vY)Es$r~~;AWOcG2SFgT
zD8C}|Dox;s5z3rg$*S*}&>6^=%{1|b64o@TIe-u6=!+1Aa{%WIBvGPf;k_S)@!~ww
zc$Mer?fGm?0q@H$kjTFDc5Ba2gO{mcxPV2mp%LXTqH(TVQ4!6`6+J5EKEDIDP~Dvn
zv}t}p<VDmP2yots7Uk9qkXcc7<SL!kN5s?Z8BsC5+?eG4L3^o3JJ?S+8Dr<ZTqFf8
zE!T=QCuAg!?`0HW(t%p-j64CyCW!=M0;JLP3dpv>0w3YQLLl1^`b2|)F#Ex-2;iPF
zr~vMfndTm%gh=h3vruITo1M?{`c+P<PAKfiX!c3#kc^evL7@@&nOe_(5vE}t`52W)
zfW);vL>)7tV%;#9VlF3Nr&tkqOy?TcE5cc+!Y+>cWf=>vUK1bnBXe%Lu*gxf%fBB*
z6FATP!b*wJzmv}DPdbe5d|IUa`V?mnO462)|3+yzG?8$&l}kHx?);lV$V2WiDp*(w
z;=A$?7*X9jK1R*EWqoH`ar2DnT%S$$8<+FC0ts1|MO(43zC7)SNYbdg6f>0{jEY&f
z#)a;NA=ft_<XAzuVjUVKwuvDR!|*V0EfOEA)koDBfks^+A4u_}O1)ddl=-;YmE#d%
z>{K6}iNxhwnfLykuC8dN;X$4LeP>Q*-HX;k99aozpO)_#>h+fWY|Tc68xv9dJ`=57
z+M!=nrO-|nA_l#t$I8SQ^dCLyF0<f5_BJ9<>^Rq(y-zA+#oA-s_<_@Z?o@O~<X}gf
z7BbJ|OmcJj3l4q1BhP>&zFw9**h-<G&7DXzFSQUqX0f6+$z!?_;zt^WE1B+9h;Ge0
zGGIIHlqaa|A6G=5E~9knF?BtXBVySLRJTl5Qg=k%O)+5iGQ2`I<1^uQoK`pgM-<^C
z_t-_yPqCk~eEoVxKo03m#U_QY@8{_5B6<Wl#L)Yg&BeZ8TbRb;!iN-3b@MJHmxRtk
z^vVp7qaZr#)8py(jHno2u8#iOGr!$2{71S0A+B~W7l82K*ClJ}grLW6l8~z_596Lv
z_0^?IBqorfT_x&#N}fz_N0Og%^Fhm6bv8Ut#yRpnLVM>f)C0s}qKc_|3DIY<Z-G-c
zhPY6JEcwxJ0!}F%%gVy|Ue%5YFAI~doWWA5)gBN-E{N>w66{<p&s*Nvy%HVbiB`>k
zx6EKw`~lO&fN1MsS`yB-EW}DH%@Zz$$tsg3Rbd4!(8g)DVUHMylTq_+S$%?*pfCZ%
z@qkQJK+uox0JY6nSifm=)8@Rw{g31S3c7Qh(K@h(BiqBlwYzof1%|=bRYf`;k&pil
ro3E-XPd||2*cCO!rs-i;k){@C9p%^S4quuC_*48^NzqS*=EMI0JM;wY

diff --git android/src/main/res/mipmap-xxxhdpi/ic_launcher_foreground.png android/src/main/res/mipmap-xxxhdpi/ic_launcher_foreground.png
index ebd069fc712cbce71f9f1a1870ad7a772b29da56..b0bb41e5a39c0170d8162920ab478d9abb8d17f0
GIT binary patch
literal 4327
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

diff --git android/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png android/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..e73b465caafac85c4efba163df0e0e1aaccab627
GIT binary patch
literal 12102
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
Y9a1MN(ntm|0#7#;1r7OXS<BG>2R;g^rvLx|

